
I01_DHT22_SENSOR.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003f0c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003e0  080040b0  080040b0  000050b0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004490  08004490  000061c8  2**0
                  CONTENTS
  4 .ARM          00000008  08004490  08004490  00005490  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004498  08004498  000061c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004498  08004498  00005498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800449c  0800449c  0000549c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001c8  20000000  080044a0  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  200001c8  08004668  000061c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000334  08004668  00006334  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000061c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000239a  00000000  00000000  000061f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000008ba  00000000  00000000  00008592  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002d0  00000000  00000000  00008e50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000001ff  00000000  00000000  00009120  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00003961  00000000  00000000  0000931f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000033b2  00000000  00000000  0000cc80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000b9d4  00000000  00000000  00010032  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0001ba06  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00001b64  00000000  00000000  0001ba4c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000008a  00000000  00000000  0001d5b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001c8 	.word	0x200001c8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004094 	.word	0x08004094

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001cc 	.word	0x200001cc
 80001dc:	08004094 	.word	0x08004094

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	@ 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2f>:
 8000bb8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bbc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bc0:	bf24      	itt	cs
 8000bc2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bc6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bca:	d90d      	bls.n	8000be8 <__aeabi_d2f+0x30>
 8000bcc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bd0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bd4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bd8:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000bdc:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000be0:	bf08      	it	eq
 8000be2:	f020 0001 	biceq.w	r0, r0, #1
 8000be6:	4770      	bx	lr
 8000be8:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000bec:	d121      	bne.n	8000c32 <__aeabi_d2f+0x7a>
 8000bee:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000bf2:	bfbc      	itt	lt
 8000bf4:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000bf8:	4770      	bxlt	lr
 8000bfa:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000bfe:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c02:	f1c2 0218 	rsb	r2, r2, #24
 8000c06:	f1c2 0c20 	rsb	ip, r2, #32
 8000c0a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c0e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c12:	bf18      	it	ne
 8000c14:	f040 0001 	orrne.w	r0, r0, #1
 8000c18:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c1c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c20:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c24:	ea40 000c 	orr.w	r0, r0, ip
 8000c28:	fa23 f302 	lsr.w	r3, r3, r2
 8000c2c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c30:	e7cc      	b.n	8000bcc <__aeabi_d2f+0x14>
 8000c32:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c36:	d107      	bne.n	8000c48 <__aeabi_d2f+0x90>
 8000c38:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c3c:	bf1e      	ittt	ne
 8000c3e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c42:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c46:	4770      	bxne	lr
 8000c48:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c4c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c50:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c54:	4770      	bx	lr
 8000c56:	bf00      	nop

08000c58 <GPIOx_PClkControl>:
#include "GPIO_Driver.h"

/*
 * GPIO Peripheral - GPIO Peripheral Clock Control API Definition
 */
void GPIOx_PClkControl(GPIOx_RegDef_t *pGPIOx_Base, uint8_t EN_DI){
 8000c58:	b480      	push	{r7}
 8000c5a:	b083      	sub	sp, #12
 8000c5c:	af00      	add	r7, sp, #0
 8000c5e:	6078      	str	r0, [r7, #4]
 8000c60:	460b      	mov	r3, r1
 8000c62:	70fb      	strb	r3, [r7, #3]
	if(EN_DI == CLK_EN){
 8000c64:	78fb      	ldrb	r3, [r7, #3]
 8000c66:	2b01      	cmp	r3, #1
 8000c68:	d141      	bne.n	8000cee <GPIOx_PClkControl+0x96>
		if(pGPIOx_Base == GPIOA){
 8000c6a:	687b      	ldr	r3, [r7, #4]
 8000c6c:	4a45      	ldr	r2, [pc, #276]	@ (8000d84 <GPIOx_PClkControl+0x12c>)
 8000c6e:	4293      	cmp	r3, r2
 8000c70:	d106      	bne.n	8000c80 <GPIOx_PClkControl+0x28>
			GPIOA_PCLK_EN();
 8000c72:	4b45      	ldr	r3, [pc, #276]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000c74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c76:	4a44      	ldr	r2, [pc, #272]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000c78:	f043 0301 	orr.w	r3, r3, #1
 8000c7c:	6313      	str	r3, [r2, #48]	@ 0x30
			GPIOH_PCLK_DI();
		}
		else{
		}
	}
}
 8000c7e:	e07a      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
		else if(pGPIOx_Base == GPIOB){
 8000c80:	687b      	ldr	r3, [r7, #4]
 8000c82:	4a42      	ldr	r2, [pc, #264]	@ (8000d8c <GPIOx_PClkControl+0x134>)
 8000c84:	4293      	cmp	r3, r2
 8000c86:	d106      	bne.n	8000c96 <GPIOx_PClkControl+0x3e>
			GPIOB_PCLK_EN();
 8000c88:	4b3f      	ldr	r3, [pc, #252]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000c8a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000c8c:	4a3e      	ldr	r2, [pc, #248]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000c8e:	f043 0302 	orr.w	r3, r3, #2
 8000c92:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000c94:	e06f      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
		else if(pGPIOx_Base == GPIOC){
 8000c96:	687b      	ldr	r3, [r7, #4]
 8000c98:	4a3d      	ldr	r2, [pc, #244]	@ (8000d90 <GPIOx_PClkControl+0x138>)
 8000c9a:	4293      	cmp	r3, r2
 8000c9c:	d106      	bne.n	8000cac <GPIOx_PClkControl+0x54>
			GPIOC_PCLK_EN();
 8000c9e:	4b3a      	ldr	r3, [pc, #232]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000ca0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ca2:	4a39      	ldr	r2, [pc, #228]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000ca4:	f043 0304 	orr.w	r3, r3, #4
 8000ca8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000caa:	e064      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
		else if(pGPIOx_Base == GPIOD){
 8000cac:	687b      	ldr	r3, [r7, #4]
 8000cae:	4a39      	ldr	r2, [pc, #228]	@ (8000d94 <GPIOx_PClkControl+0x13c>)
 8000cb0:	4293      	cmp	r3, r2
 8000cb2:	d106      	bne.n	8000cc2 <GPIOx_PClkControl+0x6a>
			GPIOD_PCLK_EN();
 8000cb4:	4b34      	ldr	r3, [pc, #208]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000cb6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cb8:	4a33      	ldr	r2, [pc, #204]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000cba:	f043 0308 	orr.w	r3, r3, #8
 8000cbe:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000cc0:	e059      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
		else if(pGPIOx_Base == GPIOE){
 8000cc2:	687b      	ldr	r3, [r7, #4]
 8000cc4:	4a34      	ldr	r2, [pc, #208]	@ (8000d98 <GPIOx_PClkControl+0x140>)
 8000cc6:	4293      	cmp	r3, r2
 8000cc8:	d106      	bne.n	8000cd8 <GPIOx_PClkControl+0x80>
			GPIOE_PCLK_EN();
 8000cca:	4b2f      	ldr	r3, [pc, #188]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000ccc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000cce:	4a2e      	ldr	r2, [pc, #184]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000cd0:	f043 0310 	orr.w	r3, r3, #16
 8000cd4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000cd6:	e04e      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
		else if(pGPIOx_Base == GPIOH){
 8000cd8:	687b      	ldr	r3, [r7, #4]
 8000cda:	4a30      	ldr	r2, [pc, #192]	@ (8000d9c <GPIOx_PClkControl+0x144>)
 8000cdc:	4293      	cmp	r3, r2
 8000cde:	d14a      	bne.n	8000d76 <GPIOx_PClkControl+0x11e>
			GPIOH_PCLK_EN();
 8000ce0:	4b29      	ldr	r3, [pc, #164]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000ce2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000ce4:	4a28      	ldr	r2, [pc, #160]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000ce6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000cea:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000cec:	e043      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
	else if(EN_DI == CLK_DI){
 8000cee:	78fb      	ldrb	r3, [r7, #3]
 8000cf0:	2b00      	cmp	r3, #0
 8000cf2:	d140      	bne.n	8000d76 <GPIOx_PClkControl+0x11e>
		if(pGPIOx_Base == GPIOA){
 8000cf4:	687b      	ldr	r3, [r7, #4]
 8000cf6:	4a23      	ldr	r2, [pc, #140]	@ (8000d84 <GPIOx_PClkControl+0x12c>)
 8000cf8:	4293      	cmp	r3, r2
 8000cfa:	d106      	bne.n	8000d0a <GPIOx_PClkControl+0xb2>
			GPIOA_PCLK_DI();
 8000cfc:	4b22      	ldr	r3, [pc, #136]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000cfe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d00:	4a21      	ldr	r2, [pc, #132]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d02:	f023 0301 	bic.w	r3, r3, #1
 8000d06:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d08:	e035      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
		else if(pGPIOx_Base == GPIOB){
 8000d0a:	687b      	ldr	r3, [r7, #4]
 8000d0c:	4a1f      	ldr	r2, [pc, #124]	@ (8000d8c <GPIOx_PClkControl+0x134>)
 8000d0e:	4293      	cmp	r3, r2
 8000d10:	d106      	bne.n	8000d20 <GPIOx_PClkControl+0xc8>
			GPIOB_PCLK_DI();
 8000d12:	4b1d      	ldr	r3, [pc, #116]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d16:	4a1c      	ldr	r2, [pc, #112]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d18:	f023 0302 	bic.w	r3, r3, #2
 8000d1c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d1e:	e02a      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
		else if(pGPIOx_Base == GPIOC){
 8000d20:	687b      	ldr	r3, [r7, #4]
 8000d22:	4a1b      	ldr	r2, [pc, #108]	@ (8000d90 <GPIOx_PClkControl+0x138>)
 8000d24:	4293      	cmp	r3, r2
 8000d26:	d106      	bne.n	8000d36 <GPIOx_PClkControl+0xde>
			GPIOC_PCLK_DI();
 8000d28:	4b17      	ldr	r3, [pc, #92]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d2a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d2c:	4a16      	ldr	r2, [pc, #88]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d2e:	f023 0304 	bic.w	r3, r3, #4
 8000d32:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d34:	e01f      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
		else if(pGPIOx_Base == GPIOD){
 8000d36:	687b      	ldr	r3, [r7, #4]
 8000d38:	4a16      	ldr	r2, [pc, #88]	@ (8000d94 <GPIOx_PClkControl+0x13c>)
 8000d3a:	4293      	cmp	r3, r2
 8000d3c:	d106      	bne.n	8000d4c <GPIOx_PClkControl+0xf4>
			GPIOD_PCLK_DI();
 8000d3e:	4b12      	ldr	r3, [pc, #72]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d42:	4a11      	ldr	r2, [pc, #68]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d44:	f023 0308 	bic.w	r3, r3, #8
 8000d48:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d4a:	e014      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
		else if(pGPIOx_Base == GPIOE){
 8000d4c:	687b      	ldr	r3, [r7, #4]
 8000d4e:	4a12      	ldr	r2, [pc, #72]	@ (8000d98 <GPIOx_PClkControl+0x140>)
 8000d50:	4293      	cmp	r3, r2
 8000d52:	d106      	bne.n	8000d62 <GPIOx_PClkControl+0x10a>
			GPIOE_PCLK_DI();
 8000d54:	4b0c      	ldr	r3, [pc, #48]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d56:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d58:	4a0b      	ldr	r2, [pc, #44]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d5a:	f023 0310 	bic.w	r3, r3, #16
 8000d5e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d60:	e009      	b.n	8000d76 <GPIOx_PClkControl+0x11e>
		else if(pGPIOx_Base == GPIOH){
 8000d62:	687b      	ldr	r3, [r7, #4]
 8000d64:	4a0d      	ldr	r2, [pc, #52]	@ (8000d9c <GPIOx_PClkControl+0x144>)
 8000d66:	4293      	cmp	r3, r2
 8000d68:	d105      	bne.n	8000d76 <GPIOx_PClkControl+0x11e>
			GPIOH_PCLK_DI();
 8000d6a:	4b07      	ldr	r3, [pc, #28]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d6c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d6e:	4a06      	ldr	r2, [pc, #24]	@ (8000d88 <GPIOx_PClkControl+0x130>)
 8000d70:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8000d74:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000d76:	bf00      	nop
 8000d78:	370c      	adds	r7, #12
 8000d7a:	46bd      	mov	sp, r7
 8000d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d80:	4770      	bx	lr
 8000d82:	bf00      	nop
 8000d84:	40020000 	.word	0x40020000
 8000d88:	40023800 	.word	0x40023800
 8000d8c:	40020400 	.word	0x40020400
 8000d90:	40020800 	.word	0x40020800
 8000d94:	40020c00 	.word	0x40020c00
 8000d98:	40021000 	.word	0x40021000
 8000d9c:	40021c00 	.word	0x40021c00

08000da0 <GPIO_SetMode>:

/*
 * GPIO Peripheral - Low level functions
*/

void GPIO_SetMode(GPIOx_RegDef_t *pGPIOx_Base, uint8_t GPIO_Pin, uint8_t mode){
 8000da0:	b480      	push	{r7}
 8000da2:	b085      	sub	sp, #20
 8000da4:	af00      	add	r7, sp, #0
 8000da6:	6078      	str	r0, [r7, #4]
 8000da8:	460b      	mov	r3, r1
 8000daa:	70fb      	strb	r3, [r7, #3]
 8000dac:	4613      	mov	r3, r2
 8000dae:	70bb      	strb	r3, [r7, #2]
	uint8_t bit_pos = GPIO_Pin * 2;
 8000db0:	78fb      	ldrb	r3, [r7, #3]
 8000db2:	005b      	lsls	r3, r3, #1
 8000db4:	73fb      	strb	r3, [r7, #15]
	pGPIOx_Base->MODER &= ~(0x3 << bit_pos);	//Clear bits
 8000db6:	687b      	ldr	r3, [r7, #4]
 8000db8:	681b      	ldr	r3, [r3, #0]
 8000dba:	7bfa      	ldrb	r2, [r7, #15]
 8000dbc:	2103      	movs	r1, #3
 8000dbe:	fa01 f202 	lsl.w	r2, r1, r2
 8000dc2:	43d2      	mvns	r2, r2
 8000dc4:	401a      	ands	r2, r3
 8000dc6:	687b      	ldr	r3, [r7, #4]
 8000dc8:	601a      	str	r2, [r3, #0]
	pGPIOx_Base->MODER |= (mode << bit_pos);	//Set bits
 8000dca:	687b      	ldr	r3, [r7, #4]
 8000dcc:	681b      	ldr	r3, [r3, #0]
 8000dce:	78b9      	ldrb	r1, [r7, #2]
 8000dd0:	7bfa      	ldrb	r2, [r7, #15]
 8000dd2:	fa01 f202 	lsl.w	r2, r1, r2
 8000dd6:	431a      	orrs	r2, r3
 8000dd8:	687b      	ldr	r3, [r7, #4]
 8000dda:	601a      	str	r2, [r3, #0]
}
 8000ddc:	bf00      	nop
 8000dde:	3714      	adds	r7, #20
 8000de0:	46bd      	mov	sp, r7
 8000de2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000de6:	4770      	bx	lr

08000de8 <GPIO_SetOutputType>:

void GPIO_SetOutputType(GPIOx_RegDef_t *pGPIOx_Base, uint8_t GPIO_Pin, uint8_t output_type){
 8000de8:	b480      	push	{r7}
 8000dea:	b085      	sub	sp, #20
 8000dec:	af00      	add	r7, sp, #0
 8000dee:	6078      	str	r0, [r7, #4]
 8000df0:	460b      	mov	r3, r1
 8000df2:	70fb      	strb	r3, [r7, #3]
 8000df4:	4613      	mov	r3, r2
 8000df6:	70bb      	strb	r3, [r7, #2]
	uint8_t bit_pos = GPIO_Pin;
 8000df8:	78fb      	ldrb	r3, [r7, #3]
 8000dfa:	73fb      	strb	r3, [r7, #15]
	pGPIOx_Base->OTYPER &= ~(0x3 << bit_pos);			//Clear bits
 8000dfc:	687b      	ldr	r3, [r7, #4]
 8000dfe:	685b      	ldr	r3, [r3, #4]
 8000e00:	7bfa      	ldrb	r2, [r7, #15]
 8000e02:	2103      	movs	r1, #3
 8000e04:	fa01 f202 	lsl.w	r2, r1, r2
 8000e08:	43d2      	mvns	r2, r2
 8000e0a:	401a      	ands	r2, r3
 8000e0c:	687b      	ldr	r3, [r7, #4]
 8000e0e:	605a      	str	r2, [r3, #4]
	pGPIOx_Base->OTYPER |= (output_type << bit_pos);	//Set bits
 8000e10:	687b      	ldr	r3, [r7, #4]
 8000e12:	685b      	ldr	r3, [r3, #4]
 8000e14:	78b9      	ldrb	r1, [r7, #2]
 8000e16:	7bfa      	ldrb	r2, [r7, #15]
 8000e18:	fa01 f202 	lsl.w	r2, r1, r2
 8000e1c:	431a      	orrs	r2, r3
 8000e1e:	687b      	ldr	r3, [r7, #4]
 8000e20:	605a      	str	r2, [r3, #4]
}
 8000e22:	bf00      	nop
 8000e24:	3714      	adds	r7, #20
 8000e26:	46bd      	mov	sp, r7
 8000e28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e2c:	4770      	bx	lr

08000e2e <GPIO_SetOutputSpeed>:

void GPIO_SetOutputSpeed(GPIOx_RegDef_t *pGPIOx_Base, uint8_t GPIO_Pin, uint8_t speed){
 8000e2e:	b480      	push	{r7}
 8000e30:	b085      	sub	sp, #20
 8000e32:	af00      	add	r7, sp, #0
 8000e34:	6078      	str	r0, [r7, #4]
 8000e36:	460b      	mov	r3, r1
 8000e38:	70fb      	strb	r3, [r7, #3]
 8000e3a:	4613      	mov	r3, r2
 8000e3c:	70bb      	strb	r3, [r7, #2]
	uint8_t bit_pos = GPIO_Pin * 2;
 8000e3e:	78fb      	ldrb	r3, [r7, #3]
 8000e40:	005b      	lsls	r3, r3, #1
 8000e42:	73fb      	strb	r3, [r7, #15]
	pGPIOx_Base->OSPEEDR &= ~(0x3 << bit_pos);		//Clear bits
 8000e44:	687b      	ldr	r3, [r7, #4]
 8000e46:	689b      	ldr	r3, [r3, #8]
 8000e48:	7bfa      	ldrb	r2, [r7, #15]
 8000e4a:	2103      	movs	r1, #3
 8000e4c:	fa01 f202 	lsl.w	r2, r1, r2
 8000e50:	43d2      	mvns	r2, r2
 8000e52:	401a      	ands	r2, r3
 8000e54:	687b      	ldr	r3, [r7, #4]
 8000e56:	609a      	str	r2, [r3, #8]
	pGPIOx_Base->OSPEEDR |= (speed << bit_pos);		//Set bits
 8000e58:	687b      	ldr	r3, [r7, #4]
 8000e5a:	689b      	ldr	r3, [r3, #8]
 8000e5c:	78b9      	ldrb	r1, [r7, #2]
 8000e5e:	7bfa      	ldrb	r2, [r7, #15]
 8000e60:	fa01 f202 	lsl.w	r2, r1, r2
 8000e64:	431a      	orrs	r2, r3
 8000e66:	687b      	ldr	r3, [r7, #4]
 8000e68:	609a      	str	r2, [r3, #8]
}
 8000e6a:	bf00      	nop
 8000e6c:	3714      	adds	r7, #20
 8000e6e:	46bd      	mov	sp, r7
 8000e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e74:	4770      	bx	lr

08000e76 <GPIO_SetPin>:
	uint8_t bit_pos = GPIO_Pin;
	pGPIOx_Base->PUPDR &= ~(0x3 << bit_pos);	//Clear bits
	pGPIOx_Base->PUPDR |= (config << bit_pos);	//Set bits
}

void GPIO_SetPin(GPIOx_RegDef_t *pGPIOx_Base, uint8_t GPIO_Pin){
 8000e76:	b480      	push	{r7}
 8000e78:	b083      	sub	sp, #12
 8000e7a:	af00      	add	r7, sp, #0
 8000e7c:	6078      	str	r0, [r7, #4]
 8000e7e:	460b      	mov	r3, r1
 8000e80:	70fb      	strb	r3, [r7, #3]
	pGPIOx_Base->BSSR |= (1 << GPIO_Pin);
 8000e82:	687b      	ldr	r3, [r7, #4]
 8000e84:	699b      	ldr	r3, [r3, #24]
 8000e86:	78fa      	ldrb	r2, [r7, #3]
 8000e88:	2101      	movs	r1, #1
 8000e8a:	fa01 f202 	lsl.w	r2, r1, r2
 8000e8e:	431a      	orrs	r2, r3
 8000e90:	687b      	ldr	r3, [r7, #4]
 8000e92:	619a      	str	r2, [r3, #24]
}
 8000e94:	bf00      	nop
 8000e96:	370c      	adds	r7, #12
 8000e98:	46bd      	mov	sp, r7
 8000e9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e9e:	4770      	bx	lr

08000ea0 <GPIO_ResetPin>:

void GPIO_ResetPin(GPIOx_RegDef_t *pGPIOx_Base, uint8_t GPIO_Pin){
 8000ea0:	b480      	push	{r7}
 8000ea2:	b083      	sub	sp, #12
 8000ea4:	af00      	add	r7, sp, #0
 8000ea6:	6078      	str	r0, [r7, #4]
 8000ea8:	460b      	mov	r3, r1
 8000eaa:	70fb      	strb	r3, [r7, #3]
	pGPIOx_Base->BSSR |= (1 << (GPIO_Pin + 16));	
 8000eac:	687b      	ldr	r3, [r7, #4]
 8000eae:	699b      	ldr	r3, [r3, #24]
 8000eb0:	78fa      	ldrb	r2, [r7, #3]
 8000eb2:	3210      	adds	r2, #16
 8000eb4:	2101      	movs	r1, #1
 8000eb6:	fa01 f202 	lsl.w	r2, r1, r2
 8000eba:	431a      	orrs	r2, r3
 8000ebc:	687b      	ldr	r3, [r7, #4]
 8000ebe:	619a      	str	r2, [r3, #24]
}
 8000ec0:	bf00      	nop
 8000ec2:	370c      	adds	r7, #12
 8000ec4:	46bd      	mov	sp, r7
 8000ec6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eca:	4770      	bx	lr

08000ecc <GPIO_ReadFromInputPin>:


/*
 * GPIO Peripheral - GPIO Read API Definitions
 */
uint8_t GPIO_ReadFromInputPin(GPIOx_RegDef_t *pGPIOx_Base, uint8_t GPIO_Pin){
 8000ecc:	b480      	push	{r7}
 8000ece:	b085      	sub	sp, #20
 8000ed0:	af00      	add	r7, sp, #0
 8000ed2:	6078      	str	r0, [r7, #4]
 8000ed4:	460b      	mov	r3, r1
 8000ed6:	70fb      	strb	r3, [r7, #3]
	uint8_t data;
	data = (uint8_t)(pGPIOx_Base->IDR >> GPIO_Pin) & 0x00000001;
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	691a      	ldr	r2, [r3, #16]
 8000edc:	78fb      	ldrb	r3, [r7, #3]
 8000ede:	fa22 f303 	lsr.w	r3, r2, r3
 8000ee2:	b2db      	uxtb	r3, r3
 8000ee4:	f003 0301 	and.w	r3, r3, #1
 8000ee8:	73fb      	strb	r3, [r7, #15]
	return data;
 8000eea:	7bfb      	ldrb	r3, [r7, #15]
}
 8000eec:	4618      	mov	r0, r3
 8000eee:	3714      	adds	r7, #20
 8000ef0:	46bd      	mov	sp, r7
 8000ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ef6:	4770      	bx	lr

08000ef8 <TIMx_ClockEnable>:
//
//#define TIMx_UIE		 0


//Configuration APIs
void TIMx_ClockEnable(TIM_RegDef_t *TIMx){
 8000ef8:	b480      	push	{r7}
 8000efa:	b083      	sub	sp, #12
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	6078      	str	r0, [r7, #4]
	if(TIMx == TIM2){
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8000f06:	d106      	bne.n	8000f16 <TIMx_ClockEnable+0x1e>
		//Enable TIM2 clock Access
		RCC->APB1ENR |= TIM2_EN;
 8000f08:	4b16      	ldr	r3, [pc, #88]	@ (8000f64 <TIMx_ClockEnable+0x6c>)
 8000f0a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f0c:	4a15      	ldr	r2, [pc, #84]	@ (8000f64 <TIMx_ClockEnable+0x6c>)
 8000f0e:	f043 0301 	orr.w	r3, r3, #1
 8000f12:	6413      	str	r3, [r2, #64]	@ 0x40
		//Enable TIM5 clock Access
		RCC->APB1ENR |= TIM5_EN;
	} else{
		//No conditions matched!
	}
}
 8000f14:	e01f      	b.n	8000f56 <TIMx_ClockEnable+0x5e>
	} else if(TIMx == TIM3){
 8000f16:	687b      	ldr	r3, [r7, #4]
 8000f18:	4a13      	ldr	r2, [pc, #76]	@ (8000f68 <TIMx_ClockEnable+0x70>)
 8000f1a:	4293      	cmp	r3, r2
 8000f1c:	d106      	bne.n	8000f2c <TIMx_ClockEnable+0x34>
		RCC->APB1ENR |= TIM3_EN;
 8000f1e:	4b11      	ldr	r3, [pc, #68]	@ (8000f64 <TIMx_ClockEnable+0x6c>)
 8000f20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f22:	4a10      	ldr	r2, [pc, #64]	@ (8000f64 <TIMx_ClockEnable+0x6c>)
 8000f24:	f043 0302 	orr.w	r3, r3, #2
 8000f28:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8000f2a:	e014      	b.n	8000f56 <TIMx_ClockEnable+0x5e>
	} else if(TIMx == TIM4){
 8000f2c:	687b      	ldr	r3, [r7, #4]
 8000f2e:	4a0f      	ldr	r2, [pc, #60]	@ (8000f6c <TIMx_ClockEnable+0x74>)
 8000f30:	4293      	cmp	r3, r2
 8000f32:	d106      	bne.n	8000f42 <TIMx_ClockEnable+0x4a>
		RCC->APB1ENR |= TIM4_EN;
 8000f34:	4b0b      	ldr	r3, [pc, #44]	@ (8000f64 <TIMx_ClockEnable+0x6c>)
 8000f36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f38:	4a0a      	ldr	r2, [pc, #40]	@ (8000f64 <TIMx_ClockEnable+0x6c>)
 8000f3a:	f043 0304 	orr.w	r3, r3, #4
 8000f3e:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8000f40:	e009      	b.n	8000f56 <TIMx_ClockEnable+0x5e>
	} else if(TIMx == TIM5){
 8000f42:	687b      	ldr	r3, [r7, #4]
 8000f44:	4a0a      	ldr	r2, [pc, #40]	@ (8000f70 <TIMx_ClockEnable+0x78>)
 8000f46:	4293      	cmp	r3, r2
 8000f48:	d105      	bne.n	8000f56 <TIMx_ClockEnable+0x5e>
		RCC->APB1ENR |= TIM5_EN;
 8000f4a:	4b06      	ldr	r3, [pc, #24]	@ (8000f64 <TIMx_ClockEnable+0x6c>)
 8000f4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f4e:	4a05      	ldr	r2, [pc, #20]	@ (8000f64 <TIMx_ClockEnable+0x6c>)
 8000f50:	f043 0308 	orr.w	r3, r3, #8
 8000f54:	6413      	str	r3, [r2, #64]	@ 0x40
}
 8000f56:	bf00      	nop
 8000f58:	370c      	adds	r7, #12
 8000f5a:	46bd      	mov	sp, r7
 8000f5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f60:	4770      	bx	lr
 8000f62:	bf00      	nop
 8000f64:	40023800 	.word	0x40023800
 8000f68:	40000400 	.word	0x40000400
 8000f6c:	40000800 	.word	0x40000800
 8000f70:	40000c00 	.word	0x40000c00

08000f74 <TIMx_SetPrescaler>:
//	} else{
//		//No conditions matched!
//	}
//}

void TIMx_SetPrescaler(TIM_RegDef_t *TIMx, uint32_t prescaler){
 8000f74:	b480      	push	{r7}
 8000f76:	b083      	sub	sp, #12
 8000f78:	af00      	add	r7, sp, #0
 8000f7a:	6078      	str	r0, [r7, #4]
 8000f7c:	6039      	str	r1, [r7, #0]
	TIMx->PSC = prescaler;
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	683a      	ldr	r2, [r7, #0]
 8000f82:	629a      	str	r2, [r3, #40]	@ 0x28
}
 8000f84:	bf00      	nop
 8000f86:	370c      	adds	r7, #12
 8000f88:	46bd      	mov	sp, r7
 8000f8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f8e:	4770      	bx	lr

08000f90 <TIMx_SetPeriod>:

uint32_t TIMx_ComputePrescaler(TIM_RegDef_t *TIMx, uint32_t sys_freq, uint32_t tim_freq){
	return ((sys_freq/tim_freq) - 1);
}

void TIMx_SetPeriod(TIM_RegDef_t *TIMx, uint32_t period){
 8000f90:	b480      	push	{r7}
 8000f92:	b083      	sub	sp, #12
 8000f94:	af00      	add	r7, sp, #0
 8000f96:	6078      	str	r0, [r7, #4]
 8000f98:	6039      	str	r1, [r7, #0]
	//Set ARR Register
	TIMx->ARR = (period-1);
 8000f9a:	683b      	ldr	r3, [r7, #0]
 8000f9c:	1e5a      	subs	r2, r3, #1
 8000f9e:	687b      	ldr	r3, [r7, #4]
 8000fa0:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 8000fa2:	bf00      	nop
 8000fa4:	370c      	adds	r7, #12
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fac:	4770      	bx	lr

08000fae <TIMx_ConfigMode>:

void TIMx_ConfigMode(TIM_RegDef_t *TIMx, uint8_t Mode){
 8000fae:	b480      	push	{r7}
 8000fb0:	b083      	sub	sp, #12
 8000fb2:	af00      	add	r7, sp, #0
 8000fb4:	6078      	str	r0, [r7, #4]
 8000fb6:	460b      	mov	r3, r1
 8000fb8:	70fb      	strb	r3, [r7, #3]
	if(Mode == 0){
 8000fba:	78fb      	ldrb	r3, [r7, #3]
 8000fbc:	2b00      	cmp	r3, #0
 8000fbe:	d104      	bne.n	8000fca <TIMx_ConfigMode+0x1c>
		TIMx->CR1 |= (TIM_MODE_DOWN_COUNTER << 4);
 8000fc0:	687b      	ldr	r3, [r7, #4]
 8000fc2:	681a      	ldr	r2, [r3, #0]
 8000fc4:	687b      	ldr	r3, [r7, #4]
 8000fc6:	601a      	str	r2, [r3, #0]
	} else {
		TIMx->CR1 |= (TIM_MODE_UP_COUNTER << 4);
	}
}
 8000fc8:	e005      	b.n	8000fd6 <TIMx_ConfigMode+0x28>
		TIMx->CR1 |= (TIM_MODE_UP_COUNTER << 4);
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	681b      	ldr	r3, [r3, #0]
 8000fce:	f043 0210 	orr.w	r2, r3, #16
 8000fd2:	687b      	ldr	r3, [r7, #4]
 8000fd4:	601a      	str	r2, [r3, #0]
}
 8000fd6:	bf00      	nop
 8000fd8:	370c      	adds	r7, #12
 8000fda:	46bd      	mov	sp, r7
 8000fdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fe0:	4770      	bx	lr

08000fe2 <TIMx_Start>:
	}
}


//General Application APIs
void TIMx_Start(TIM_RegDef_t *TIMx){
 8000fe2:	b480      	push	{r7}
 8000fe4:	b083      	sub	sp, #12
 8000fe6:	af00      	add	r7, sp, #0
 8000fe8:	6078      	str	r0, [r7, #4]
	TIMx->CNT = 0;
 8000fea:	687b      	ldr	r3, [r7, #4]
 8000fec:	2200      	movs	r2, #0
 8000fee:	625a      	str	r2, [r3, #36]	@ 0x24
	TIMx->CR1 |= TIMx_CEN;
 8000ff0:	687b      	ldr	r3, [r7, #4]
 8000ff2:	681b      	ldr	r3, [r3, #0]
 8000ff4:	f043 0201 	orr.w	r2, r3, #1
 8000ff8:	687b      	ldr	r3, [r7, #4]
 8000ffa:	601a      	str	r2, [r3, #0]
}
 8000ffc:	bf00      	nop
 8000ffe:	370c      	adds	r7, #12
 8001000:	46bd      	mov	sp, r7
 8001002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001006:	4770      	bx	lr

08001008 <TIMx_Stop>:

void TIMx_Stop(TIM_RegDef_t *TIMx){
 8001008:	b480      	push	{r7}
 800100a:	b083      	sub	sp, #12
 800100c:	af00      	add	r7, sp, #0
 800100e:	6078      	str	r0, [r7, #4]
	TIMx->CNT = 0;
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	2200      	movs	r2, #0
 8001014:	625a      	str	r2, [r3, #36]	@ 0x24
	TIMx->CR1 &= ~(TIMx_CEN);
 8001016:	687b      	ldr	r3, [r7, #4]
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	f023 0201 	bic.w	r2, r3, #1
 800101e:	687b      	ldr	r3, [r7, #4]
 8001020:	601a      	str	r2, [r3, #0]
}
 8001022:	bf00      	nop
 8001024:	370c      	adds	r7, #12
 8001026:	46bd      	mov	sp, r7
 8001028:	f85d 7b04 	ldr.w	r7, [sp], #4
 800102c:	4770      	bx	lr

0800102e <TIMx_Delay_ms_Init>:

// One-time configuration for TIM2 to prepare for delays
void TIMx_Delay_ms_Init(TIM_RegDef_t *TIMx) {
 800102e:	b580      	push	{r7, lr}
 8001030:	b082      	sub	sp, #8
 8001032:	af00      	add	r7, sp, #0
 8001034:	6078      	str	r0, [r7, #4]
    // Enable clock access
    TIMx_ClockEnable(TIMx);
 8001036:	6878      	ldr	r0, [r7, #4]
 8001038:	f7ff ff5e 	bl	8000ef8 <TIMx_ClockEnable>

    // Set prescaler register
    TIMx_SetPrescaler(TIMx, 15);
 800103c:	210f      	movs	r1, #15
 800103e:	6878      	ldr	r0, [r7, #4]
 8001040:	f7ff ff98 	bl	8000f74 <TIMx_SetPrescaler>

    //Set Auto reload register
    TIMx_SetPeriod(TIMx, 1000);
 8001044:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8001048:	6878      	ldr	r0, [r7, #4]
 800104a:	f7ff ffa1 	bl	8000f90 <TIMx_SetPeriod>

    // Set Counter Mode (Up counter)
    TIMx_ConfigMode(TIMx, TIM_MODE_UP_COUNTER);
 800104e:	2101      	movs	r1, #1
 8001050:	6878      	ldr	r0, [r7, #4]
 8001052:	f7ff ffac 	bl	8000fae <TIMx_ConfigMode>
}
 8001056:	bf00      	nop
 8001058:	3708      	adds	r7, #8
 800105a:	46bd      	mov	sp, r7
 800105c:	bd80      	pop	{r7, pc}

0800105e <TIMx_Delay_ms>:

// Blocking delay in milliseconds
void TIMx_Delay_ms(TIM_RegDef_t *TIMx, uint32_t delay_ms) {
 800105e:	b580      	push	{r7, lr}
 8001060:	b084      	sub	sp, #16
 8001062:	af00      	add	r7, sp, #0
 8001064:	6078      	str	r0, [r7, #4]
 8001066:	6039      	str	r1, [r7, #0]
	//Start timer
	TIMx_Start(TIMx);
 8001068:	6878      	ldr	r0, [r7, #4]
 800106a:	f7ff ffba 	bl	8000fe2 <TIMx_Start>
    for(volatile uint32_t i = 0; i < delay_ms; i++){
 800106e:	2300      	movs	r3, #0
 8001070:	60fb      	str	r3, [r7, #12]
 8001072:	e00f      	b.n	8001094 <TIMx_Delay_ms+0x36>
    	//Check for update flag
    	while(!(TIMx->SR & TIMx_SR_UIF)){}
 8001074:	bf00      	nop
 8001076:	687b      	ldr	r3, [r7, #4]
 8001078:	691b      	ldr	r3, [r3, #16]
 800107a:	f003 0301 	and.w	r3, r3, #1
 800107e:	2b00      	cmp	r3, #0
 8001080:	d0f9      	beq.n	8001076 <TIMx_Delay_ms+0x18>
    	//Clear flag
    	TIMx->SR &= ~TIMx_SR_UIF;
 8001082:	687b      	ldr	r3, [r7, #4]
 8001084:	691b      	ldr	r3, [r3, #16]
 8001086:	f023 0201 	bic.w	r2, r3, #1
 800108a:	687b      	ldr	r3, [r7, #4]
 800108c:	611a      	str	r2, [r3, #16]
    for(volatile uint32_t i = 0; i < delay_ms; i++){
 800108e:	68fb      	ldr	r3, [r7, #12]
 8001090:	3301      	adds	r3, #1
 8001092:	60fb      	str	r3, [r7, #12]
 8001094:	68fb      	ldr	r3, [r7, #12]
 8001096:	683a      	ldr	r2, [r7, #0]
 8001098:	429a      	cmp	r2, r3
 800109a:	d8eb      	bhi.n	8001074 <TIMx_Delay_ms+0x16>
    }
    //Stop timer
    TIMx_Stop(TIMx);
 800109c:	6878      	ldr	r0, [r7, #4]
 800109e:	f7ff ffb3 	bl	8001008 <TIMx_Stop>
}
 80010a2:	bf00      	nop
 80010a4:	3710      	adds	r7, #16
 80010a6:	46bd      	mov	sp, r7
 80010a8:	bd80      	pop	{r7, pc}

080010aa <TIMx_Single_Delay_us>:

void TIMx_Single_Delay_us(TIM_RegDef_t *TIMx, uint32_t delay_us) {
 80010aa:	b580      	push	{r7, lr}
 80010ac:	b084      	sub	sp, #16
 80010ae:	af00      	add	r7, sp, #0
 80010b0:	6078      	str	r0, [r7, #4]
 80010b2:	6039      	str	r1, [r7, #0]
    // Reset timer counter to 0
    TIMx->CNT = 0;
 80010b4:	687b      	ldr	r3, [r7, #4]
 80010b6:	2200      	movs	r2, #0
 80010b8:	625a      	str	r2, [r3, #36]	@ 0x24
    TIMx->ARR = (delay_us-1);
 80010ba:	683b      	ldr	r3, [r7, #0]
 80010bc:	1e5a      	subs	r2, r3, #1
 80010be:	687b      	ldr	r3, [r7, #4]
 80010c0:	62da      	str	r2, [r3, #44]	@ 0x2c

    // Start timer
    TIMx_Start(TIMx);
 80010c2:	6878      	ldr	r0, [r7, #4]
 80010c4:	f7ff ff8d 	bl	8000fe2 <TIMx_Start>

    // Wait until counter reaches 30
    for(volatile uint32_t i = 0; i < 1; i++){
 80010c8:	2300      	movs	r3, #0
 80010ca:	60fb      	str	r3, [r7, #12]
 80010cc:	e00f      	b.n	80010ee <TIMx_Single_Delay_us+0x44>
    	//Check for update flag
    	while(!(TIMx->SR & TIMx_SR_UIF)){}
 80010ce:	bf00      	nop
 80010d0:	687b      	ldr	r3, [r7, #4]
 80010d2:	691b      	ldr	r3, [r3, #16]
 80010d4:	f003 0301 	and.w	r3, r3, #1
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d0f9      	beq.n	80010d0 <TIMx_Single_Delay_us+0x26>
    	//Clear flag
    	TIMx->SR &= ~TIMx_SR_UIF;
 80010dc:	687b      	ldr	r3, [r7, #4]
 80010de:	691b      	ldr	r3, [r3, #16]
 80010e0:	f023 0201 	bic.w	r2, r3, #1
 80010e4:	687b      	ldr	r3, [r7, #4]
 80010e6:	611a      	str	r2, [r3, #16]
    for(volatile uint32_t i = 0; i < 1; i++){
 80010e8:	68fb      	ldr	r3, [r7, #12]
 80010ea:	3301      	adds	r3, #1
 80010ec:	60fb      	str	r3, [r7, #12]
 80010ee:	68fb      	ldr	r3, [r7, #12]
 80010f0:	2b00      	cmp	r3, #0
 80010f2:	d0ec      	beq.n	80010ce <TIMx_Single_Delay_us+0x24>
    }

    // Stop timer
    TIMx_Stop(TIMx);
 80010f4:	6878      	ldr	r0, [r7, #4]
 80010f6:	f7ff ff87 	bl	8001008 <TIMx_Stop>
    TIMx->ARR = (1000-1);
 80010fa:	687b      	ldr	r3, [r7, #4]
 80010fc:	f240 32e7 	movw	r2, #999	@ 0x3e7
 8001100:	62da      	str	r2, [r3, #44]	@ 0x2c
}
 8001102:	bf00      	nop
 8001104:	3710      	adds	r7, #16
 8001106:	46bd      	mov	sp, r7
 8001108:	bd80      	pop	{r7, pc}
	...

0800110c <DHT22_Init>:
    //API
    return DHT22_SUCCESS;
}

//Initialization API
uint32_t DHT22_Init(GPIOx_RegDef_t *GPIO, uint8_t GPIO_Pin_no){
 800110c:	b580      	push	{r7, lr}
 800110e:	b082      	sub	sp, #8
 8001110:	af00      	add	r7, sp, #0
 8001112:	6078      	str	r0, [r7, #4]
 8001114:	460b      	mov	r3, r1
 8001116:	70fb      	strb	r3, [r7, #3]
    //API
	//1. Enable clock access to GPIO & Timer Peripheral
	GPIOx_PClkControl(GPIO, CLK_EN);
 8001118:	2101      	movs	r1, #1
 800111a:	6878      	ldr	r0, [r7, #4]
 800111c:	f7ff fd9c 	bl	8000c58 <GPIOx_PClkControl>
    //TIMx_ClockEnable(TIM5);
    //2. Configure GPIO pin - as Output Mode
    //Set Mode
    GPIO_SetMode(GPIO, GPIO_Pin_no, GPIO_MODE_OUTPUT);
 8001120:	78fb      	ldrb	r3, [r7, #3]
 8001122:	2201      	movs	r2, #1
 8001124:	4619      	mov	r1, r3
 8001126:	6878      	ldr	r0, [r7, #4]
 8001128:	f7ff fe3a 	bl	8000da0 <GPIO_SetMode>

    //Set Output type & speed
    GPIO_SetOutputType(GPIO, GPIO_Pin_no, GPIO_OUTPUT_PUSH_PULL);
 800112c:	78fb      	ldrb	r3, [r7, #3]
 800112e:	2200      	movs	r2, #0
 8001130:	4619      	mov	r1, r3
 8001132:	6878      	ldr	r0, [r7, #4]
 8001134:	f7ff fe58 	bl	8000de8 <GPIO_SetOutputType>
    GPIO_SetOutputSpeed(GPIO, GPIO_Pin_no, GPIO_SPEED_HIGH);
 8001138:	78fb      	ldrb	r3, [r7, #3]
 800113a:	2203      	movs	r2, #3
 800113c:	4619      	mov	r1, r3
 800113e:	6878      	ldr	r0, [r7, #4]
 8001140:	f7ff fe75 	bl	8000e2e <GPIO_SetOutputSpeed>

    //3. Configure Timer - Will use TIM5
    TIMx_Delay_ms_Init(TIM5);
 8001144:	4806      	ldr	r0, [pc, #24]	@ (8001160 <DHT22_Init+0x54>)
 8001146:	f7ff ff72 	bl	800102e <TIMx_Delay_ms_Init>

    GPIO_SetPin(GPIO, GPIO_Pin_no);
 800114a:	78fb      	ldrb	r3, [r7, #3]
 800114c:	4619      	mov	r1, r3
 800114e:	6878      	ldr	r0, [r7, #4]
 8001150:	f7ff fe91 	bl	8000e76 <GPIO_SetPin>

    return DHT22_SUCCESS;
 8001154:	2300      	movs	r3, #0
}
 8001156:	4618      	mov	r0, r3
 8001158:	3708      	adds	r7, #8
 800115a:	46bd      	mov	sp, r7
 800115c:	bd80      	pop	{r7, pc}
 800115e:	bf00      	nop
 8001160:	40000c00 	.word	0x40000c00
 8001164:	00000000 	.word	0x00000000

08001168 <DHT22_Read>:

//Data Read API
uint32_t DHT22_Read(GPIOx_RegDef_t *GPIO, uint8_t GPIO_Pin_no, float *temp, float *humidity){
 8001168:	b580      	push	{r7, lr}
 800116a:	b08a      	sub	sp, #40	@ 0x28
 800116c:	af00      	add	r7, sp, #0
 800116e:	60f8      	str	r0, [r7, #12]
 8001170:	607a      	str	r2, [r7, #4]
 8001172:	603b      	str	r3, [r7, #0]
 8001174:	460b      	mov	r3, r1
 8001176:	72fb      	strb	r3, [r7, #11]
    //API
    /*Initialization Phase*/
	uint8_t data[5] = {0}; //To store the 5 bytes read from the sensor
 8001178:	2300      	movs	r3, #0
 800117a:	61bb      	str	r3, [r7, #24]
 800117c:	2300      	movs	r3, #0
 800117e:	773b      	strb	r3, [r7, #28]
	uint8_t timeout;
    //START SIGNAL
    //1. MCU sends Start Signal
    GPIO_ResetPin(GPIO, GPIO_Pin_no);
 8001180:	7afb      	ldrb	r3, [r7, #11]
 8001182:	4619      	mov	r1, r3
 8001184:	68f8      	ldr	r0, [r7, #12]
 8001186:	f7ff fe8b 	bl	8000ea0 <GPIO_ResetPin>

    //2. MCU Sleeps for 1ms-18ms
    TIMx_Delay_ms(TIM5, 20);
 800118a:	2114      	movs	r1, #20
 800118c:	48a6      	ldr	r0, [pc, #664]	@ (8001428 <DHT22_Read+0x2c0>)
 800118e:	f7ff ff66 	bl	800105e <TIMx_Delay_ms>

    //3. MCU Pulls pin High
    GPIO_SetPin(GPIO, GPIO_Pin_no);
 8001192:	7afb      	ldrb	r3, [r7, #11]
 8001194:	4619      	mov	r1, r3
 8001196:	68f8      	ldr	r0, [r7, #12]
 8001198:	f7ff fe6d 	bl	8000e76 <GPIO_SetPin>

    //4. MCU Sleeps for 20-40us
    TIMx_Single_Delay_us(TIM5, 40);
 800119c:	2128      	movs	r1, #40	@ 0x28
 800119e:	48a2      	ldr	r0, [pc, #648]	@ (8001428 <DHT22_Read+0x2c0>)
 80011a0:	f7ff ff83 	bl	80010aa <TIMx_Single_Delay_us>

    //5. MCU configures pin to INPUT Mode
    GPIO_SetMode(GPIO, GPIO_Pin_no, GPIO_MODE_INPUT);
 80011a4:	7afb      	ldrb	r3, [r7, #11]
 80011a6:	2200      	movs	r2, #0
 80011a8:	4619      	mov	r1, r3
 80011aa:	68f8      	ldr	r0, [r7, #12]
 80011ac:	f7ff fdf8 	bl	8000da0 <GPIO_SetMode>
    
    //MCU waits for DHT22 Response signal
    //1. Wait for pin to go LOW (response signal)
    timeout = 100;									//100us timeout
 80011b0:	2364      	movs	r3, #100	@ 0x64
 80011b2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    while(GPIO_ReadFromInputPin(GPIO, GPIO_Pin_no) == 1 && --timeout);	//Wait for pin to go LOW
 80011b6:	bf00      	nop
 80011b8:	7afb      	ldrb	r3, [r7, #11]
 80011ba:	4619      	mov	r1, r3
 80011bc:	68f8      	ldr	r0, [r7, #12]
 80011be:	f7ff fe85 	bl	8000ecc <GPIO_ReadFromInputPin>
 80011c2:	4603      	mov	r3, r0
 80011c4:	2b01      	cmp	r3, #1
 80011c6:	d108      	bne.n	80011da <DHT22_Read+0x72>
 80011c8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80011cc:	3b01      	subs	r3, #1
 80011ce:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80011d2:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80011d6:	2b00      	cmp	r3, #0
 80011d8:	d1ee      	bne.n	80011b8 <DHT22_Read+0x50>
    if(!timeout){
 80011da:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80011de:	2b00      	cmp	r3, #0
 80011e0:	d102      	bne.n	80011e8 <DHT22_Read+0x80>
    	return DHT22_ERR_TIMEOUT;
 80011e2:	f04f 33ff 	mov.w	r3, #4294967295
 80011e6:	e114      	b.n	8001412 <DHT22_Read+0x2aa>
    }

    //2. Wait for pin to go HIGH (response signal)
    timeout = 100;									//100us timeout
 80011e8:	2364      	movs	r3, #100	@ 0x64
 80011ea:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    while(GPIO_ReadFromInputPin(GPIO, GPIO_Pin_no) == 0 && --timeout);	//Wait for pin to go HIGH
 80011ee:	bf00      	nop
 80011f0:	7afb      	ldrb	r3, [r7, #11]
 80011f2:	4619      	mov	r1, r3
 80011f4:	68f8      	ldr	r0, [r7, #12]
 80011f6:	f7ff fe69 	bl	8000ecc <GPIO_ReadFromInputPin>
 80011fa:	4603      	mov	r3, r0
 80011fc:	2b00      	cmp	r3, #0
 80011fe:	d108      	bne.n	8001212 <DHT22_Read+0xaa>
 8001200:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001204:	3b01      	subs	r3, #1
 8001206:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800120a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800120e:	2b00      	cmp	r3, #0
 8001210:	d1ee      	bne.n	80011f0 <DHT22_Read+0x88>
    if(!timeout){
 8001212:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001216:	2b00      	cmp	r3, #0
 8001218:	d102      	bne.n	8001220 <DHT22_Read+0xb8>
    	return DHT22_ERR_TIMEOUT;
 800121a:	f04f 33ff 	mov.w	r3, #4294967295
 800121e:	e0f8      	b.n	8001412 <DHT22_Read+0x2aa>
    }

    //3. Wait for pin to go LOW (indication of Start bit)
    timeout = 100;									//100us timeout
 8001220:	2364      	movs	r3, #100	@ 0x64
 8001222:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    while(GPIO_ReadFromInputPin(GPIO, GPIO_Pin_no) == 1 && --timeout);	//Wait for pin to go LOW
 8001226:	bf00      	nop
 8001228:	7afb      	ldrb	r3, [r7, #11]
 800122a:	4619      	mov	r1, r3
 800122c:	68f8      	ldr	r0, [r7, #12]
 800122e:	f7ff fe4d 	bl	8000ecc <GPIO_ReadFromInputPin>
 8001232:	4603      	mov	r3, r0
 8001234:	2b01      	cmp	r3, #1
 8001236:	d108      	bne.n	800124a <DHT22_Read+0xe2>
 8001238:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800123c:	3b01      	subs	r3, #1
 800123e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001242:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001246:	2b00      	cmp	r3, #0
 8001248:	d1ee      	bne.n	8001228 <DHT22_Read+0xc0>
    if(!timeout){
 800124a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800124e:	2b00      	cmp	r3, #0
 8001250:	d102      	bne.n	8001258 <DHT22_Read+0xf0>
    	return DHT22_ERR_TIMEOUT;
 8001252:	f04f 33ff 	mov.w	r3, #4294967295
 8001256:	e0dc      	b.n	8001412 <DHT22_Read+0x2aa>

    /*Data Transmission Phase*/
    //1. Handle the 5 bytes of incomming data from DHT22 Sensor
    //Iterate over each byte, and within each byte, iterate over each bit, check 50us signal, then measure pulse width
    //and then decode the bit through pulse width
    for(volatile uint8_t byteIndex = 0; byteIndex < 5; byteIndex++){
 8001258:	2300      	movs	r3, #0
 800125a:	75fb      	strb	r3, [r7, #23]
 800125c:	e074      	b.n	8001348 <DHT22_Read+0x1e0>
    	for(volatile uint8_t bitIndex = 0; bitIndex < 8; bitIndex++){
 800125e:	2300      	movs	r3, #0
 8001260:	75bb      	strb	r3, [r7, #22]
 8001262:	e068      	b.n	8001336 <DHT22_Read+0x1ce>
    		//Wait for start signal of the bit
    		timeout = 100;
 8001264:	2364      	movs	r3, #100	@ 0x64
 8001266:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    		while(GPIO_ReadFromInputPin(GPIO, GPIO_Pin_no) == 0 && --timeout);	//Wait for pin to go HIGH, current start bit signal is being transmitted.
 800126a:	bf00      	nop
 800126c:	7afb      	ldrb	r3, [r7, #11]
 800126e:	4619      	mov	r1, r3
 8001270:	68f8      	ldr	r0, [r7, #12]
 8001272:	f7ff fe2b 	bl	8000ecc <GPIO_ReadFromInputPin>
 8001276:	4603      	mov	r3, r0
 8001278:	2b00      	cmp	r3, #0
 800127a:	d108      	bne.n	800128e <DHT22_Read+0x126>
 800127c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001280:	3b01      	subs	r3, #1
 8001282:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8001286:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800128a:	2b00      	cmp	r3, #0
 800128c:	d1ee      	bne.n	800126c <DHT22_Read+0x104>
    		if(!timeout){
 800128e:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8001292:	2b00      	cmp	r3, #0
 8001294:	d102      	bne.n	800129c <DHT22_Read+0x134>
    			return DHT22_ERR_TIMEOUT;
 8001296:	f04f 33ff 	mov.w	r3, #4294967295
 800129a:	e0ba      	b.n	8001412 <DHT22_Read+0x2aa>
    		}

    		//Measure high pulse width signal
    		TIMx_Start(TIM5);
 800129c:	4862      	ldr	r0, [pc, #392]	@ (8001428 <DHT22_Read+0x2c0>)
 800129e:	f7ff fea0 	bl	8000fe2 <TIMx_Start>
    		uint32_t start = TIM5->CNT;
 80012a2:	4b61      	ldr	r3, [pc, #388]	@ (8001428 <DHT22_Read+0x2c0>)
 80012a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80012a6:	623b      	str	r3, [r7, #32]
    		timeout = 100;
 80012a8:	2364      	movs	r3, #100	@ 0x64
 80012aa:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    		while(GPIO_ReadFromInputPin(GPIO, GPIO_Pin_no) == 1 && timeout);
 80012ae:	bf00      	nop
 80012b0:	7afb      	ldrb	r3, [r7, #11]
 80012b2:	4619      	mov	r1, r3
 80012b4:	68f8      	ldr	r0, [r7, #12]
 80012b6:	f7ff fe09 	bl	8000ecc <GPIO_ReadFromInputPin>
 80012ba:	4603      	mov	r3, r0
 80012bc:	2b01      	cmp	r3, #1
 80012be:	d103      	bne.n	80012c8 <DHT22_Read+0x160>
 80012c0:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80012c4:	2b00      	cmp	r3, #0
 80012c6:	d1f3      	bne.n	80012b0 <DHT22_Read+0x148>
    		if(!timeout){
 80012c8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80012cc:	2b00      	cmp	r3, #0
 80012ce:	d102      	bne.n	80012d6 <DHT22_Read+0x16e>
    			return DHT22_ERR_TIMEOUT;
 80012d0:	f04f 33ff 	mov.w	r3, #4294967295
 80012d4:	e09d      	b.n	8001412 <DHT22_Read+0x2aa>
    		}

    		TIM5->CR1 &= ~(TIMx_CEN);	//Stop timer
 80012d6:	4b54      	ldr	r3, [pc, #336]	@ (8001428 <DHT22_Read+0x2c0>)
 80012d8:	681b      	ldr	r3, [r3, #0]
 80012da:	4a53      	ldr	r2, [pc, #332]	@ (8001428 <DHT22_Read+0x2c0>)
 80012dc:	f023 0301 	bic.w	r3, r3, #1
 80012e0:	6013      	str	r3, [r2, #0]
    		uint8_t pulseWidth = (TIM5->CNT) - start; //measure current time
 80012e2:	4b51      	ldr	r3, [pc, #324]	@ (8001428 <DHT22_Read+0x2c0>)
 80012e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80012e6:	b2da      	uxtb	r2, r3
 80012e8:	6a3b      	ldr	r3, [r7, #32]
 80012ea:	b2db      	uxtb	r3, r3
 80012ec:	1ad3      	subs	r3, r2, r3
 80012ee:	77fb      	strb	r3, [r7, #31]
    		TIM5->CNT = 0;	//Clear CNT
 80012f0:	4b4d      	ldr	r3, [pc, #308]	@ (8001428 <DHT22_Read+0x2c0>)
 80012f2:	2200      	movs	r2, #0
 80012f4:	625a      	str	r2, [r3, #36]	@ 0x24

    		//Decode bit
    		if(pulseWidth > 50){
 80012f6:	7ffb      	ldrb	r3, [r7, #31]
 80012f8:	2b32      	cmp	r3, #50	@ 0x32
 80012fa:	d917      	bls.n	800132c <DHT22_Read+0x1c4>
    			//High pulse > 50us is a '1'
    			data[byteIndex] |= (1<<(7-bitIndex));
 80012fc:	7dbb      	ldrb	r3, [r7, #22]
 80012fe:	b2db      	uxtb	r3, r3
 8001300:	f1c3 0307 	rsb	r3, r3, #7
 8001304:	2201      	movs	r2, #1
 8001306:	fa02 f003 	lsl.w	r0, r2, r3
 800130a:	7dfb      	ldrb	r3, [r7, #23]
 800130c:	b2d9      	uxtb	r1, r3
 800130e:	460b      	mov	r3, r1
 8001310:	3328      	adds	r3, #40	@ 0x28
 8001312:	443b      	add	r3, r7
 8001314:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8001318:	b25a      	sxtb	r2, r3
 800131a:	b243      	sxtb	r3, r0
 800131c:	4313      	orrs	r3, r2
 800131e:	b25a      	sxtb	r2, r3
 8001320:	460b      	mov	r3, r1
 8001322:	b2d2      	uxtb	r2, r2
 8001324:	3328      	adds	r3, #40	@ 0x28
 8001326:	443b      	add	r3, r7
 8001328:	f803 2c10 	strb.w	r2, [r3, #-16]
    	for(volatile uint8_t bitIndex = 0; bitIndex < 8; bitIndex++){
 800132c:	7dbb      	ldrb	r3, [r7, #22]
 800132e:	b2db      	uxtb	r3, r3
 8001330:	3301      	adds	r3, #1
 8001332:	b2db      	uxtb	r3, r3
 8001334:	75bb      	strb	r3, [r7, #22]
 8001336:	7dbb      	ldrb	r3, [r7, #22]
 8001338:	b2db      	uxtb	r3, r3
 800133a:	2b07      	cmp	r3, #7
 800133c:	d992      	bls.n	8001264 <DHT22_Read+0xfc>
    for(volatile uint8_t byteIndex = 0; byteIndex < 5; byteIndex++){
 800133e:	7dfb      	ldrb	r3, [r7, #23]
 8001340:	b2db      	uxtb	r3, r3
 8001342:	3301      	adds	r3, #1
 8001344:	b2db      	uxtb	r3, r3
 8001346:	75fb      	strb	r3, [r7, #23]
 8001348:	7dfb      	ldrb	r3, [r7, #23]
 800134a:	b2db      	uxtb	r3, r3
 800134c:	2b04      	cmp	r3, #4
 800134e:	d986      	bls.n	800125e <DHT22_Read+0xf6>
//    	return DHT22_ERR_CHECKSUM;
//    }
//    printf("Checksum value: %d", checksum);

    /*Convert Data to Temp & Humidity*/
    *humidity = (((data[0] << 8) | data[1]) * 0.1)/100; //Convert to %RH
 8001350:	7e3b      	ldrb	r3, [r7, #24]
 8001352:	021b      	lsls	r3, r3, #8
 8001354:	7e7a      	ldrb	r2, [r7, #25]
 8001356:	4313      	orrs	r3, r2
 8001358:	4618      	mov	r0, r3
 800135a:	f7ff f8eb 	bl	8000534 <__aeabi_i2d>
 800135e:	a330      	add	r3, pc, #192	@ (adr r3, 8001420 <DHT22_Read+0x2b8>)
 8001360:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001364:	f7ff f950 	bl	8000608 <__aeabi_dmul>
 8001368:	4602      	mov	r2, r0
 800136a:	460b      	mov	r3, r1
 800136c:	4610      	mov	r0, r2
 800136e:	4619      	mov	r1, r3
 8001370:	f04f 0200 	mov.w	r2, #0
 8001374:	4b2d      	ldr	r3, [pc, #180]	@ (800142c <DHT22_Read+0x2c4>)
 8001376:	f7ff fa71 	bl	800085c <__aeabi_ddiv>
 800137a:	4602      	mov	r2, r0
 800137c:	460b      	mov	r3, r1
 800137e:	4610      	mov	r0, r2
 8001380:	4619      	mov	r1, r3
 8001382:	f7ff fc19 	bl	8000bb8 <__aeabi_d2f>
 8001386:	4602      	mov	r2, r0
 8001388:	683b      	ldr	r3, [r7, #0]
 800138a:	601a      	str	r2, [r3, #0]
    *temp = ((((data[2] & 0x7F) << 8) | data[3]) * 0.1)/100; //Convert to *C
 800138c:	7ebb      	ldrb	r3, [r7, #26]
 800138e:	021b      	lsls	r3, r3, #8
 8001390:	f403 43fe 	and.w	r3, r3, #32512	@ 0x7f00
 8001394:	7efa      	ldrb	r2, [r7, #27]
 8001396:	4313      	orrs	r3, r2
 8001398:	4618      	mov	r0, r3
 800139a:	f7ff f8cb 	bl	8000534 <__aeabi_i2d>
 800139e:	a320      	add	r3, pc, #128	@ (adr r3, 8001420 <DHT22_Read+0x2b8>)
 80013a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013a4:	f7ff f930 	bl	8000608 <__aeabi_dmul>
 80013a8:	4602      	mov	r2, r0
 80013aa:	460b      	mov	r3, r1
 80013ac:	4610      	mov	r0, r2
 80013ae:	4619      	mov	r1, r3
 80013b0:	f04f 0200 	mov.w	r2, #0
 80013b4:	4b1d      	ldr	r3, [pc, #116]	@ (800142c <DHT22_Read+0x2c4>)
 80013b6:	f7ff fa51 	bl	800085c <__aeabi_ddiv>
 80013ba:	4602      	mov	r2, r0
 80013bc:	460b      	mov	r3, r1
 80013be:	4610      	mov	r0, r2
 80013c0:	4619      	mov	r1, r3
 80013c2:	f7ff fbf9 	bl	8000bb8 <__aeabi_d2f>
 80013c6:	4602      	mov	r2, r0
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	601a      	str	r2, [r3, #0]

    //condition to check negative temperature
    printf("Read successfully through DHT22 sensor\n");
 80013cc:	4818      	ldr	r0, [pc, #96]	@ (8001430 <DHT22_Read+0x2c8>)
 80013ce:	f000 fef3 	bl	80021b8 <puts>
    printf("Temperature: %.2f *c\n", *temp);
 80013d2:	687b      	ldr	r3, [r7, #4]
 80013d4:	681b      	ldr	r3, [r3, #0]
 80013d6:	4618      	mov	r0, r3
 80013d8:	f7ff f8be 	bl	8000558 <__aeabi_f2d>
 80013dc:	4602      	mov	r2, r0
 80013de:	460b      	mov	r3, r1
 80013e0:	4814      	ldr	r0, [pc, #80]	@ (8001434 <DHT22_Read+0x2cc>)
 80013e2:	f000 fe81 	bl	80020e8 <iprintf>
    printf("Humidity: %.2f RH\n", *humidity);
 80013e6:	683b      	ldr	r3, [r7, #0]
 80013e8:	681b      	ldr	r3, [r3, #0]
 80013ea:	4618      	mov	r0, r3
 80013ec:	f7ff f8b4 	bl	8000558 <__aeabi_f2d>
 80013f0:	4602      	mov	r2, r0
 80013f2:	460b      	mov	r3, r1
 80013f4:	4810      	ldr	r0, [pc, #64]	@ (8001438 <DHT22_Read+0x2d0>)
 80013f6:	f000 fe77 	bl	80020e8 <iprintf>

    /*Back to normal state*/
//    TIMx_Delay_ms(TIM5, 1000);
    GPIO_SetMode(GPIO, GPIO_Pin_no, GPIO_MODE_OUTPUT);
 80013fa:	7afb      	ldrb	r3, [r7, #11]
 80013fc:	2201      	movs	r2, #1
 80013fe:	4619      	mov	r1, r3
 8001400:	68f8      	ldr	r0, [r7, #12]
 8001402:	f7ff fccd 	bl	8000da0 <GPIO_SetMode>
    GPIO_SetPin(GPIO, GPIO_Pin_no);
 8001406:	7afb      	ldrb	r3, [r7, #11]
 8001408:	4619      	mov	r1, r3
 800140a:	68f8      	ldr	r0, [r7, #12]
 800140c:	f7ff fd33 	bl	8000e76 <GPIO_SetPin>
    return DHT22_SUCCESS;
 8001410:	2300      	movs	r3, #0
}
 8001412:	4618      	mov	r0, r3
 8001414:	3728      	adds	r7, #40	@ 0x28
 8001416:	46bd      	mov	sp, r7
 8001418:	bd80      	pop	{r7, pc}
 800141a:	bf00      	nop
 800141c:	f3af 8000 	nop.w
 8001420:	9999999a 	.word	0x9999999a
 8001424:	3fb99999 	.word	0x3fb99999
 8001428:	40000c00 	.word	0x40000c00
 800142c:	40590000 	.word	0x40590000
 8001430:	080040b0 	.word	0x080040b0
 8001434:	080040d8 	.word	0x080040d8
 8001438:	080040f0 	.word	0x080040f0

0800143c <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
#warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 800143c:	b580      	push	{r7, lr}
 800143e:	b084      	sub	sp, #16
 8001440:	af00      	add	r7, sp, #0
	DHT22_DS_t data;
	// 1. Initialize TIMER 2
	TIMx_Delay_ms_Init(TIM2);
 8001442:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8001446:	f7ff fdf2 	bl	800102e <TIMx_Delay_ms_Init>
	// 2. Intialize DHT22 Sensor
	DHT22_Init(GPIOC, GPIO_PIN_10);
 800144a:	210a      	movs	r1, #10
 800144c:	480c      	ldr	r0, [pc, #48]	@ (8001480 <main+0x44>)
 800144e:	f7ff fe5d 	bl	800110c <DHT22_Init>
	/* Loop forever */
	for (;;) {
		uint8_t status = DHT22_Read(GPIOC, GPIO_PIN_10, &data.Temperature, &data.Humidity);
 8001452:	1d3b      	adds	r3, r7, #4
 8001454:	3304      	adds	r3, #4
 8001456:	1d3a      	adds	r2, r7, #4
 8001458:	210a      	movs	r1, #10
 800145a:	4809      	ldr	r0, [pc, #36]	@ (8001480 <main+0x44>)
 800145c:	f7ff fe84 	bl	8001168 <DHT22_Read>
 8001460:	4603      	mov	r3, r0
 8001462:	73fb      	strb	r3, [r7, #15]
		printf("Status of DHT22 Read: %d\n", status);
 8001464:	7bfb      	ldrb	r3, [r7, #15]
 8001466:	4619      	mov	r1, r3
 8001468:	4806      	ldr	r0, [pc, #24]	@ (8001484 <main+0x48>)
 800146a:	f000 fe3d 	bl	80020e8 <iprintf>
		TIMx_Delay_ms(TIM2, 2000); // 2s delay
 800146e:	f44f 61fa 	mov.w	r1, #2000	@ 0x7d0
 8001472:	f04f 4080 	mov.w	r0, #1073741824	@ 0x40000000
 8001476:	f7ff fdf2 	bl	800105e <TIMx_Delay_ms>
	for (;;) {
 800147a:	bf00      	nop
 800147c:	e7e9      	b.n	8001452 <main+0x16>
 800147e:	bf00      	nop
 8001480:	40020800 	.word	0x40020800
 8001484:	08004104 	.word	0x08004104

08001488 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8001488:	b480      	push	{r7}
 800148a:	b083      	sub	sp, #12
 800148c:	af00      	add	r7, sp, #0
 800148e:	4603      	mov	r3, r0
 8001490:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8001492:	4b0f      	ldr	r3, [pc, #60]	@ (80014d0 <ITM_SendChar+0x48>)
 8001494:	681b      	ldr	r3, [r3, #0]
 8001496:	4a0e      	ldr	r2, [pc, #56]	@ (80014d0 <ITM_SendChar+0x48>)
 8001498:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 800149c:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 800149e:	4b0d      	ldr	r3, [pc, #52]	@ (80014d4 <ITM_SendChar+0x4c>)
 80014a0:	681b      	ldr	r3, [r3, #0]
 80014a2:	4a0c      	ldr	r2, [pc, #48]	@ (80014d4 <ITM_SendChar+0x4c>)
 80014a4:	f043 0301 	orr.w	r3, r3, #1
 80014a8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80014aa:	bf00      	nop
 80014ac:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 80014b0:	681b      	ldr	r3, [r3, #0]
 80014b2:	f003 0301 	and.w	r3, r3, #1
 80014b6:	2b00      	cmp	r3, #0
 80014b8:	d0f8      	beq.n	80014ac <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 80014ba:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 80014be:	79fb      	ldrb	r3, [r7, #7]
 80014c0:	6013      	str	r3, [r2, #0]
}
 80014c2:	bf00      	nop
 80014c4:	370c      	adds	r7, #12
 80014c6:	46bd      	mov	sp, r7
 80014c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014cc:	4770      	bx	lr
 80014ce:	bf00      	nop
 80014d0:	e000edfc 	.word	0xe000edfc
 80014d4:	e0000e00 	.word	0xe0000e00

080014d8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80014d8:	b480      	push	{r7}
 80014da:	af00      	add	r7, sp, #0
  return 1;
 80014dc:	2301      	movs	r3, #1
}
 80014de:	4618      	mov	r0, r3
 80014e0:	46bd      	mov	sp, r7
 80014e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80014e6:	4770      	bx	lr

080014e8 <_kill>:

int _kill(int pid, int sig)
{
 80014e8:	b580      	push	{r7, lr}
 80014ea:	b082      	sub	sp, #8
 80014ec:	af00      	add	r7, sp, #0
 80014ee:	6078      	str	r0, [r7, #4]
 80014f0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80014f2:	f000 ff93 	bl	800241c <__errno>
 80014f6:	4603      	mov	r3, r0
 80014f8:	2216      	movs	r2, #22
 80014fa:	601a      	str	r2, [r3, #0]
  return -1;
 80014fc:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001500:	4618      	mov	r0, r3
 8001502:	3708      	adds	r7, #8
 8001504:	46bd      	mov	sp, r7
 8001506:	bd80      	pop	{r7, pc}

08001508 <_exit>:

void _exit (int status)
{
 8001508:	b580      	push	{r7, lr}
 800150a:	b082      	sub	sp, #8
 800150c:	af00      	add	r7, sp, #0
 800150e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001510:	f04f 31ff 	mov.w	r1, #4294967295
 8001514:	6878      	ldr	r0, [r7, #4]
 8001516:	f7ff ffe7 	bl	80014e8 <_kill>
  while (1) {}    /* Make sure we hang here */
 800151a:	bf00      	nop
 800151c:	e7fd      	b.n	800151a <_exit+0x12>

0800151e <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800151e:	b580      	push	{r7, lr}
 8001520:	b086      	sub	sp, #24
 8001522:	af00      	add	r7, sp, #0
 8001524:	60f8      	str	r0, [r7, #12]
 8001526:	60b9      	str	r1, [r7, #8]
 8001528:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800152a:	2300      	movs	r3, #0
 800152c:	617b      	str	r3, [r7, #20]
 800152e:	e00a      	b.n	8001546 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001530:	f3af 8000 	nop.w
 8001534:	4601      	mov	r1, r0
 8001536:	68bb      	ldr	r3, [r7, #8]
 8001538:	1c5a      	adds	r2, r3, #1
 800153a:	60ba      	str	r2, [r7, #8]
 800153c:	b2ca      	uxtb	r2, r1
 800153e:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001540:	697b      	ldr	r3, [r7, #20]
 8001542:	3301      	adds	r3, #1
 8001544:	617b      	str	r3, [r7, #20]
 8001546:	697a      	ldr	r2, [r7, #20]
 8001548:	687b      	ldr	r3, [r7, #4]
 800154a:	429a      	cmp	r2, r3
 800154c:	dbf0      	blt.n	8001530 <_read+0x12>
  }

  return len;
 800154e:	687b      	ldr	r3, [r7, #4]
}
 8001550:	4618      	mov	r0, r3
 8001552:	3718      	adds	r7, #24
 8001554:	46bd      	mov	sp, r7
 8001556:	bd80      	pop	{r7, pc}

08001558 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001558:	b580      	push	{r7, lr}
 800155a:	b086      	sub	sp, #24
 800155c:	af00      	add	r7, sp, #0
 800155e:	60f8      	str	r0, [r7, #12]
 8001560:	60b9      	str	r1, [r7, #8]
 8001562:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001564:	2300      	movs	r3, #0
 8001566:	617b      	str	r3, [r7, #20]
 8001568:	e009      	b.n	800157e <_write+0x26>
  {
    //__io_putchar(*ptr++);
    ITM_SendChar(*ptr++);
 800156a:	68bb      	ldr	r3, [r7, #8]
 800156c:	1c5a      	adds	r2, r3, #1
 800156e:	60ba      	str	r2, [r7, #8]
 8001570:	781b      	ldrb	r3, [r3, #0]
 8001572:	4618      	mov	r0, r3
 8001574:	f7ff ff88 	bl	8001488 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001578:	697b      	ldr	r3, [r7, #20]
 800157a:	3301      	adds	r3, #1
 800157c:	617b      	str	r3, [r7, #20]
 800157e:	697a      	ldr	r2, [r7, #20]
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	429a      	cmp	r2, r3
 8001584:	dbf1      	blt.n	800156a <_write+0x12>
  }
  return len;
 8001586:	687b      	ldr	r3, [r7, #4]
}
 8001588:	4618      	mov	r0, r3
 800158a:	3718      	adds	r7, #24
 800158c:	46bd      	mov	sp, r7
 800158e:	bd80      	pop	{r7, pc}

08001590 <_close>:

int _close(int file)
{
 8001590:	b480      	push	{r7}
 8001592:	b083      	sub	sp, #12
 8001594:	af00      	add	r7, sp, #0
 8001596:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8001598:	f04f 33ff 	mov.w	r3, #4294967295
}
 800159c:	4618      	mov	r0, r3
 800159e:	370c      	adds	r7, #12
 80015a0:	46bd      	mov	sp, r7
 80015a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015a6:	4770      	bx	lr

080015a8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80015a8:	b480      	push	{r7}
 80015aa:	b083      	sub	sp, #12
 80015ac:	af00      	add	r7, sp, #0
 80015ae:	6078      	str	r0, [r7, #4]
 80015b0:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80015b2:	683b      	ldr	r3, [r7, #0]
 80015b4:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80015b8:	605a      	str	r2, [r3, #4]
  return 0;
 80015ba:	2300      	movs	r3, #0
}
 80015bc:	4618      	mov	r0, r3
 80015be:	370c      	adds	r7, #12
 80015c0:	46bd      	mov	sp, r7
 80015c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015c6:	4770      	bx	lr

080015c8 <_isatty>:

int _isatty(int file)
{
 80015c8:	b480      	push	{r7}
 80015ca:	b083      	sub	sp, #12
 80015cc:	af00      	add	r7, sp, #0
 80015ce:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80015d0:	2301      	movs	r3, #1
}
 80015d2:	4618      	mov	r0, r3
 80015d4:	370c      	adds	r7, #12
 80015d6:	46bd      	mov	sp, r7
 80015d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015dc:	4770      	bx	lr

080015de <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80015de:	b480      	push	{r7}
 80015e0:	b085      	sub	sp, #20
 80015e2:	af00      	add	r7, sp, #0
 80015e4:	60f8      	str	r0, [r7, #12]
 80015e6:	60b9      	str	r1, [r7, #8]
 80015e8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80015ea:	2300      	movs	r3, #0
}
 80015ec:	4618      	mov	r0, r3
 80015ee:	3714      	adds	r7, #20
 80015f0:	46bd      	mov	sp, r7
 80015f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015f6:	4770      	bx	lr

080015f8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80015f8:	b580      	push	{r7, lr}
 80015fa:	b086      	sub	sp, #24
 80015fc:	af00      	add	r7, sp, #0
 80015fe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001600:	4a14      	ldr	r2, [pc, #80]	@ (8001654 <_sbrk+0x5c>)
 8001602:	4b15      	ldr	r3, [pc, #84]	@ (8001658 <_sbrk+0x60>)
 8001604:	1ad3      	subs	r3, r2, r3
 8001606:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001608:	697b      	ldr	r3, [r7, #20]
 800160a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800160c:	4b13      	ldr	r3, [pc, #76]	@ (800165c <_sbrk+0x64>)
 800160e:	681b      	ldr	r3, [r3, #0]
 8001610:	2b00      	cmp	r3, #0
 8001612:	d102      	bne.n	800161a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001614:	4b11      	ldr	r3, [pc, #68]	@ (800165c <_sbrk+0x64>)
 8001616:	4a12      	ldr	r2, [pc, #72]	@ (8001660 <_sbrk+0x68>)
 8001618:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800161a:	4b10      	ldr	r3, [pc, #64]	@ (800165c <_sbrk+0x64>)
 800161c:	681a      	ldr	r2, [r3, #0]
 800161e:	687b      	ldr	r3, [r7, #4]
 8001620:	4413      	add	r3, r2
 8001622:	693a      	ldr	r2, [r7, #16]
 8001624:	429a      	cmp	r2, r3
 8001626:	d207      	bcs.n	8001638 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001628:	f000 fef8 	bl	800241c <__errno>
 800162c:	4603      	mov	r3, r0
 800162e:	220c      	movs	r2, #12
 8001630:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001632:	f04f 33ff 	mov.w	r3, #4294967295
 8001636:	e009      	b.n	800164c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001638:	4b08      	ldr	r3, [pc, #32]	@ (800165c <_sbrk+0x64>)
 800163a:	681b      	ldr	r3, [r3, #0]
 800163c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800163e:	4b07      	ldr	r3, [pc, #28]	@ (800165c <_sbrk+0x64>)
 8001640:	681a      	ldr	r2, [r3, #0]
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	4413      	add	r3, r2
 8001646:	4a05      	ldr	r2, [pc, #20]	@ (800165c <_sbrk+0x64>)
 8001648:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800164a:	68fb      	ldr	r3, [r7, #12]
}
 800164c:	4618      	mov	r0, r3
 800164e:	3718      	adds	r7, #24
 8001650:	46bd      	mov	sp, r7
 8001652:	bd80      	pop	{r7, pc}
 8001654:	20020000 	.word	0x20020000
 8001658:	00000400 	.word	0x00000400
 800165c:	200001e4 	.word	0x200001e4
 8001660:	20000338 	.word	0x20000338

08001664 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8001664:	480d      	ldr	r0, [pc, #52]	@ (800169c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8001666:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8001668:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800166c:	480c      	ldr	r0, [pc, #48]	@ (80016a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800166e:	490d      	ldr	r1, [pc, #52]	@ (80016a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8001670:	4a0d      	ldr	r2, [pc, #52]	@ (80016a8 <LoopForever+0xe>)
  movs r3, #0
 8001672:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001674:	e002      	b.n	800167c <LoopCopyDataInit>

08001676 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001676:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001678:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800167a:	3304      	adds	r3, #4

0800167c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800167c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800167e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001680:	d3f9      	bcc.n	8001676 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001682:	4a0a      	ldr	r2, [pc, #40]	@ (80016ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8001684:	4c0a      	ldr	r4, [pc, #40]	@ (80016b0 <LoopForever+0x16>)
  movs r3, #0
 8001686:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001688:	e001      	b.n	800168e <LoopFillZerobss>

0800168a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800168a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800168c:	3204      	adds	r2, #4

0800168e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800168e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001690:	d3fb      	bcc.n	800168a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8001692:	f000 fec9 	bl	8002428 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001696:	f7ff fed1 	bl	800143c <main>

0800169a <LoopForever>:

LoopForever:
  b LoopForever
 800169a:	e7fe      	b.n	800169a <LoopForever>
  ldr   r0, =_estack
 800169c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80016a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80016a4:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 80016a8:	080044a0 	.word	0x080044a0
  ldr r2, =_sbss
 80016ac:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 80016b0:	20000334 	.word	0x20000334

080016b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80016b4:	e7fe      	b.n	80016b4 <ADC_IRQHandler>

080016b6 <__cvt>:
 80016b6:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80016ba:	ec57 6b10 	vmov	r6, r7, d0
 80016be:	2f00      	cmp	r7, #0
 80016c0:	460c      	mov	r4, r1
 80016c2:	4619      	mov	r1, r3
 80016c4:	463b      	mov	r3, r7
 80016c6:	bfbb      	ittet	lt
 80016c8:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 80016cc:	461f      	movlt	r7, r3
 80016ce:	2300      	movge	r3, #0
 80016d0:	232d      	movlt	r3, #45	@ 0x2d
 80016d2:	700b      	strb	r3, [r1, #0]
 80016d4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80016d6:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 80016da:	4691      	mov	r9, r2
 80016dc:	f023 0820 	bic.w	r8, r3, #32
 80016e0:	bfbc      	itt	lt
 80016e2:	4632      	movlt	r2, r6
 80016e4:	4616      	movlt	r6, r2
 80016e6:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80016ea:	d005      	beq.n	80016f8 <__cvt+0x42>
 80016ec:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 80016f0:	d100      	bne.n	80016f4 <__cvt+0x3e>
 80016f2:	3401      	adds	r4, #1
 80016f4:	2102      	movs	r1, #2
 80016f6:	e000      	b.n	80016fa <__cvt+0x44>
 80016f8:	2103      	movs	r1, #3
 80016fa:	ab03      	add	r3, sp, #12
 80016fc:	9301      	str	r3, [sp, #4]
 80016fe:	ab02      	add	r3, sp, #8
 8001700:	9300      	str	r3, [sp, #0]
 8001702:	ec47 6b10 	vmov	d0, r6, r7
 8001706:	4653      	mov	r3, sl
 8001708:	4622      	mov	r2, r4
 800170a:	f000 ff3d 	bl	8002588 <_dtoa_r>
 800170e:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8001712:	4605      	mov	r5, r0
 8001714:	d119      	bne.n	800174a <__cvt+0x94>
 8001716:	f019 0f01 	tst.w	r9, #1
 800171a:	d00e      	beq.n	800173a <__cvt+0x84>
 800171c:	eb00 0904 	add.w	r9, r0, r4
 8001720:	2200      	movs	r2, #0
 8001722:	2300      	movs	r3, #0
 8001724:	4630      	mov	r0, r6
 8001726:	4639      	mov	r1, r7
 8001728:	f7ff f9d6 	bl	8000ad8 <__aeabi_dcmpeq>
 800172c:	b108      	cbz	r0, 8001732 <__cvt+0x7c>
 800172e:	f8cd 900c 	str.w	r9, [sp, #12]
 8001732:	2230      	movs	r2, #48	@ 0x30
 8001734:	9b03      	ldr	r3, [sp, #12]
 8001736:	454b      	cmp	r3, r9
 8001738:	d31e      	bcc.n	8001778 <__cvt+0xc2>
 800173a:	9b03      	ldr	r3, [sp, #12]
 800173c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800173e:	1b5b      	subs	r3, r3, r5
 8001740:	4628      	mov	r0, r5
 8001742:	6013      	str	r3, [r2, #0]
 8001744:	b004      	add	sp, #16
 8001746:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800174a:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 800174e:	eb00 0904 	add.w	r9, r0, r4
 8001752:	d1e5      	bne.n	8001720 <__cvt+0x6a>
 8001754:	7803      	ldrb	r3, [r0, #0]
 8001756:	2b30      	cmp	r3, #48	@ 0x30
 8001758:	d10a      	bne.n	8001770 <__cvt+0xba>
 800175a:	2200      	movs	r2, #0
 800175c:	2300      	movs	r3, #0
 800175e:	4630      	mov	r0, r6
 8001760:	4639      	mov	r1, r7
 8001762:	f7ff f9b9 	bl	8000ad8 <__aeabi_dcmpeq>
 8001766:	b918      	cbnz	r0, 8001770 <__cvt+0xba>
 8001768:	f1c4 0401 	rsb	r4, r4, #1
 800176c:	f8ca 4000 	str.w	r4, [sl]
 8001770:	f8da 3000 	ldr.w	r3, [sl]
 8001774:	4499      	add	r9, r3
 8001776:	e7d3      	b.n	8001720 <__cvt+0x6a>
 8001778:	1c59      	adds	r1, r3, #1
 800177a:	9103      	str	r1, [sp, #12]
 800177c:	701a      	strb	r2, [r3, #0]
 800177e:	e7d9      	b.n	8001734 <__cvt+0x7e>

08001780 <__exponent>:
 8001780:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001782:	2900      	cmp	r1, #0
 8001784:	bfba      	itte	lt
 8001786:	4249      	neglt	r1, r1
 8001788:	232d      	movlt	r3, #45	@ 0x2d
 800178a:	232b      	movge	r3, #43	@ 0x2b
 800178c:	2909      	cmp	r1, #9
 800178e:	7002      	strb	r2, [r0, #0]
 8001790:	7043      	strb	r3, [r0, #1]
 8001792:	dd29      	ble.n	80017e8 <__exponent+0x68>
 8001794:	f10d 0307 	add.w	r3, sp, #7
 8001798:	461d      	mov	r5, r3
 800179a:	270a      	movs	r7, #10
 800179c:	461a      	mov	r2, r3
 800179e:	fbb1 f6f7 	udiv	r6, r1, r7
 80017a2:	fb07 1416 	mls	r4, r7, r6, r1
 80017a6:	3430      	adds	r4, #48	@ 0x30
 80017a8:	f802 4c01 	strb.w	r4, [r2, #-1]
 80017ac:	460c      	mov	r4, r1
 80017ae:	2c63      	cmp	r4, #99	@ 0x63
 80017b0:	f103 33ff 	add.w	r3, r3, #4294967295
 80017b4:	4631      	mov	r1, r6
 80017b6:	dcf1      	bgt.n	800179c <__exponent+0x1c>
 80017b8:	3130      	adds	r1, #48	@ 0x30
 80017ba:	1e94      	subs	r4, r2, #2
 80017bc:	f803 1c01 	strb.w	r1, [r3, #-1]
 80017c0:	1c41      	adds	r1, r0, #1
 80017c2:	4623      	mov	r3, r4
 80017c4:	42ab      	cmp	r3, r5
 80017c6:	d30a      	bcc.n	80017de <__exponent+0x5e>
 80017c8:	f10d 0309 	add.w	r3, sp, #9
 80017cc:	1a9b      	subs	r3, r3, r2
 80017ce:	42ac      	cmp	r4, r5
 80017d0:	bf88      	it	hi
 80017d2:	2300      	movhi	r3, #0
 80017d4:	3302      	adds	r3, #2
 80017d6:	4403      	add	r3, r0
 80017d8:	1a18      	subs	r0, r3, r0
 80017da:	b003      	add	sp, #12
 80017dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80017de:	f813 6b01 	ldrb.w	r6, [r3], #1
 80017e2:	f801 6f01 	strb.w	r6, [r1, #1]!
 80017e6:	e7ed      	b.n	80017c4 <__exponent+0x44>
 80017e8:	2330      	movs	r3, #48	@ 0x30
 80017ea:	3130      	adds	r1, #48	@ 0x30
 80017ec:	7083      	strb	r3, [r0, #2]
 80017ee:	70c1      	strb	r1, [r0, #3]
 80017f0:	1d03      	adds	r3, r0, #4
 80017f2:	e7f1      	b.n	80017d8 <__exponent+0x58>

080017f4 <_printf_float>:
 80017f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80017f8:	b08d      	sub	sp, #52	@ 0x34
 80017fa:	460c      	mov	r4, r1
 80017fc:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8001800:	4616      	mov	r6, r2
 8001802:	461f      	mov	r7, r3
 8001804:	4605      	mov	r5, r0
 8001806:	f000 fdbf 	bl	8002388 <_localeconv_r>
 800180a:	6803      	ldr	r3, [r0, #0]
 800180c:	9304      	str	r3, [sp, #16]
 800180e:	4618      	mov	r0, r3
 8001810:	f7fe fd36 	bl	8000280 <strlen>
 8001814:	2300      	movs	r3, #0
 8001816:	930a      	str	r3, [sp, #40]	@ 0x28
 8001818:	f8d8 3000 	ldr.w	r3, [r8]
 800181c:	9005      	str	r0, [sp, #20]
 800181e:	3307      	adds	r3, #7
 8001820:	f023 0307 	bic.w	r3, r3, #7
 8001824:	f103 0208 	add.w	r2, r3, #8
 8001828:	f894 a018 	ldrb.w	sl, [r4, #24]
 800182c:	f8d4 b000 	ldr.w	fp, [r4]
 8001830:	f8c8 2000 	str.w	r2, [r8]
 8001834:	e9d3 8900 	ldrd	r8, r9, [r3]
 8001838:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 800183c:	9307      	str	r3, [sp, #28]
 800183e:	f8cd 8018 	str.w	r8, [sp, #24]
 8001842:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8001846:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800184a:	4b9c      	ldr	r3, [pc, #624]	@ (8001abc <_printf_float+0x2c8>)
 800184c:	f04f 32ff 	mov.w	r2, #4294967295
 8001850:	f7ff f974 	bl	8000b3c <__aeabi_dcmpun>
 8001854:	bb70      	cbnz	r0, 80018b4 <_printf_float+0xc0>
 8001856:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800185a:	4b98      	ldr	r3, [pc, #608]	@ (8001abc <_printf_float+0x2c8>)
 800185c:	f04f 32ff 	mov.w	r2, #4294967295
 8001860:	f7ff f94e 	bl	8000b00 <__aeabi_dcmple>
 8001864:	bb30      	cbnz	r0, 80018b4 <_printf_float+0xc0>
 8001866:	2200      	movs	r2, #0
 8001868:	2300      	movs	r3, #0
 800186a:	4640      	mov	r0, r8
 800186c:	4649      	mov	r1, r9
 800186e:	f7ff f93d 	bl	8000aec <__aeabi_dcmplt>
 8001872:	b110      	cbz	r0, 800187a <_printf_float+0x86>
 8001874:	232d      	movs	r3, #45	@ 0x2d
 8001876:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800187a:	4a91      	ldr	r2, [pc, #580]	@ (8001ac0 <_printf_float+0x2cc>)
 800187c:	4b91      	ldr	r3, [pc, #580]	@ (8001ac4 <_printf_float+0x2d0>)
 800187e:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8001882:	bf94      	ite	ls
 8001884:	4690      	movls	r8, r2
 8001886:	4698      	movhi	r8, r3
 8001888:	2303      	movs	r3, #3
 800188a:	6123      	str	r3, [r4, #16]
 800188c:	f02b 0304 	bic.w	r3, fp, #4
 8001890:	6023      	str	r3, [r4, #0]
 8001892:	f04f 0900 	mov.w	r9, #0
 8001896:	9700      	str	r7, [sp, #0]
 8001898:	4633      	mov	r3, r6
 800189a:	aa0b      	add	r2, sp, #44	@ 0x2c
 800189c:	4621      	mov	r1, r4
 800189e:	4628      	mov	r0, r5
 80018a0:	f000 f9d2 	bl	8001c48 <_printf_common>
 80018a4:	3001      	adds	r0, #1
 80018a6:	f040 808d 	bne.w	80019c4 <_printf_float+0x1d0>
 80018aa:	f04f 30ff 	mov.w	r0, #4294967295
 80018ae:	b00d      	add	sp, #52	@ 0x34
 80018b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80018b4:	4642      	mov	r2, r8
 80018b6:	464b      	mov	r3, r9
 80018b8:	4640      	mov	r0, r8
 80018ba:	4649      	mov	r1, r9
 80018bc:	f7ff f93e 	bl	8000b3c <__aeabi_dcmpun>
 80018c0:	b140      	cbz	r0, 80018d4 <_printf_float+0xe0>
 80018c2:	464b      	mov	r3, r9
 80018c4:	2b00      	cmp	r3, #0
 80018c6:	bfbc      	itt	lt
 80018c8:	232d      	movlt	r3, #45	@ 0x2d
 80018ca:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 80018ce:	4a7e      	ldr	r2, [pc, #504]	@ (8001ac8 <_printf_float+0x2d4>)
 80018d0:	4b7e      	ldr	r3, [pc, #504]	@ (8001acc <_printf_float+0x2d8>)
 80018d2:	e7d4      	b.n	800187e <_printf_float+0x8a>
 80018d4:	6863      	ldr	r3, [r4, #4]
 80018d6:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 80018da:	9206      	str	r2, [sp, #24]
 80018dc:	1c5a      	adds	r2, r3, #1
 80018de:	d13b      	bne.n	8001958 <_printf_float+0x164>
 80018e0:	2306      	movs	r3, #6
 80018e2:	6063      	str	r3, [r4, #4]
 80018e4:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 80018e8:	2300      	movs	r3, #0
 80018ea:	6022      	str	r2, [r4, #0]
 80018ec:	9303      	str	r3, [sp, #12]
 80018ee:	ab0a      	add	r3, sp, #40	@ 0x28
 80018f0:	e9cd a301 	strd	sl, r3, [sp, #4]
 80018f4:	ab09      	add	r3, sp, #36	@ 0x24
 80018f6:	9300      	str	r3, [sp, #0]
 80018f8:	6861      	ldr	r1, [r4, #4]
 80018fa:	ec49 8b10 	vmov	d0, r8, r9
 80018fe:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8001902:	4628      	mov	r0, r5
 8001904:	f7ff fed7 	bl	80016b6 <__cvt>
 8001908:	9b06      	ldr	r3, [sp, #24]
 800190a:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800190c:	2b47      	cmp	r3, #71	@ 0x47
 800190e:	4680      	mov	r8, r0
 8001910:	d129      	bne.n	8001966 <_printf_float+0x172>
 8001912:	1cc8      	adds	r0, r1, #3
 8001914:	db02      	blt.n	800191c <_printf_float+0x128>
 8001916:	6863      	ldr	r3, [r4, #4]
 8001918:	4299      	cmp	r1, r3
 800191a:	dd41      	ble.n	80019a0 <_printf_float+0x1ac>
 800191c:	f1aa 0a02 	sub.w	sl, sl, #2
 8001920:	fa5f fa8a 	uxtb.w	sl, sl
 8001924:	3901      	subs	r1, #1
 8001926:	4652      	mov	r2, sl
 8001928:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800192c:	9109      	str	r1, [sp, #36]	@ 0x24
 800192e:	f7ff ff27 	bl	8001780 <__exponent>
 8001932:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8001934:	1813      	adds	r3, r2, r0
 8001936:	2a01      	cmp	r2, #1
 8001938:	4681      	mov	r9, r0
 800193a:	6123      	str	r3, [r4, #16]
 800193c:	dc02      	bgt.n	8001944 <_printf_float+0x150>
 800193e:	6822      	ldr	r2, [r4, #0]
 8001940:	07d2      	lsls	r2, r2, #31
 8001942:	d501      	bpl.n	8001948 <_printf_float+0x154>
 8001944:	3301      	adds	r3, #1
 8001946:	6123      	str	r3, [r4, #16]
 8001948:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800194c:	2b00      	cmp	r3, #0
 800194e:	d0a2      	beq.n	8001896 <_printf_float+0xa2>
 8001950:	232d      	movs	r3, #45	@ 0x2d
 8001952:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001956:	e79e      	b.n	8001896 <_printf_float+0xa2>
 8001958:	9a06      	ldr	r2, [sp, #24]
 800195a:	2a47      	cmp	r2, #71	@ 0x47
 800195c:	d1c2      	bne.n	80018e4 <_printf_float+0xf0>
 800195e:	2b00      	cmp	r3, #0
 8001960:	d1c0      	bne.n	80018e4 <_printf_float+0xf0>
 8001962:	2301      	movs	r3, #1
 8001964:	e7bd      	b.n	80018e2 <_printf_float+0xee>
 8001966:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 800196a:	d9db      	bls.n	8001924 <_printf_float+0x130>
 800196c:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8001970:	d118      	bne.n	80019a4 <_printf_float+0x1b0>
 8001972:	2900      	cmp	r1, #0
 8001974:	6863      	ldr	r3, [r4, #4]
 8001976:	dd0b      	ble.n	8001990 <_printf_float+0x19c>
 8001978:	6121      	str	r1, [r4, #16]
 800197a:	b913      	cbnz	r3, 8001982 <_printf_float+0x18e>
 800197c:	6822      	ldr	r2, [r4, #0]
 800197e:	07d0      	lsls	r0, r2, #31
 8001980:	d502      	bpl.n	8001988 <_printf_float+0x194>
 8001982:	3301      	adds	r3, #1
 8001984:	440b      	add	r3, r1
 8001986:	6123      	str	r3, [r4, #16]
 8001988:	65a1      	str	r1, [r4, #88]	@ 0x58
 800198a:	f04f 0900 	mov.w	r9, #0
 800198e:	e7db      	b.n	8001948 <_printf_float+0x154>
 8001990:	b913      	cbnz	r3, 8001998 <_printf_float+0x1a4>
 8001992:	6822      	ldr	r2, [r4, #0]
 8001994:	07d2      	lsls	r2, r2, #31
 8001996:	d501      	bpl.n	800199c <_printf_float+0x1a8>
 8001998:	3302      	adds	r3, #2
 800199a:	e7f4      	b.n	8001986 <_printf_float+0x192>
 800199c:	2301      	movs	r3, #1
 800199e:	e7f2      	b.n	8001986 <_printf_float+0x192>
 80019a0:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 80019a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80019a6:	4299      	cmp	r1, r3
 80019a8:	db05      	blt.n	80019b6 <_printf_float+0x1c2>
 80019aa:	6823      	ldr	r3, [r4, #0]
 80019ac:	6121      	str	r1, [r4, #16]
 80019ae:	07d8      	lsls	r0, r3, #31
 80019b0:	d5ea      	bpl.n	8001988 <_printf_float+0x194>
 80019b2:	1c4b      	adds	r3, r1, #1
 80019b4:	e7e7      	b.n	8001986 <_printf_float+0x192>
 80019b6:	2900      	cmp	r1, #0
 80019b8:	bfd4      	ite	le
 80019ba:	f1c1 0202 	rsble	r2, r1, #2
 80019be:	2201      	movgt	r2, #1
 80019c0:	4413      	add	r3, r2
 80019c2:	e7e0      	b.n	8001986 <_printf_float+0x192>
 80019c4:	6823      	ldr	r3, [r4, #0]
 80019c6:	055a      	lsls	r2, r3, #21
 80019c8:	d407      	bmi.n	80019da <_printf_float+0x1e6>
 80019ca:	6923      	ldr	r3, [r4, #16]
 80019cc:	4642      	mov	r2, r8
 80019ce:	4631      	mov	r1, r6
 80019d0:	4628      	mov	r0, r5
 80019d2:	47b8      	blx	r7
 80019d4:	3001      	adds	r0, #1
 80019d6:	d12b      	bne.n	8001a30 <_printf_float+0x23c>
 80019d8:	e767      	b.n	80018aa <_printf_float+0xb6>
 80019da:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 80019de:	f240 80dd 	bls.w	8001b9c <_printf_float+0x3a8>
 80019e2:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 80019e6:	2200      	movs	r2, #0
 80019e8:	2300      	movs	r3, #0
 80019ea:	f7ff f875 	bl	8000ad8 <__aeabi_dcmpeq>
 80019ee:	2800      	cmp	r0, #0
 80019f0:	d033      	beq.n	8001a5a <_printf_float+0x266>
 80019f2:	4a37      	ldr	r2, [pc, #220]	@ (8001ad0 <_printf_float+0x2dc>)
 80019f4:	2301      	movs	r3, #1
 80019f6:	4631      	mov	r1, r6
 80019f8:	4628      	mov	r0, r5
 80019fa:	47b8      	blx	r7
 80019fc:	3001      	adds	r0, #1
 80019fe:	f43f af54 	beq.w	80018aa <_printf_float+0xb6>
 8001a02:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8001a06:	4543      	cmp	r3, r8
 8001a08:	db02      	blt.n	8001a10 <_printf_float+0x21c>
 8001a0a:	6823      	ldr	r3, [r4, #0]
 8001a0c:	07d8      	lsls	r0, r3, #31
 8001a0e:	d50f      	bpl.n	8001a30 <_printf_float+0x23c>
 8001a10:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001a14:	4631      	mov	r1, r6
 8001a16:	4628      	mov	r0, r5
 8001a18:	47b8      	blx	r7
 8001a1a:	3001      	adds	r0, #1
 8001a1c:	f43f af45 	beq.w	80018aa <_printf_float+0xb6>
 8001a20:	f04f 0900 	mov.w	r9, #0
 8001a24:	f108 38ff 	add.w	r8, r8, #4294967295
 8001a28:	f104 0a1a 	add.w	sl, r4, #26
 8001a2c:	45c8      	cmp	r8, r9
 8001a2e:	dc09      	bgt.n	8001a44 <_printf_float+0x250>
 8001a30:	6823      	ldr	r3, [r4, #0]
 8001a32:	079b      	lsls	r3, r3, #30
 8001a34:	f100 8103 	bmi.w	8001c3e <_printf_float+0x44a>
 8001a38:	68e0      	ldr	r0, [r4, #12]
 8001a3a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8001a3c:	4298      	cmp	r0, r3
 8001a3e:	bfb8      	it	lt
 8001a40:	4618      	movlt	r0, r3
 8001a42:	e734      	b.n	80018ae <_printf_float+0xba>
 8001a44:	2301      	movs	r3, #1
 8001a46:	4652      	mov	r2, sl
 8001a48:	4631      	mov	r1, r6
 8001a4a:	4628      	mov	r0, r5
 8001a4c:	47b8      	blx	r7
 8001a4e:	3001      	adds	r0, #1
 8001a50:	f43f af2b 	beq.w	80018aa <_printf_float+0xb6>
 8001a54:	f109 0901 	add.w	r9, r9, #1
 8001a58:	e7e8      	b.n	8001a2c <_printf_float+0x238>
 8001a5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	dc39      	bgt.n	8001ad4 <_printf_float+0x2e0>
 8001a60:	4a1b      	ldr	r2, [pc, #108]	@ (8001ad0 <_printf_float+0x2dc>)
 8001a62:	2301      	movs	r3, #1
 8001a64:	4631      	mov	r1, r6
 8001a66:	4628      	mov	r0, r5
 8001a68:	47b8      	blx	r7
 8001a6a:	3001      	adds	r0, #1
 8001a6c:	f43f af1d 	beq.w	80018aa <_printf_float+0xb6>
 8001a70:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8001a74:	ea59 0303 	orrs.w	r3, r9, r3
 8001a78:	d102      	bne.n	8001a80 <_printf_float+0x28c>
 8001a7a:	6823      	ldr	r3, [r4, #0]
 8001a7c:	07d9      	lsls	r1, r3, #31
 8001a7e:	d5d7      	bpl.n	8001a30 <_printf_float+0x23c>
 8001a80:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001a84:	4631      	mov	r1, r6
 8001a86:	4628      	mov	r0, r5
 8001a88:	47b8      	blx	r7
 8001a8a:	3001      	adds	r0, #1
 8001a8c:	f43f af0d 	beq.w	80018aa <_printf_float+0xb6>
 8001a90:	f04f 0a00 	mov.w	sl, #0
 8001a94:	f104 0b1a 	add.w	fp, r4, #26
 8001a98:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001a9a:	425b      	negs	r3, r3
 8001a9c:	4553      	cmp	r3, sl
 8001a9e:	dc01      	bgt.n	8001aa4 <_printf_float+0x2b0>
 8001aa0:	464b      	mov	r3, r9
 8001aa2:	e793      	b.n	80019cc <_printf_float+0x1d8>
 8001aa4:	2301      	movs	r3, #1
 8001aa6:	465a      	mov	r2, fp
 8001aa8:	4631      	mov	r1, r6
 8001aaa:	4628      	mov	r0, r5
 8001aac:	47b8      	blx	r7
 8001aae:	3001      	adds	r0, #1
 8001ab0:	f43f aefb 	beq.w	80018aa <_printf_float+0xb6>
 8001ab4:	f10a 0a01 	add.w	sl, sl, #1
 8001ab8:	e7ee      	b.n	8001a98 <_printf_float+0x2a4>
 8001aba:	bf00      	nop
 8001abc:	7fefffff 	.word	0x7fefffff
 8001ac0:	0800411e 	.word	0x0800411e
 8001ac4:	08004122 	.word	0x08004122
 8001ac8:	08004126 	.word	0x08004126
 8001acc:	0800412a 	.word	0x0800412a
 8001ad0:	0800412e 	.word	0x0800412e
 8001ad4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001ad6:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001ada:	4553      	cmp	r3, sl
 8001adc:	bfa8      	it	ge
 8001ade:	4653      	movge	r3, sl
 8001ae0:	2b00      	cmp	r3, #0
 8001ae2:	4699      	mov	r9, r3
 8001ae4:	dc36      	bgt.n	8001b54 <_printf_float+0x360>
 8001ae6:	f04f 0b00 	mov.w	fp, #0
 8001aea:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001aee:	f104 021a 	add.w	r2, r4, #26
 8001af2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8001af4:	9306      	str	r3, [sp, #24]
 8001af6:	eba3 0309 	sub.w	r3, r3, r9
 8001afa:	455b      	cmp	r3, fp
 8001afc:	dc31      	bgt.n	8001b62 <_printf_float+0x36e>
 8001afe:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001b00:	459a      	cmp	sl, r3
 8001b02:	dc3a      	bgt.n	8001b7a <_printf_float+0x386>
 8001b04:	6823      	ldr	r3, [r4, #0]
 8001b06:	07da      	lsls	r2, r3, #31
 8001b08:	d437      	bmi.n	8001b7a <_printf_float+0x386>
 8001b0a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001b0c:	ebaa 0903 	sub.w	r9, sl, r3
 8001b10:	9b06      	ldr	r3, [sp, #24]
 8001b12:	ebaa 0303 	sub.w	r3, sl, r3
 8001b16:	4599      	cmp	r9, r3
 8001b18:	bfa8      	it	ge
 8001b1a:	4699      	movge	r9, r3
 8001b1c:	f1b9 0f00 	cmp.w	r9, #0
 8001b20:	dc33      	bgt.n	8001b8a <_printf_float+0x396>
 8001b22:	f04f 0800 	mov.w	r8, #0
 8001b26:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001b2a:	f104 0b1a 	add.w	fp, r4, #26
 8001b2e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8001b30:	ebaa 0303 	sub.w	r3, sl, r3
 8001b34:	eba3 0309 	sub.w	r3, r3, r9
 8001b38:	4543      	cmp	r3, r8
 8001b3a:	f77f af79 	ble.w	8001a30 <_printf_float+0x23c>
 8001b3e:	2301      	movs	r3, #1
 8001b40:	465a      	mov	r2, fp
 8001b42:	4631      	mov	r1, r6
 8001b44:	4628      	mov	r0, r5
 8001b46:	47b8      	blx	r7
 8001b48:	3001      	adds	r0, #1
 8001b4a:	f43f aeae 	beq.w	80018aa <_printf_float+0xb6>
 8001b4e:	f108 0801 	add.w	r8, r8, #1
 8001b52:	e7ec      	b.n	8001b2e <_printf_float+0x33a>
 8001b54:	4642      	mov	r2, r8
 8001b56:	4631      	mov	r1, r6
 8001b58:	4628      	mov	r0, r5
 8001b5a:	47b8      	blx	r7
 8001b5c:	3001      	adds	r0, #1
 8001b5e:	d1c2      	bne.n	8001ae6 <_printf_float+0x2f2>
 8001b60:	e6a3      	b.n	80018aa <_printf_float+0xb6>
 8001b62:	2301      	movs	r3, #1
 8001b64:	4631      	mov	r1, r6
 8001b66:	4628      	mov	r0, r5
 8001b68:	9206      	str	r2, [sp, #24]
 8001b6a:	47b8      	blx	r7
 8001b6c:	3001      	adds	r0, #1
 8001b6e:	f43f ae9c 	beq.w	80018aa <_printf_float+0xb6>
 8001b72:	9a06      	ldr	r2, [sp, #24]
 8001b74:	f10b 0b01 	add.w	fp, fp, #1
 8001b78:	e7bb      	b.n	8001af2 <_printf_float+0x2fe>
 8001b7a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001b7e:	4631      	mov	r1, r6
 8001b80:	4628      	mov	r0, r5
 8001b82:	47b8      	blx	r7
 8001b84:	3001      	adds	r0, #1
 8001b86:	d1c0      	bne.n	8001b0a <_printf_float+0x316>
 8001b88:	e68f      	b.n	80018aa <_printf_float+0xb6>
 8001b8a:	9a06      	ldr	r2, [sp, #24]
 8001b8c:	464b      	mov	r3, r9
 8001b8e:	4442      	add	r2, r8
 8001b90:	4631      	mov	r1, r6
 8001b92:	4628      	mov	r0, r5
 8001b94:	47b8      	blx	r7
 8001b96:	3001      	adds	r0, #1
 8001b98:	d1c3      	bne.n	8001b22 <_printf_float+0x32e>
 8001b9a:	e686      	b.n	80018aa <_printf_float+0xb6>
 8001b9c:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8001ba0:	f1ba 0f01 	cmp.w	sl, #1
 8001ba4:	dc01      	bgt.n	8001baa <_printf_float+0x3b6>
 8001ba6:	07db      	lsls	r3, r3, #31
 8001ba8:	d536      	bpl.n	8001c18 <_printf_float+0x424>
 8001baa:	2301      	movs	r3, #1
 8001bac:	4642      	mov	r2, r8
 8001bae:	4631      	mov	r1, r6
 8001bb0:	4628      	mov	r0, r5
 8001bb2:	47b8      	blx	r7
 8001bb4:	3001      	adds	r0, #1
 8001bb6:	f43f ae78 	beq.w	80018aa <_printf_float+0xb6>
 8001bba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8001bbe:	4631      	mov	r1, r6
 8001bc0:	4628      	mov	r0, r5
 8001bc2:	47b8      	blx	r7
 8001bc4:	3001      	adds	r0, #1
 8001bc6:	f43f ae70 	beq.w	80018aa <_printf_float+0xb6>
 8001bca:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8001bce:	2200      	movs	r2, #0
 8001bd0:	2300      	movs	r3, #0
 8001bd2:	f10a 3aff 	add.w	sl, sl, #4294967295
 8001bd6:	f7fe ff7f 	bl	8000ad8 <__aeabi_dcmpeq>
 8001bda:	b9c0      	cbnz	r0, 8001c0e <_printf_float+0x41a>
 8001bdc:	4653      	mov	r3, sl
 8001bde:	f108 0201 	add.w	r2, r8, #1
 8001be2:	4631      	mov	r1, r6
 8001be4:	4628      	mov	r0, r5
 8001be6:	47b8      	blx	r7
 8001be8:	3001      	adds	r0, #1
 8001bea:	d10c      	bne.n	8001c06 <_printf_float+0x412>
 8001bec:	e65d      	b.n	80018aa <_printf_float+0xb6>
 8001bee:	2301      	movs	r3, #1
 8001bf0:	465a      	mov	r2, fp
 8001bf2:	4631      	mov	r1, r6
 8001bf4:	4628      	mov	r0, r5
 8001bf6:	47b8      	blx	r7
 8001bf8:	3001      	adds	r0, #1
 8001bfa:	f43f ae56 	beq.w	80018aa <_printf_float+0xb6>
 8001bfe:	f108 0801 	add.w	r8, r8, #1
 8001c02:	45d0      	cmp	r8, sl
 8001c04:	dbf3      	blt.n	8001bee <_printf_float+0x3fa>
 8001c06:	464b      	mov	r3, r9
 8001c08:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8001c0c:	e6df      	b.n	80019ce <_printf_float+0x1da>
 8001c0e:	f04f 0800 	mov.w	r8, #0
 8001c12:	f104 0b1a 	add.w	fp, r4, #26
 8001c16:	e7f4      	b.n	8001c02 <_printf_float+0x40e>
 8001c18:	2301      	movs	r3, #1
 8001c1a:	4642      	mov	r2, r8
 8001c1c:	e7e1      	b.n	8001be2 <_printf_float+0x3ee>
 8001c1e:	2301      	movs	r3, #1
 8001c20:	464a      	mov	r2, r9
 8001c22:	4631      	mov	r1, r6
 8001c24:	4628      	mov	r0, r5
 8001c26:	47b8      	blx	r7
 8001c28:	3001      	adds	r0, #1
 8001c2a:	f43f ae3e 	beq.w	80018aa <_printf_float+0xb6>
 8001c2e:	f108 0801 	add.w	r8, r8, #1
 8001c32:	68e3      	ldr	r3, [r4, #12]
 8001c34:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8001c36:	1a5b      	subs	r3, r3, r1
 8001c38:	4543      	cmp	r3, r8
 8001c3a:	dcf0      	bgt.n	8001c1e <_printf_float+0x42a>
 8001c3c:	e6fc      	b.n	8001a38 <_printf_float+0x244>
 8001c3e:	f04f 0800 	mov.w	r8, #0
 8001c42:	f104 0919 	add.w	r9, r4, #25
 8001c46:	e7f4      	b.n	8001c32 <_printf_float+0x43e>

08001c48 <_printf_common>:
 8001c48:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001c4c:	4616      	mov	r6, r2
 8001c4e:	4698      	mov	r8, r3
 8001c50:	688a      	ldr	r2, [r1, #8]
 8001c52:	690b      	ldr	r3, [r1, #16]
 8001c54:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001c58:	4293      	cmp	r3, r2
 8001c5a:	bfb8      	it	lt
 8001c5c:	4613      	movlt	r3, r2
 8001c5e:	6033      	str	r3, [r6, #0]
 8001c60:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001c64:	4607      	mov	r7, r0
 8001c66:	460c      	mov	r4, r1
 8001c68:	b10a      	cbz	r2, 8001c6e <_printf_common+0x26>
 8001c6a:	3301      	adds	r3, #1
 8001c6c:	6033      	str	r3, [r6, #0]
 8001c6e:	6823      	ldr	r3, [r4, #0]
 8001c70:	0699      	lsls	r1, r3, #26
 8001c72:	bf42      	ittt	mi
 8001c74:	6833      	ldrmi	r3, [r6, #0]
 8001c76:	3302      	addmi	r3, #2
 8001c78:	6033      	strmi	r3, [r6, #0]
 8001c7a:	6825      	ldr	r5, [r4, #0]
 8001c7c:	f015 0506 	ands.w	r5, r5, #6
 8001c80:	d106      	bne.n	8001c90 <_printf_common+0x48>
 8001c82:	f104 0a19 	add.w	sl, r4, #25
 8001c86:	68e3      	ldr	r3, [r4, #12]
 8001c88:	6832      	ldr	r2, [r6, #0]
 8001c8a:	1a9b      	subs	r3, r3, r2
 8001c8c:	42ab      	cmp	r3, r5
 8001c8e:	dc26      	bgt.n	8001cde <_printf_common+0x96>
 8001c90:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001c94:	6822      	ldr	r2, [r4, #0]
 8001c96:	3b00      	subs	r3, #0
 8001c98:	bf18      	it	ne
 8001c9a:	2301      	movne	r3, #1
 8001c9c:	0692      	lsls	r2, r2, #26
 8001c9e:	d42b      	bmi.n	8001cf8 <_printf_common+0xb0>
 8001ca0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001ca4:	4641      	mov	r1, r8
 8001ca6:	4638      	mov	r0, r7
 8001ca8:	47c8      	blx	r9
 8001caa:	3001      	adds	r0, #1
 8001cac:	d01e      	beq.n	8001cec <_printf_common+0xa4>
 8001cae:	6823      	ldr	r3, [r4, #0]
 8001cb0:	6922      	ldr	r2, [r4, #16]
 8001cb2:	f003 0306 	and.w	r3, r3, #6
 8001cb6:	2b04      	cmp	r3, #4
 8001cb8:	bf02      	ittt	eq
 8001cba:	68e5      	ldreq	r5, [r4, #12]
 8001cbc:	6833      	ldreq	r3, [r6, #0]
 8001cbe:	1aed      	subeq	r5, r5, r3
 8001cc0:	68a3      	ldr	r3, [r4, #8]
 8001cc2:	bf0c      	ite	eq
 8001cc4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001cc8:	2500      	movne	r5, #0
 8001cca:	4293      	cmp	r3, r2
 8001ccc:	bfc4      	itt	gt
 8001cce:	1a9b      	subgt	r3, r3, r2
 8001cd0:	18ed      	addgt	r5, r5, r3
 8001cd2:	2600      	movs	r6, #0
 8001cd4:	341a      	adds	r4, #26
 8001cd6:	42b5      	cmp	r5, r6
 8001cd8:	d11a      	bne.n	8001d10 <_printf_common+0xc8>
 8001cda:	2000      	movs	r0, #0
 8001cdc:	e008      	b.n	8001cf0 <_printf_common+0xa8>
 8001cde:	2301      	movs	r3, #1
 8001ce0:	4652      	mov	r2, sl
 8001ce2:	4641      	mov	r1, r8
 8001ce4:	4638      	mov	r0, r7
 8001ce6:	47c8      	blx	r9
 8001ce8:	3001      	adds	r0, #1
 8001cea:	d103      	bne.n	8001cf4 <_printf_common+0xac>
 8001cec:	f04f 30ff 	mov.w	r0, #4294967295
 8001cf0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001cf4:	3501      	adds	r5, #1
 8001cf6:	e7c6      	b.n	8001c86 <_printf_common+0x3e>
 8001cf8:	18e1      	adds	r1, r4, r3
 8001cfa:	1c5a      	adds	r2, r3, #1
 8001cfc:	2030      	movs	r0, #48	@ 0x30
 8001cfe:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001d02:	4422      	add	r2, r4
 8001d04:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001d08:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8001d0c:	3302      	adds	r3, #2
 8001d0e:	e7c7      	b.n	8001ca0 <_printf_common+0x58>
 8001d10:	2301      	movs	r3, #1
 8001d12:	4622      	mov	r2, r4
 8001d14:	4641      	mov	r1, r8
 8001d16:	4638      	mov	r0, r7
 8001d18:	47c8      	blx	r9
 8001d1a:	3001      	adds	r0, #1
 8001d1c:	d0e6      	beq.n	8001cec <_printf_common+0xa4>
 8001d1e:	3601      	adds	r6, #1
 8001d20:	e7d9      	b.n	8001cd6 <_printf_common+0x8e>
	...

08001d24 <_printf_i>:
 8001d24:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001d28:	7e0f      	ldrb	r7, [r1, #24]
 8001d2a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001d2c:	2f78      	cmp	r7, #120	@ 0x78
 8001d2e:	4691      	mov	r9, r2
 8001d30:	4680      	mov	r8, r0
 8001d32:	460c      	mov	r4, r1
 8001d34:	469a      	mov	sl, r3
 8001d36:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8001d3a:	d807      	bhi.n	8001d4c <_printf_i+0x28>
 8001d3c:	2f62      	cmp	r7, #98	@ 0x62
 8001d3e:	d80a      	bhi.n	8001d56 <_printf_i+0x32>
 8001d40:	2f00      	cmp	r7, #0
 8001d42:	f000 80d2 	beq.w	8001eea <_printf_i+0x1c6>
 8001d46:	2f58      	cmp	r7, #88	@ 0x58
 8001d48:	f000 80b9 	beq.w	8001ebe <_printf_i+0x19a>
 8001d4c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001d50:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001d54:	e03a      	b.n	8001dcc <_printf_i+0xa8>
 8001d56:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8001d5a:	2b15      	cmp	r3, #21
 8001d5c:	d8f6      	bhi.n	8001d4c <_printf_i+0x28>
 8001d5e:	a101      	add	r1, pc, #4	@ (adr r1, 8001d64 <_printf_i+0x40>)
 8001d60:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001d64:	08001dbd 	.word	0x08001dbd
 8001d68:	08001dd1 	.word	0x08001dd1
 8001d6c:	08001d4d 	.word	0x08001d4d
 8001d70:	08001d4d 	.word	0x08001d4d
 8001d74:	08001d4d 	.word	0x08001d4d
 8001d78:	08001d4d 	.word	0x08001d4d
 8001d7c:	08001dd1 	.word	0x08001dd1
 8001d80:	08001d4d 	.word	0x08001d4d
 8001d84:	08001d4d 	.word	0x08001d4d
 8001d88:	08001d4d 	.word	0x08001d4d
 8001d8c:	08001d4d 	.word	0x08001d4d
 8001d90:	08001ed1 	.word	0x08001ed1
 8001d94:	08001dfb 	.word	0x08001dfb
 8001d98:	08001e8b 	.word	0x08001e8b
 8001d9c:	08001d4d 	.word	0x08001d4d
 8001da0:	08001d4d 	.word	0x08001d4d
 8001da4:	08001ef3 	.word	0x08001ef3
 8001da8:	08001d4d 	.word	0x08001d4d
 8001dac:	08001dfb 	.word	0x08001dfb
 8001db0:	08001d4d 	.word	0x08001d4d
 8001db4:	08001d4d 	.word	0x08001d4d
 8001db8:	08001e93 	.word	0x08001e93
 8001dbc:	6833      	ldr	r3, [r6, #0]
 8001dbe:	1d1a      	adds	r2, r3, #4
 8001dc0:	681b      	ldr	r3, [r3, #0]
 8001dc2:	6032      	str	r2, [r6, #0]
 8001dc4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001dc8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8001dcc:	2301      	movs	r3, #1
 8001dce:	e09d      	b.n	8001f0c <_printf_i+0x1e8>
 8001dd0:	6833      	ldr	r3, [r6, #0]
 8001dd2:	6820      	ldr	r0, [r4, #0]
 8001dd4:	1d19      	adds	r1, r3, #4
 8001dd6:	6031      	str	r1, [r6, #0]
 8001dd8:	0606      	lsls	r6, r0, #24
 8001dda:	d501      	bpl.n	8001de0 <_printf_i+0xbc>
 8001ddc:	681d      	ldr	r5, [r3, #0]
 8001dde:	e003      	b.n	8001de8 <_printf_i+0xc4>
 8001de0:	0645      	lsls	r5, r0, #25
 8001de2:	d5fb      	bpl.n	8001ddc <_printf_i+0xb8>
 8001de4:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001de8:	2d00      	cmp	r5, #0
 8001dea:	da03      	bge.n	8001df4 <_printf_i+0xd0>
 8001dec:	232d      	movs	r3, #45	@ 0x2d
 8001dee:	426d      	negs	r5, r5
 8001df0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001df4:	4859      	ldr	r0, [pc, #356]	@ (8001f5c <_printf_i+0x238>)
 8001df6:	230a      	movs	r3, #10
 8001df8:	e011      	b.n	8001e1e <_printf_i+0xfa>
 8001dfa:	6821      	ldr	r1, [r4, #0]
 8001dfc:	6833      	ldr	r3, [r6, #0]
 8001dfe:	0608      	lsls	r0, r1, #24
 8001e00:	f853 5b04 	ldr.w	r5, [r3], #4
 8001e04:	d402      	bmi.n	8001e0c <_printf_i+0xe8>
 8001e06:	0649      	lsls	r1, r1, #25
 8001e08:	bf48      	it	mi
 8001e0a:	b2ad      	uxthmi	r5, r5
 8001e0c:	2f6f      	cmp	r7, #111	@ 0x6f
 8001e0e:	4853      	ldr	r0, [pc, #332]	@ (8001f5c <_printf_i+0x238>)
 8001e10:	6033      	str	r3, [r6, #0]
 8001e12:	bf14      	ite	ne
 8001e14:	230a      	movne	r3, #10
 8001e16:	2308      	moveq	r3, #8
 8001e18:	2100      	movs	r1, #0
 8001e1a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001e1e:	6866      	ldr	r6, [r4, #4]
 8001e20:	60a6      	str	r6, [r4, #8]
 8001e22:	2e00      	cmp	r6, #0
 8001e24:	bfa2      	ittt	ge
 8001e26:	6821      	ldrge	r1, [r4, #0]
 8001e28:	f021 0104 	bicge.w	r1, r1, #4
 8001e2c:	6021      	strge	r1, [r4, #0]
 8001e2e:	b90d      	cbnz	r5, 8001e34 <_printf_i+0x110>
 8001e30:	2e00      	cmp	r6, #0
 8001e32:	d04b      	beq.n	8001ecc <_printf_i+0x1a8>
 8001e34:	4616      	mov	r6, r2
 8001e36:	fbb5 f1f3 	udiv	r1, r5, r3
 8001e3a:	fb03 5711 	mls	r7, r3, r1, r5
 8001e3e:	5dc7      	ldrb	r7, [r0, r7]
 8001e40:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001e44:	462f      	mov	r7, r5
 8001e46:	42bb      	cmp	r3, r7
 8001e48:	460d      	mov	r5, r1
 8001e4a:	d9f4      	bls.n	8001e36 <_printf_i+0x112>
 8001e4c:	2b08      	cmp	r3, #8
 8001e4e:	d10b      	bne.n	8001e68 <_printf_i+0x144>
 8001e50:	6823      	ldr	r3, [r4, #0]
 8001e52:	07df      	lsls	r7, r3, #31
 8001e54:	d508      	bpl.n	8001e68 <_printf_i+0x144>
 8001e56:	6923      	ldr	r3, [r4, #16]
 8001e58:	6861      	ldr	r1, [r4, #4]
 8001e5a:	4299      	cmp	r1, r3
 8001e5c:	bfde      	ittt	le
 8001e5e:	2330      	movle	r3, #48	@ 0x30
 8001e60:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001e64:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001e68:	1b92      	subs	r2, r2, r6
 8001e6a:	6122      	str	r2, [r4, #16]
 8001e6c:	f8cd a000 	str.w	sl, [sp]
 8001e70:	464b      	mov	r3, r9
 8001e72:	aa03      	add	r2, sp, #12
 8001e74:	4621      	mov	r1, r4
 8001e76:	4640      	mov	r0, r8
 8001e78:	f7ff fee6 	bl	8001c48 <_printf_common>
 8001e7c:	3001      	adds	r0, #1
 8001e7e:	d14a      	bne.n	8001f16 <_printf_i+0x1f2>
 8001e80:	f04f 30ff 	mov.w	r0, #4294967295
 8001e84:	b004      	add	sp, #16
 8001e86:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001e8a:	6823      	ldr	r3, [r4, #0]
 8001e8c:	f043 0320 	orr.w	r3, r3, #32
 8001e90:	6023      	str	r3, [r4, #0]
 8001e92:	4833      	ldr	r0, [pc, #204]	@ (8001f60 <_printf_i+0x23c>)
 8001e94:	2778      	movs	r7, #120	@ 0x78
 8001e96:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8001e9a:	6823      	ldr	r3, [r4, #0]
 8001e9c:	6831      	ldr	r1, [r6, #0]
 8001e9e:	061f      	lsls	r7, r3, #24
 8001ea0:	f851 5b04 	ldr.w	r5, [r1], #4
 8001ea4:	d402      	bmi.n	8001eac <_printf_i+0x188>
 8001ea6:	065f      	lsls	r7, r3, #25
 8001ea8:	bf48      	it	mi
 8001eaa:	b2ad      	uxthmi	r5, r5
 8001eac:	6031      	str	r1, [r6, #0]
 8001eae:	07d9      	lsls	r1, r3, #31
 8001eb0:	bf44      	itt	mi
 8001eb2:	f043 0320 	orrmi.w	r3, r3, #32
 8001eb6:	6023      	strmi	r3, [r4, #0]
 8001eb8:	b11d      	cbz	r5, 8001ec2 <_printf_i+0x19e>
 8001eba:	2310      	movs	r3, #16
 8001ebc:	e7ac      	b.n	8001e18 <_printf_i+0xf4>
 8001ebe:	4827      	ldr	r0, [pc, #156]	@ (8001f5c <_printf_i+0x238>)
 8001ec0:	e7e9      	b.n	8001e96 <_printf_i+0x172>
 8001ec2:	6823      	ldr	r3, [r4, #0]
 8001ec4:	f023 0320 	bic.w	r3, r3, #32
 8001ec8:	6023      	str	r3, [r4, #0]
 8001eca:	e7f6      	b.n	8001eba <_printf_i+0x196>
 8001ecc:	4616      	mov	r6, r2
 8001ece:	e7bd      	b.n	8001e4c <_printf_i+0x128>
 8001ed0:	6833      	ldr	r3, [r6, #0]
 8001ed2:	6825      	ldr	r5, [r4, #0]
 8001ed4:	6961      	ldr	r1, [r4, #20]
 8001ed6:	1d18      	adds	r0, r3, #4
 8001ed8:	6030      	str	r0, [r6, #0]
 8001eda:	062e      	lsls	r6, r5, #24
 8001edc:	681b      	ldr	r3, [r3, #0]
 8001ede:	d501      	bpl.n	8001ee4 <_printf_i+0x1c0>
 8001ee0:	6019      	str	r1, [r3, #0]
 8001ee2:	e002      	b.n	8001eea <_printf_i+0x1c6>
 8001ee4:	0668      	lsls	r0, r5, #25
 8001ee6:	d5fb      	bpl.n	8001ee0 <_printf_i+0x1bc>
 8001ee8:	8019      	strh	r1, [r3, #0]
 8001eea:	2300      	movs	r3, #0
 8001eec:	6123      	str	r3, [r4, #16]
 8001eee:	4616      	mov	r6, r2
 8001ef0:	e7bc      	b.n	8001e6c <_printf_i+0x148>
 8001ef2:	6833      	ldr	r3, [r6, #0]
 8001ef4:	1d1a      	adds	r2, r3, #4
 8001ef6:	6032      	str	r2, [r6, #0]
 8001ef8:	681e      	ldr	r6, [r3, #0]
 8001efa:	6862      	ldr	r2, [r4, #4]
 8001efc:	2100      	movs	r1, #0
 8001efe:	4630      	mov	r0, r6
 8001f00:	f7fe f96e 	bl	80001e0 <memchr>
 8001f04:	b108      	cbz	r0, 8001f0a <_printf_i+0x1e6>
 8001f06:	1b80      	subs	r0, r0, r6
 8001f08:	6060      	str	r0, [r4, #4]
 8001f0a:	6863      	ldr	r3, [r4, #4]
 8001f0c:	6123      	str	r3, [r4, #16]
 8001f0e:	2300      	movs	r3, #0
 8001f10:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001f14:	e7aa      	b.n	8001e6c <_printf_i+0x148>
 8001f16:	6923      	ldr	r3, [r4, #16]
 8001f18:	4632      	mov	r2, r6
 8001f1a:	4649      	mov	r1, r9
 8001f1c:	4640      	mov	r0, r8
 8001f1e:	47d0      	blx	sl
 8001f20:	3001      	adds	r0, #1
 8001f22:	d0ad      	beq.n	8001e80 <_printf_i+0x15c>
 8001f24:	6823      	ldr	r3, [r4, #0]
 8001f26:	079b      	lsls	r3, r3, #30
 8001f28:	d413      	bmi.n	8001f52 <_printf_i+0x22e>
 8001f2a:	68e0      	ldr	r0, [r4, #12]
 8001f2c:	9b03      	ldr	r3, [sp, #12]
 8001f2e:	4298      	cmp	r0, r3
 8001f30:	bfb8      	it	lt
 8001f32:	4618      	movlt	r0, r3
 8001f34:	e7a6      	b.n	8001e84 <_printf_i+0x160>
 8001f36:	2301      	movs	r3, #1
 8001f38:	4632      	mov	r2, r6
 8001f3a:	4649      	mov	r1, r9
 8001f3c:	4640      	mov	r0, r8
 8001f3e:	47d0      	blx	sl
 8001f40:	3001      	adds	r0, #1
 8001f42:	d09d      	beq.n	8001e80 <_printf_i+0x15c>
 8001f44:	3501      	adds	r5, #1
 8001f46:	68e3      	ldr	r3, [r4, #12]
 8001f48:	9903      	ldr	r1, [sp, #12]
 8001f4a:	1a5b      	subs	r3, r3, r1
 8001f4c:	42ab      	cmp	r3, r5
 8001f4e:	dcf2      	bgt.n	8001f36 <_printf_i+0x212>
 8001f50:	e7eb      	b.n	8001f2a <_printf_i+0x206>
 8001f52:	2500      	movs	r5, #0
 8001f54:	f104 0619 	add.w	r6, r4, #25
 8001f58:	e7f5      	b.n	8001f46 <_printf_i+0x222>
 8001f5a:	bf00      	nop
 8001f5c:	08004130 	.word	0x08004130
 8001f60:	08004141 	.word	0x08004141

08001f64 <std>:
 8001f64:	2300      	movs	r3, #0
 8001f66:	b510      	push	{r4, lr}
 8001f68:	4604      	mov	r4, r0
 8001f6a:	e9c0 3300 	strd	r3, r3, [r0]
 8001f6e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001f72:	6083      	str	r3, [r0, #8]
 8001f74:	8181      	strh	r1, [r0, #12]
 8001f76:	6643      	str	r3, [r0, #100]	@ 0x64
 8001f78:	81c2      	strh	r2, [r0, #14]
 8001f7a:	6183      	str	r3, [r0, #24]
 8001f7c:	4619      	mov	r1, r3
 8001f7e:	2208      	movs	r2, #8
 8001f80:	305c      	adds	r0, #92	@ 0x5c
 8001f82:	f000 f9f9 	bl	8002378 <memset>
 8001f86:	4b0d      	ldr	r3, [pc, #52]	@ (8001fbc <std+0x58>)
 8001f88:	6263      	str	r3, [r4, #36]	@ 0x24
 8001f8a:	4b0d      	ldr	r3, [pc, #52]	@ (8001fc0 <std+0x5c>)
 8001f8c:	62a3      	str	r3, [r4, #40]	@ 0x28
 8001f8e:	4b0d      	ldr	r3, [pc, #52]	@ (8001fc4 <std+0x60>)
 8001f90:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8001f92:	4b0d      	ldr	r3, [pc, #52]	@ (8001fc8 <std+0x64>)
 8001f94:	6323      	str	r3, [r4, #48]	@ 0x30
 8001f96:	4b0d      	ldr	r3, [pc, #52]	@ (8001fcc <std+0x68>)
 8001f98:	6224      	str	r4, [r4, #32]
 8001f9a:	429c      	cmp	r4, r3
 8001f9c:	d006      	beq.n	8001fac <std+0x48>
 8001f9e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8001fa2:	4294      	cmp	r4, r2
 8001fa4:	d002      	beq.n	8001fac <std+0x48>
 8001fa6:	33d0      	adds	r3, #208	@ 0xd0
 8001fa8:	429c      	cmp	r4, r3
 8001faa:	d105      	bne.n	8001fb8 <std+0x54>
 8001fac:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8001fb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001fb4:	f000 ba5c 	b.w	8002470 <__retarget_lock_init_recursive>
 8001fb8:	bd10      	pop	{r4, pc}
 8001fba:	bf00      	nop
 8001fbc:	080021c9 	.word	0x080021c9
 8001fc0:	080021eb 	.word	0x080021eb
 8001fc4:	08002223 	.word	0x08002223
 8001fc8:	08002247 	.word	0x08002247
 8001fcc:	200001e8 	.word	0x200001e8

08001fd0 <stdio_exit_handler>:
 8001fd0:	4a02      	ldr	r2, [pc, #8]	@ (8001fdc <stdio_exit_handler+0xc>)
 8001fd2:	4903      	ldr	r1, [pc, #12]	@ (8001fe0 <stdio_exit_handler+0x10>)
 8001fd4:	4803      	ldr	r0, [pc, #12]	@ (8001fe4 <stdio_exit_handler+0x14>)
 8001fd6:	f000 b869 	b.w	80020ac <_fwalk_sglue>
 8001fda:	bf00      	nop
 8001fdc:	20000000 	.word	0x20000000
 8001fe0:	08003da1 	.word	0x08003da1
 8001fe4:	20000010 	.word	0x20000010

08001fe8 <cleanup_stdio>:
 8001fe8:	6841      	ldr	r1, [r0, #4]
 8001fea:	4b0c      	ldr	r3, [pc, #48]	@ (800201c <cleanup_stdio+0x34>)
 8001fec:	4299      	cmp	r1, r3
 8001fee:	b510      	push	{r4, lr}
 8001ff0:	4604      	mov	r4, r0
 8001ff2:	d001      	beq.n	8001ff8 <cleanup_stdio+0x10>
 8001ff4:	f001 fed4 	bl	8003da0 <_fflush_r>
 8001ff8:	68a1      	ldr	r1, [r4, #8]
 8001ffa:	4b09      	ldr	r3, [pc, #36]	@ (8002020 <cleanup_stdio+0x38>)
 8001ffc:	4299      	cmp	r1, r3
 8001ffe:	d002      	beq.n	8002006 <cleanup_stdio+0x1e>
 8002000:	4620      	mov	r0, r4
 8002002:	f001 fecd 	bl	8003da0 <_fflush_r>
 8002006:	68e1      	ldr	r1, [r4, #12]
 8002008:	4b06      	ldr	r3, [pc, #24]	@ (8002024 <cleanup_stdio+0x3c>)
 800200a:	4299      	cmp	r1, r3
 800200c:	d004      	beq.n	8002018 <cleanup_stdio+0x30>
 800200e:	4620      	mov	r0, r4
 8002010:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002014:	f001 bec4 	b.w	8003da0 <_fflush_r>
 8002018:	bd10      	pop	{r4, pc}
 800201a:	bf00      	nop
 800201c:	200001e8 	.word	0x200001e8
 8002020:	20000250 	.word	0x20000250
 8002024:	200002b8 	.word	0x200002b8

08002028 <global_stdio_init.part.0>:
 8002028:	b510      	push	{r4, lr}
 800202a:	4b0b      	ldr	r3, [pc, #44]	@ (8002058 <global_stdio_init.part.0+0x30>)
 800202c:	4c0b      	ldr	r4, [pc, #44]	@ (800205c <global_stdio_init.part.0+0x34>)
 800202e:	4a0c      	ldr	r2, [pc, #48]	@ (8002060 <global_stdio_init.part.0+0x38>)
 8002030:	601a      	str	r2, [r3, #0]
 8002032:	4620      	mov	r0, r4
 8002034:	2200      	movs	r2, #0
 8002036:	2104      	movs	r1, #4
 8002038:	f7ff ff94 	bl	8001f64 <std>
 800203c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8002040:	2201      	movs	r2, #1
 8002042:	2109      	movs	r1, #9
 8002044:	f7ff ff8e 	bl	8001f64 <std>
 8002048:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800204c:	2202      	movs	r2, #2
 800204e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002052:	2112      	movs	r1, #18
 8002054:	f7ff bf86 	b.w	8001f64 <std>
 8002058:	20000320 	.word	0x20000320
 800205c:	200001e8 	.word	0x200001e8
 8002060:	08001fd1 	.word	0x08001fd1

08002064 <__sfp_lock_acquire>:
 8002064:	4801      	ldr	r0, [pc, #4]	@ (800206c <__sfp_lock_acquire+0x8>)
 8002066:	f000 ba04 	b.w	8002472 <__retarget_lock_acquire_recursive>
 800206a:	bf00      	nop
 800206c:	20000329 	.word	0x20000329

08002070 <__sfp_lock_release>:
 8002070:	4801      	ldr	r0, [pc, #4]	@ (8002078 <__sfp_lock_release+0x8>)
 8002072:	f000 b9ff 	b.w	8002474 <__retarget_lock_release_recursive>
 8002076:	bf00      	nop
 8002078:	20000329 	.word	0x20000329

0800207c <__sinit>:
 800207c:	b510      	push	{r4, lr}
 800207e:	4604      	mov	r4, r0
 8002080:	f7ff fff0 	bl	8002064 <__sfp_lock_acquire>
 8002084:	6a23      	ldr	r3, [r4, #32]
 8002086:	b11b      	cbz	r3, 8002090 <__sinit+0x14>
 8002088:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800208c:	f7ff bff0 	b.w	8002070 <__sfp_lock_release>
 8002090:	4b04      	ldr	r3, [pc, #16]	@ (80020a4 <__sinit+0x28>)
 8002092:	6223      	str	r3, [r4, #32]
 8002094:	4b04      	ldr	r3, [pc, #16]	@ (80020a8 <__sinit+0x2c>)
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	2b00      	cmp	r3, #0
 800209a:	d1f5      	bne.n	8002088 <__sinit+0xc>
 800209c:	f7ff ffc4 	bl	8002028 <global_stdio_init.part.0>
 80020a0:	e7f2      	b.n	8002088 <__sinit+0xc>
 80020a2:	bf00      	nop
 80020a4:	08001fe9 	.word	0x08001fe9
 80020a8:	20000320 	.word	0x20000320

080020ac <_fwalk_sglue>:
 80020ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80020b0:	4607      	mov	r7, r0
 80020b2:	4688      	mov	r8, r1
 80020b4:	4614      	mov	r4, r2
 80020b6:	2600      	movs	r6, #0
 80020b8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80020bc:	f1b9 0901 	subs.w	r9, r9, #1
 80020c0:	d505      	bpl.n	80020ce <_fwalk_sglue+0x22>
 80020c2:	6824      	ldr	r4, [r4, #0]
 80020c4:	2c00      	cmp	r4, #0
 80020c6:	d1f7      	bne.n	80020b8 <_fwalk_sglue+0xc>
 80020c8:	4630      	mov	r0, r6
 80020ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80020ce:	89ab      	ldrh	r3, [r5, #12]
 80020d0:	2b01      	cmp	r3, #1
 80020d2:	d907      	bls.n	80020e4 <_fwalk_sglue+0x38>
 80020d4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80020d8:	3301      	adds	r3, #1
 80020da:	d003      	beq.n	80020e4 <_fwalk_sglue+0x38>
 80020dc:	4629      	mov	r1, r5
 80020de:	4638      	mov	r0, r7
 80020e0:	47c0      	blx	r8
 80020e2:	4306      	orrs	r6, r0
 80020e4:	3568      	adds	r5, #104	@ 0x68
 80020e6:	e7e9      	b.n	80020bc <_fwalk_sglue+0x10>

080020e8 <iprintf>:
 80020e8:	b40f      	push	{r0, r1, r2, r3}
 80020ea:	b507      	push	{r0, r1, r2, lr}
 80020ec:	4906      	ldr	r1, [pc, #24]	@ (8002108 <iprintf+0x20>)
 80020ee:	ab04      	add	r3, sp, #16
 80020f0:	6808      	ldr	r0, [r1, #0]
 80020f2:	f853 2b04 	ldr.w	r2, [r3], #4
 80020f6:	6881      	ldr	r1, [r0, #8]
 80020f8:	9301      	str	r3, [sp, #4]
 80020fa:	f001 fcb5 	bl	8003a68 <_vfiprintf_r>
 80020fe:	b003      	add	sp, #12
 8002100:	f85d eb04 	ldr.w	lr, [sp], #4
 8002104:	b004      	add	sp, #16
 8002106:	4770      	bx	lr
 8002108:	2000000c 	.word	0x2000000c

0800210c <_puts_r>:
 800210c:	6a03      	ldr	r3, [r0, #32]
 800210e:	b570      	push	{r4, r5, r6, lr}
 8002110:	6884      	ldr	r4, [r0, #8]
 8002112:	4605      	mov	r5, r0
 8002114:	460e      	mov	r6, r1
 8002116:	b90b      	cbnz	r3, 800211c <_puts_r+0x10>
 8002118:	f7ff ffb0 	bl	800207c <__sinit>
 800211c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800211e:	07db      	lsls	r3, r3, #31
 8002120:	d405      	bmi.n	800212e <_puts_r+0x22>
 8002122:	89a3      	ldrh	r3, [r4, #12]
 8002124:	0598      	lsls	r0, r3, #22
 8002126:	d402      	bmi.n	800212e <_puts_r+0x22>
 8002128:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800212a:	f000 f9a2 	bl	8002472 <__retarget_lock_acquire_recursive>
 800212e:	89a3      	ldrh	r3, [r4, #12]
 8002130:	0719      	lsls	r1, r3, #28
 8002132:	d502      	bpl.n	800213a <_puts_r+0x2e>
 8002134:	6923      	ldr	r3, [r4, #16]
 8002136:	2b00      	cmp	r3, #0
 8002138:	d135      	bne.n	80021a6 <_puts_r+0x9a>
 800213a:	4621      	mov	r1, r4
 800213c:	4628      	mov	r0, r5
 800213e:	f000 f8c5 	bl	80022cc <__swsetup_r>
 8002142:	b380      	cbz	r0, 80021a6 <_puts_r+0x9a>
 8002144:	f04f 35ff 	mov.w	r5, #4294967295
 8002148:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800214a:	07da      	lsls	r2, r3, #31
 800214c:	d405      	bmi.n	800215a <_puts_r+0x4e>
 800214e:	89a3      	ldrh	r3, [r4, #12]
 8002150:	059b      	lsls	r3, r3, #22
 8002152:	d402      	bmi.n	800215a <_puts_r+0x4e>
 8002154:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8002156:	f000 f98d 	bl	8002474 <__retarget_lock_release_recursive>
 800215a:	4628      	mov	r0, r5
 800215c:	bd70      	pop	{r4, r5, r6, pc}
 800215e:	2b00      	cmp	r3, #0
 8002160:	da04      	bge.n	800216c <_puts_r+0x60>
 8002162:	69a2      	ldr	r2, [r4, #24]
 8002164:	429a      	cmp	r2, r3
 8002166:	dc17      	bgt.n	8002198 <_puts_r+0x8c>
 8002168:	290a      	cmp	r1, #10
 800216a:	d015      	beq.n	8002198 <_puts_r+0x8c>
 800216c:	6823      	ldr	r3, [r4, #0]
 800216e:	1c5a      	adds	r2, r3, #1
 8002170:	6022      	str	r2, [r4, #0]
 8002172:	7019      	strb	r1, [r3, #0]
 8002174:	68a3      	ldr	r3, [r4, #8]
 8002176:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800217a:	3b01      	subs	r3, #1
 800217c:	60a3      	str	r3, [r4, #8]
 800217e:	2900      	cmp	r1, #0
 8002180:	d1ed      	bne.n	800215e <_puts_r+0x52>
 8002182:	2b00      	cmp	r3, #0
 8002184:	da11      	bge.n	80021aa <_puts_r+0x9e>
 8002186:	4622      	mov	r2, r4
 8002188:	210a      	movs	r1, #10
 800218a:	4628      	mov	r0, r5
 800218c:	f000 f85f 	bl	800224e <__swbuf_r>
 8002190:	3001      	adds	r0, #1
 8002192:	d0d7      	beq.n	8002144 <_puts_r+0x38>
 8002194:	250a      	movs	r5, #10
 8002196:	e7d7      	b.n	8002148 <_puts_r+0x3c>
 8002198:	4622      	mov	r2, r4
 800219a:	4628      	mov	r0, r5
 800219c:	f000 f857 	bl	800224e <__swbuf_r>
 80021a0:	3001      	adds	r0, #1
 80021a2:	d1e7      	bne.n	8002174 <_puts_r+0x68>
 80021a4:	e7ce      	b.n	8002144 <_puts_r+0x38>
 80021a6:	3e01      	subs	r6, #1
 80021a8:	e7e4      	b.n	8002174 <_puts_r+0x68>
 80021aa:	6823      	ldr	r3, [r4, #0]
 80021ac:	1c5a      	adds	r2, r3, #1
 80021ae:	6022      	str	r2, [r4, #0]
 80021b0:	220a      	movs	r2, #10
 80021b2:	701a      	strb	r2, [r3, #0]
 80021b4:	e7ee      	b.n	8002194 <_puts_r+0x88>
	...

080021b8 <puts>:
 80021b8:	4b02      	ldr	r3, [pc, #8]	@ (80021c4 <puts+0xc>)
 80021ba:	4601      	mov	r1, r0
 80021bc:	6818      	ldr	r0, [r3, #0]
 80021be:	f7ff bfa5 	b.w	800210c <_puts_r>
 80021c2:	bf00      	nop
 80021c4:	2000000c 	.word	0x2000000c

080021c8 <__sread>:
 80021c8:	b510      	push	{r4, lr}
 80021ca:	460c      	mov	r4, r1
 80021cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80021d0:	f000 f900 	bl	80023d4 <_read_r>
 80021d4:	2800      	cmp	r0, #0
 80021d6:	bfab      	itete	ge
 80021d8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80021da:	89a3      	ldrhlt	r3, [r4, #12]
 80021dc:	181b      	addge	r3, r3, r0
 80021de:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80021e2:	bfac      	ite	ge
 80021e4:	6563      	strge	r3, [r4, #84]	@ 0x54
 80021e6:	81a3      	strhlt	r3, [r4, #12]
 80021e8:	bd10      	pop	{r4, pc}

080021ea <__swrite>:
 80021ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80021ee:	461f      	mov	r7, r3
 80021f0:	898b      	ldrh	r3, [r1, #12]
 80021f2:	05db      	lsls	r3, r3, #23
 80021f4:	4605      	mov	r5, r0
 80021f6:	460c      	mov	r4, r1
 80021f8:	4616      	mov	r6, r2
 80021fa:	d505      	bpl.n	8002208 <__swrite+0x1e>
 80021fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002200:	2302      	movs	r3, #2
 8002202:	2200      	movs	r2, #0
 8002204:	f000 f8d4 	bl	80023b0 <_lseek_r>
 8002208:	89a3      	ldrh	r3, [r4, #12]
 800220a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800220e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002212:	81a3      	strh	r3, [r4, #12]
 8002214:	4632      	mov	r2, r6
 8002216:	463b      	mov	r3, r7
 8002218:	4628      	mov	r0, r5
 800221a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800221e:	f000 b8eb 	b.w	80023f8 <_write_r>

08002222 <__sseek>:
 8002222:	b510      	push	{r4, lr}
 8002224:	460c      	mov	r4, r1
 8002226:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800222a:	f000 f8c1 	bl	80023b0 <_lseek_r>
 800222e:	1c43      	adds	r3, r0, #1
 8002230:	89a3      	ldrh	r3, [r4, #12]
 8002232:	bf15      	itete	ne
 8002234:	6560      	strne	r0, [r4, #84]	@ 0x54
 8002236:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800223a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800223e:	81a3      	strheq	r3, [r4, #12]
 8002240:	bf18      	it	ne
 8002242:	81a3      	strhne	r3, [r4, #12]
 8002244:	bd10      	pop	{r4, pc}

08002246 <__sclose>:
 8002246:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800224a:	f000 b8a1 	b.w	8002390 <_close_r>

0800224e <__swbuf_r>:
 800224e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002250:	460e      	mov	r6, r1
 8002252:	4614      	mov	r4, r2
 8002254:	4605      	mov	r5, r0
 8002256:	b118      	cbz	r0, 8002260 <__swbuf_r+0x12>
 8002258:	6a03      	ldr	r3, [r0, #32]
 800225a:	b90b      	cbnz	r3, 8002260 <__swbuf_r+0x12>
 800225c:	f7ff ff0e 	bl	800207c <__sinit>
 8002260:	69a3      	ldr	r3, [r4, #24]
 8002262:	60a3      	str	r3, [r4, #8]
 8002264:	89a3      	ldrh	r3, [r4, #12]
 8002266:	071a      	lsls	r2, r3, #28
 8002268:	d501      	bpl.n	800226e <__swbuf_r+0x20>
 800226a:	6923      	ldr	r3, [r4, #16]
 800226c:	b943      	cbnz	r3, 8002280 <__swbuf_r+0x32>
 800226e:	4621      	mov	r1, r4
 8002270:	4628      	mov	r0, r5
 8002272:	f000 f82b 	bl	80022cc <__swsetup_r>
 8002276:	b118      	cbz	r0, 8002280 <__swbuf_r+0x32>
 8002278:	f04f 37ff 	mov.w	r7, #4294967295
 800227c:	4638      	mov	r0, r7
 800227e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002280:	6823      	ldr	r3, [r4, #0]
 8002282:	6922      	ldr	r2, [r4, #16]
 8002284:	1a98      	subs	r0, r3, r2
 8002286:	6963      	ldr	r3, [r4, #20]
 8002288:	b2f6      	uxtb	r6, r6
 800228a:	4283      	cmp	r3, r0
 800228c:	4637      	mov	r7, r6
 800228e:	dc05      	bgt.n	800229c <__swbuf_r+0x4e>
 8002290:	4621      	mov	r1, r4
 8002292:	4628      	mov	r0, r5
 8002294:	f001 fd84 	bl	8003da0 <_fflush_r>
 8002298:	2800      	cmp	r0, #0
 800229a:	d1ed      	bne.n	8002278 <__swbuf_r+0x2a>
 800229c:	68a3      	ldr	r3, [r4, #8]
 800229e:	3b01      	subs	r3, #1
 80022a0:	60a3      	str	r3, [r4, #8]
 80022a2:	6823      	ldr	r3, [r4, #0]
 80022a4:	1c5a      	adds	r2, r3, #1
 80022a6:	6022      	str	r2, [r4, #0]
 80022a8:	701e      	strb	r6, [r3, #0]
 80022aa:	6962      	ldr	r2, [r4, #20]
 80022ac:	1c43      	adds	r3, r0, #1
 80022ae:	429a      	cmp	r2, r3
 80022b0:	d004      	beq.n	80022bc <__swbuf_r+0x6e>
 80022b2:	89a3      	ldrh	r3, [r4, #12]
 80022b4:	07db      	lsls	r3, r3, #31
 80022b6:	d5e1      	bpl.n	800227c <__swbuf_r+0x2e>
 80022b8:	2e0a      	cmp	r6, #10
 80022ba:	d1df      	bne.n	800227c <__swbuf_r+0x2e>
 80022bc:	4621      	mov	r1, r4
 80022be:	4628      	mov	r0, r5
 80022c0:	f001 fd6e 	bl	8003da0 <_fflush_r>
 80022c4:	2800      	cmp	r0, #0
 80022c6:	d0d9      	beq.n	800227c <__swbuf_r+0x2e>
 80022c8:	e7d6      	b.n	8002278 <__swbuf_r+0x2a>
	...

080022cc <__swsetup_r>:
 80022cc:	b538      	push	{r3, r4, r5, lr}
 80022ce:	4b29      	ldr	r3, [pc, #164]	@ (8002374 <__swsetup_r+0xa8>)
 80022d0:	4605      	mov	r5, r0
 80022d2:	6818      	ldr	r0, [r3, #0]
 80022d4:	460c      	mov	r4, r1
 80022d6:	b118      	cbz	r0, 80022e0 <__swsetup_r+0x14>
 80022d8:	6a03      	ldr	r3, [r0, #32]
 80022da:	b90b      	cbnz	r3, 80022e0 <__swsetup_r+0x14>
 80022dc:	f7ff fece 	bl	800207c <__sinit>
 80022e0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80022e4:	0719      	lsls	r1, r3, #28
 80022e6:	d422      	bmi.n	800232e <__swsetup_r+0x62>
 80022e8:	06da      	lsls	r2, r3, #27
 80022ea:	d407      	bmi.n	80022fc <__swsetup_r+0x30>
 80022ec:	2209      	movs	r2, #9
 80022ee:	602a      	str	r2, [r5, #0]
 80022f0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80022f4:	81a3      	strh	r3, [r4, #12]
 80022f6:	f04f 30ff 	mov.w	r0, #4294967295
 80022fa:	e033      	b.n	8002364 <__swsetup_r+0x98>
 80022fc:	0758      	lsls	r0, r3, #29
 80022fe:	d512      	bpl.n	8002326 <__swsetup_r+0x5a>
 8002300:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8002302:	b141      	cbz	r1, 8002316 <__swsetup_r+0x4a>
 8002304:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8002308:	4299      	cmp	r1, r3
 800230a:	d002      	beq.n	8002312 <__swsetup_r+0x46>
 800230c:	4628      	mov	r0, r5
 800230e:	f000 feff 	bl	8003110 <_free_r>
 8002312:	2300      	movs	r3, #0
 8002314:	6363      	str	r3, [r4, #52]	@ 0x34
 8002316:	89a3      	ldrh	r3, [r4, #12]
 8002318:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800231c:	81a3      	strh	r3, [r4, #12]
 800231e:	2300      	movs	r3, #0
 8002320:	6063      	str	r3, [r4, #4]
 8002322:	6923      	ldr	r3, [r4, #16]
 8002324:	6023      	str	r3, [r4, #0]
 8002326:	89a3      	ldrh	r3, [r4, #12]
 8002328:	f043 0308 	orr.w	r3, r3, #8
 800232c:	81a3      	strh	r3, [r4, #12]
 800232e:	6923      	ldr	r3, [r4, #16]
 8002330:	b94b      	cbnz	r3, 8002346 <__swsetup_r+0x7a>
 8002332:	89a3      	ldrh	r3, [r4, #12]
 8002334:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8002338:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800233c:	d003      	beq.n	8002346 <__swsetup_r+0x7a>
 800233e:	4621      	mov	r1, r4
 8002340:	4628      	mov	r0, r5
 8002342:	f001 fd7b 	bl	8003e3c <__smakebuf_r>
 8002346:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800234a:	f013 0201 	ands.w	r2, r3, #1
 800234e:	d00a      	beq.n	8002366 <__swsetup_r+0x9a>
 8002350:	2200      	movs	r2, #0
 8002352:	60a2      	str	r2, [r4, #8]
 8002354:	6962      	ldr	r2, [r4, #20]
 8002356:	4252      	negs	r2, r2
 8002358:	61a2      	str	r2, [r4, #24]
 800235a:	6922      	ldr	r2, [r4, #16]
 800235c:	b942      	cbnz	r2, 8002370 <__swsetup_r+0xa4>
 800235e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8002362:	d1c5      	bne.n	80022f0 <__swsetup_r+0x24>
 8002364:	bd38      	pop	{r3, r4, r5, pc}
 8002366:	0799      	lsls	r1, r3, #30
 8002368:	bf58      	it	pl
 800236a:	6962      	ldrpl	r2, [r4, #20]
 800236c:	60a2      	str	r2, [r4, #8]
 800236e:	e7f4      	b.n	800235a <__swsetup_r+0x8e>
 8002370:	2000      	movs	r0, #0
 8002372:	e7f7      	b.n	8002364 <__swsetup_r+0x98>
 8002374:	2000000c 	.word	0x2000000c

08002378 <memset>:
 8002378:	4402      	add	r2, r0
 800237a:	4603      	mov	r3, r0
 800237c:	4293      	cmp	r3, r2
 800237e:	d100      	bne.n	8002382 <memset+0xa>
 8002380:	4770      	bx	lr
 8002382:	f803 1b01 	strb.w	r1, [r3], #1
 8002386:	e7f9      	b.n	800237c <memset+0x4>

08002388 <_localeconv_r>:
 8002388:	4800      	ldr	r0, [pc, #0]	@ (800238c <_localeconv_r+0x4>)
 800238a:	4770      	bx	lr
 800238c:	2000014c 	.word	0x2000014c

08002390 <_close_r>:
 8002390:	b538      	push	{r3, r4, r5, lr}
 8002392:	4d06      	ldr	r5, [pc, #24]	@ (80023ac <_close_r+0x1c>)
 8002394:	2300      	movs	r3, #0
 8002396:	4604      	mov	r4, r0
 8002398:	4608      	mov	r0, r1
 800239a:	602b      	str	r3, [r5, #0]
 800239c:	f7ff f8f8 	bl	8001590 <_close>
 80023a0:	1c43      	adds	r3, r0, #1
 80023a2:	d102      	bne.n	80023aa <_close_r+0x1a>
 80023a4:	682b      	ldr	r3, [r5, #0]
 80023a6:	b103      	cbz	r3, 80023aa <_close_r+0x1a>
 80023a8:	6023      	str	r3, [r4, #0]
 80023aa:	bd38      	pop	{r3, r4, r5, pc}
 80023ac:	20000324 	.word	0x20000324

080023b0 <_lseek_r>:
 80023b0:	b538      	push	{r3, r4, r5, lr}
 80023b2:	4d07      	ldr	r5, [pc, #28]	@ (80023d0 <_lseek_r+0x20>)
 80023b4:	4604      	mov	r4, r0
 80023b6:	4608      	mov	r0, r1
 80023b8:	4611      	mov	r1, r2
 80023ba:	2200      	movs	r2, #0
 80023bc:	602a      	str	r2, [r5, #0]
 80023be:	461a      	mov	r2, r3
 80023c0:	f7ff f90d 	bl	80015de <_lseek>
 80023c4:	1c43      	adds	r3, r0, #1
 80023c6:	d102      	bne.n	80023ce <_lseek_r+0x1e>
 80023c8:	682b      	ldr	r3, [r5, #0]
 80023ca:	b103      	cbz	r3, 80023ce <_lseek_r+0x1e>
 80023cc:	6023      	str	r3, [r4, #0]
 80023ce:	bd38      	pop	{r3, r4, r5, pc}
 80023d0:	20000324 	.word	0x20000324

080023d4 <_read_r>:
 80023d4:	b538      	push	{r3, r4, r5, lr}
 80023d6:	4d07      	ldr	r5, [pc, #28]	@ (80023f4 <_read_r+0x20>)
 80023d8:	4604      	mov	r4, r0
 80023da:	4608      	mov	r0, r1
 80023dc:	4611      	mov	r1, r2
 80023de:	2200      	movs	r2, #0
 80023e0:	602a      	str	r2, [r5, #0]
 80023e2:	461a      	mov	r2, r3
 80023e4:	f7ff f89b 	bl	800151e <_read>
 80023e8:	1c43      	adds	r3, r0, #1
 80023ea:	d102      	bne.n	80023f2 <_read_r+0x1e>
 80023ec:	682b      	ldr	r3, [r5, #0]
 80023ee:	b103      	cbz	r3, 80023f2 <_read_r+0x1e>
 80023f0:	6023      	str	r3, [r4, #0]
 80023f2:	bd38      	pop	{r3, r4, r5, pc}
 80023f4:	20000324 	.word	0x20000324

080023f8 <_write_r>:
 80023f8:	b538      	push	{r3, r4, r5, lr}
 80023fa:	4d07      	ldr	r5, [pc, #28]	@ (8002418 <_write_r+0x20>)
 80023fc:	4604      	mov	r4, r0
 80023fe:	4608      	mov	r0, r1
 8002400:	4611      	mov	r1, r2
 8002402:	2200      	movs	r2, #0
 8002404:	602a      	str	r2, [r5, #0]
 8002406:	461a      	mov	r2, r3
 8002408:	f7ff f8a6 	bl	8001558 <_write>
 800240c:	1c43      	adds	r3, r0, #1
 800240e:	d102      	bne.n	8002416 <_write_r+0x1e>
 8002410:	682b      	ldr	r3, [r5, #0]
 8002412:	b103      	cbz	r3, 8002416 <_write_r+0x1e>
 8002414:	6023      	str	r3, [r4, #0]
 8002416:	bd38      	pop	{r3, r4, r5, pc}
 8002418:	20000324 	.word	0x20000324

0800241c <__errno>:
 800241c:	4b01      	ldr	r3, [pc, #4]	@ (8002424 <__errno+0x8>)
 800241e:	6818      	ldr	r0, [r3, #0]
 8002420:	4770      	bx	lr
 8002422:	bf00      	nop
 8002424:	2000000c 	.word	0x2000000c

08002428 <__libc_init_array>:
 8002428:	b570      	push	{r4, r5, r6, lr}
 800242a:	4d0d      	ldr	r5, [pc, #52]	@ (8002460 <__libc_init_array+0x38>)
 800242c:	4c0d      	ldr	r4, [pc, #52]	@ (8002464 <__libc_init_array+0x3c>)
 800242e:	1b64      	subs	r4, r4, r5
 8002430:	10a4      	asrs	r4, r4, #2
 8002432:	2600      	movs	r6, #0
 8002434:	42a6      	cmp	r6, r4
 8002436:	d109      	bne.n	800244c <__libc_init_array+0x24>
 8002438:	4d0b      	ldr	r5, [pc, #44]	@ (8002468 <__libc_init_array+0x40>)
 800243a:	4c0c      	ldr	r4, [pc, #48]	@ (800246c <__libc_init_array+0x44>)
 800243c:	f001 fe2a 	bl	8004094 <_init>
 8002440:	1b64      	subs	r4, r4, r5
 8002442:	10a4      	asrs	r4, r4, #2
 8002444:	2600      	movs	r6, #0
 8002446:	42a6      	cmp	r6, r4
 8002448:	d105      	bne.n	8002456 <__libc_init_array+0x2e>
 800244a:	bd70      	pop	{r4, r5, r6, pc}
 800244c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002450:	4798      	blx	r3
 8002452:	3601      	adds	r6, #1
 8002454:	e7ee      	b.n	8002434 <__libc_init_array+0xc>
 8002456:	f855 3b04 	ldr.w	r3, [r5], #4
 800245a:	4798      	blx	r3
 800245c:	3601      	adds	r6, #1
 800245e:	e7f2      	b.n	8002446 <__libc_init_array+0x1e>
 8002460:	08004498 	.word	0x08004498
 8002464:	08004498 	.word	0x08004498
 8002468:	08004498 	.word	0x08004498
 800246c:	0800449c 	.word	0x0800449c

08002470 <__retarget_lock_init_recursive>:
 8002470:	4770      	bx	lr

08002472 <__retarget_lock_acquire_recursive>:
 8002472:	4770      	bx	lr

08002474 <__retarget_lock_release_recursive>:
 8002474:	4770      	bx	lr

08002476 <quorem>:
 8002476:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800247a:	6903      	ldr	r3, [r0, #16]
 800247c:	690c      	ldr	r4, [r1, #16]
 800247e:	42a3      	cmp	r3, r4
 8002480:	4607      	mov	r7, r0
 8002482:	db7e      	blt.n	8002582 <quorem+0x10c>
 8002484:	3c01      	subs	r4, #1
 8002486:	f101 0814 	add.w	r8, r1, #20
 800248a:	00a3      	lsls	r3, r4, #2
 800248c:	f100 0514 	add.w	r5, r0, #20
 8002490:	9300      	str	r3, [sp, #0]
 8002492:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002496:	9301      	str	r3, [sp, #4]
 8002498:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800249c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80024a0:	3301      	adds	r3, #1
 80024a2:	429a      	cmp	r2, r3
 80024a4:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80024a8:	fbb2 f6f3 	udiv	r6, r2, r3
 80024ac:	d32e      	bcc.n	800250c <quorem+0x96>
 80024ae:	f04f 0a00 	mov.w	sl, #0
 80024b2:	46c4      	mov	ip, r8
 80024b4:	46ae      	mov	lr, r5
 80024b6:	46d3      	mov	fp, sl
 80024b8:	f85c 3b04 	ldr.w	r3, [ip], #4
 80024bc:	b298      	uxth	r0, r3
 80024be:	fb06 a000 	mla	r0, r6, r0, sl
 80024c2:	0c02      	lsrs	r2, r0, #16
 80024c4:	0c1b      	lsrs	r3, r3, #16
 80024c6:	fb06 2303 	mla	r3, r6, r3, r2
 80024ca:	f8de 2000 	ldr.w	r2, [lr]
 80024ce:	b280      	uxth	r0, r0
 80024d0:	b292      	uxth	r2, r2
 80024d2:	1a12      	subs	r2, r2, r0
 80024d4:	445a      	add	r2, fp
 80024d6:	f8de 0000 	ldr.w	r0, [lr]
 80024da:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80024de:	b29b      	uxth	r3, r3
 80024e0:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80024e4:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80024e8:	b292      	uxth	r2, r2
 80024ea:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80024ee:	45e1      	cmp	r9, ip
 80024f0:	f84e 2b04 	str.w	r2, [lr], #4
 80024f4:	ea4f 4b23 	mov.w	fp, r3, asr #16
 80024f8:	d2de      	bcs.n	80024b8 <quorem+0x42>
 80024fa:	9b00      	ldr	r3, [sp, #0]
 80024fc:	58eb      	ldr	r3, [r5, r3]
 80024fe:	b92b      	cbnz	r3, 800250c <quorem+0x96>
 8002500:	9b01      	ldr	r3, [sp, #4]
 8002502:	3b04      	subs	r3, #4
 8002504:	429d      	cmp	r5, r3
 8002506:	461a      	mov	r2, r3
 8002508:	d32f      	bcc.n	800256a <quorem+0xf4>
 800250a:	613c      	str	r4, [r7, #16]
 800250c:	4638      	mov	r0, r7
 800250e:	f001 f979 	bl	8003804 <__mcmp>
 8002512:	2800      	cmp	r0, #0
 8002514:	db25      	blt.n	8002562 <quorem+0xec>
 8002516:	4629      	mov	r1, r5
 8002518:	2000      	movs	r0, #0
 800251a:	f858 2b04 	ldr.w	r2, [r8], #4
 800251e:	f8d1 c000 	ldr.w	ip, [r1]
 8002522:	fa1f fe82 	uxth.w	lr, r2
 8002526:	fa1f f38c 	uxth.w	r3, ip
 800252a:	eba3 030e 	sub.w	r3, r3, lr
 800252e:	4403      	add	r3, r0
 8002530:	0c12      	lsrs	r2, r2, #16
 8002532:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8002536:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800253a:	b29b      	uxth	r3, r3
 800253c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8002540:	45c1      	cmp	r9, r8
 8002542:	f841 3b04 	str.w	r3, [r1], #4
 8002546:	ea4f 4022 	mov.w	r0, r2, asr #16
 800254a:	d2e6      	bcs.n	800251a <quorem+0xa4>
 800254c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002550:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002554:	b922      	cbnz	r2, 8002560 <quorem+0xea>
 8002556:	3b04      	subs	r3, #4
 8002558:	429d      	cmp	r5, r3
 800255a:	461a      	mov	r2, r3
 800255c:	d30b      	bcc.n	8002576 <quorem+0x100>
 800255e:	613c      	str	r4, [r7, #16]
 8002560:	3601      	adds	r6, #1
 8002562:	4630      	mov	r0, r6
 8002564:	b003      	add	sp, #12
 8002566:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800256a:	6812      	ldr	r2, [r2, #0]
 800256c:	3b04      	subs	r3, #4
 800256e:	2a00      	cmp	r2, #0
 8002570:	d1cb      	bne.n	800250a <quorem+0x94>
 8002572:	3c01      	subs	r4, #1
 8002574:	e7c6      	b.n	8002504 <quorem+0x8e>
 8002576:	6812      	ldr	r2, [r2, #0]
 8002578:	3b04      	subs	r3, #4
 800257a:	2a00      	cmp	r2, #0
 800257c:	d1ef      	bne.n	800255e <quorem+0xe8>
 800257e:	3c01      	subs	r4, #1
 8002580:	e7ea      	b.n	8002558 <quorem+0xe2>
 8002582:	2000      	movs	r0, #0
 8002584:	e7ee      	b.n	8002564 <quorem+0xee>
	...

08002588 <_dtoa_r>:
 8002588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800258c:	69c7      	ldr	r7, [r0, #28]
 800258e:	b099      	sub	sp, #100	@ 0x64
 8002590:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002594:	ec55 4b10 	vmov	r4, r5, d0
 8002598:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 800259a:	9109      	str	r1, [sp, #36]	@ 0x24
 800259c:	4683      	mov	fp, r0
 800259e:	920e      	str	r2, [sp, #56]	@ 0x38
 80025a0:	9313      	str	r3, [sp, #76]	@ 0x4c
 80025a2:	b97f      	cbnz	r7, 80025c4 <_dtoa_r+0x3c>
 80025a4:	2010      	movs	r0, #16
 80025a6:	f000 fdfd 	bl	80031a4 <malloc>
 80025aa:	4602      	mov	r2, r0
 80025ac:	f8cb 001c 	str.w	r0, [fp, #28]
 80025b0:	b920      	cbnz	r0, 80025bc <_dtoa_r+0x34>
 80025b2:	4ba7      	ldr	r3, [pc, #668]	@ (8002850 <_dtoa_r+0x2c8>)
 80025b4:	21ef      	movs	r1, #239	@ 0xef
 80025b6:	48a7      	ldr	r0, [pc, #668]	@ (8002854 <_dtoa_r+0x2cc>)
 80025b8:	f001 fcbc 	bl	8003f34 <__assert_func>
 80025bc:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80025c0:	6007      	str	r7, [r0, #0]
 80025c2:	60c7      	str	r7, [r0, #12]
 80025c4:	f8db 301c 	ldr.w	r3, [fp, #28]
 80025c8:	6819      	ldr	r1, [r3, #0]
 80025ca:	b159      	cbz	r1, 80025e4 <_dtoa_r+0x5c>
 80025cc:	685a      	ldr	r2, [r3, #4]
 80025ce:	604a      	str	r2, [r1, #4]
 80025d0:	2301      	movs	r3, #1
 80025d2:	4093      	lsls	r3, r2
 80025d4:	608b      	str	r3, [r1, #8]
 80025d6:	4658      	mov	r0, fp
 80025d8:	f000 feda 	bl	8003390 <_Bfree>
 80025dc:	f8db 301c 	ldr.w	r3, [fp, #28]
 80025e0:	2200      	movs	r2, #0
 80025e2:	601a      	str	r2, [r3, #0]
 80025e4:	1e2b      	subs	r3, r5, #0
 80025e6:	bfb9      	ittee	lt
 80025e8:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80025ec:	9303      	strlt	r3, [sp, #12]
 80025ee:	2300      	movge	r3, #0
 80025f0:	6033      	strge	r3, [r6, #0]
 80025f2:	9f03      	ldr	r7, [sp, #12]
 80025f4:	4b98      	ldr	r3, [pc, #608]	@ (8002858 <_dtoa_r+0x2d0>)
 80025f6:	bfbc      	itt	lt
 80025f8:	2201      	movlt	r2, #1
 80025fa:	6032      	strlt	r2, [r6, #0]
 80025fc:	43bb      	bics	r3, r7
 80025fe:	d112      	bne.n	8002626 <_dtoa_r+0x9e>
 8002600:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002602:	f242 730f 	movw	r3, #9999	@ 0x270f
 8002606:	6013      	str	r3, [r2, #0]
 8002608:	f3c7 0313 	ubfx	r3, r7, #0, #20
 800260c:	4323      	orrs	r3, r4
 800260e:	f000 854d 	beq.w	80030ac <_dtoa_r+0xb24>
 8002612:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002614:	f8df a254 	ldr.w	sl, [pc, #596]	@ 800286c <_dtoa_r+0x2e4>
 8002618:	2b00      	cmp	r3, #0
 800261a:	f000 854f 	beq.w	80030bc <_dtoa_r+0xb34>
 800261e:	f10a 0303 	add.w	r3, sl, #3
 8002622:	f000 bd49 	b.w	80030b8 <_dtoa_r+0xb30>
 8002626:	ed9d 7b02 	vldr	d7, [sp, #8]
 800262a:	2200      	movs	r2, #0
 800262c:	ec51 0b17 	vmov	r0, r1, d7
 8002630:	2300      	movs	r3, #0
 8002632:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8002636:	f7fe fa4f 	bl	8000ad8 <__aeabi_dcmpeq>
 800263a:	4680      	mov	r8, r0
 800263c:	b158      	cbz	r0, 8002656 <_dtoa_r+0xce>
 800263e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8002640:	2301      	movs	r3, #1
 8002642:	6013      	str	r3, [r2, #0]
 8002644:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002646:	b113      	cbz	r3, 800264e <_dtoa_r+0xc6>
 8002648:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800264a:	4b84      	ldr	r3, [pc, #528]	@ (800285c <_dtoa_r+0x2d4>)
 800264c:	6013      	str	r3, [r2, #0]
 800264e:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8002870 <_dtoa_r+0x2e8>
 8002652:	f000 bd33 	b.w	80030bc <_dtoa_r+0xb34>
 8002656:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 800265a:	aa16      	add	r2, sp, #88	@ 0x58
 800265c:	a917      	add	r1, sp, #92	@ 0x5c
 800265e:	4658      	mov	r0, fp
 8002660:	f001 f980 	bl	8003964 <__d2b>
 8002664:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8002668:	4681      	mov	r9, r0
 800266a:	2e00      	cmp	r6, #0
 800266c:	d077      	beq.n	800275e <_dtoa_r+0x1d6>
 800266e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8002670:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 8002674:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002678:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800267c:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8002680:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 8002684:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8002688:	4619      	mov	r1, r3
 800268a:	2200      	movs	r2, #0
 800268c:	4b74      	ldr	r3, [pc, #464]	@ (8002860 <_dtoa_r+0x2d8>)
 800268e:	f7fd fe03 	bl	8000298 <__aeabi_dsub>
 8002692:	a369      	add	r3, pc, #420	@ (adr r3, 8002838 <_dtoa_r+0x2b0>)
 8002694:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002698:	f7fd ffb6 	bl	8000608 <__aeabi_dmul>
 800269c:	a368      	add	r3, pc, #416	@ (adr r3, 8002840 <_dtoa_r+0x2b8>)
 800269e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026a2:	f7fd fdfb 	bl	800029c <__adddf3>
 80026a6:	4604      	mov	r4, r0
 80026a8:	4630      	mov	r0, r6
 80026aa:	460d      	mov	r5, r1
 80026ac:	f7fd ff42 	bl	8000534 <__aeabi_i2d>
 80026b0:	a365      	add	r3, pc, #404	@ (adr r3, 8002848 <_dtoa_r+0x2c0>)
 80026b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026b6:	f7fd ffa7 	bl	8000608 <__aeabi_dmul>
 80026ba:	4602      	mov	r2, r0
 80026bc:	460b      	mov	r3, r1
 80026be:	4620      	mov	r0, r4
 80026c0:	4629      	mov	r1, r5
 80026c2:	f7fd fdeb 	bl	800029c <__adddf3>
 80026c6:	4604      	mov	r4, r0
 80026c8:	460d      	mov	r5, r1
 80026ca:	f7fe fa4d 	bl	8000b68 <__aeabi_d2iz>
 80026ce:	2200      	movs	r2, #0
 80026d0:	4607      	mov	r7, r0
 80026d2:	2300      	movs	r3, #0
 80026d4:	4620      	mov	r0, r4
 80026d6:	4629      	mov	r1, r5
 80026d8:	f7fe fa08 	bl	8000aec <__aeabi_dcmplt>
 80026dc:	b140      	cbz	r0, 80026f0 <_dtoa_r+0x168>
 80026de:	4638      	mov	r0, r7
 80026e0:	f7fd ff28 	bl	8000534 <__aeabi_i2d>
 80026e4:	4622      	mov	r2, r4
 80026e6:	462b      	mov	r3, r5
 80026e8:	f7fe f9f6 	bl	8000ad8 <__aeabi_dcmpeq>
 80026ec:	b900      	cbnz	r0, 80026f0 <_dtoa_r+0x168>
 80026ee:	3f01      	subs	r7, #1
 80026f0:	2f16      	cmp	r7, #22
 80026f2:	d851      	bhi.n	8002798 <_dtoa_r+0x210>
 80026f4:	4b5b      	ldr	r3, [pc, #364]	@ (8002864 <_dtoa_r+0x2dc>)
 80026f6:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80026fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80026fe:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8002702:	f7fe f9f3 	bl	8000aec <__aeabi_dcmplt>
 8002706:	2800      	cmp	r0, #0
 8002708:	d048      	beq.n	800279c <_dtoa_r+0x214>
 800270a:	3f01      	subs	r7, #1
 800270c:	2300      	movs	r3, #0
 800270e:	9312      	str	r3, [sp, #72]	@ 0x48
 8002710:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002712:	1b9b      	subs	r3, r3, r6
 8002714:	1e5a      	subs	r2, r3, #1
 8002716:	bf44      	itt	mi
 8002718:	f1c3 0801 	rsbmi	r8, r3, #1
 800271c:	2300      	movmi	r3, #0
 800271e:	9208      	str	r2, [sp, #32]
 8002720:	bf54      	ite	pl
 8002722:	f04f 0800 	movpl.w	r8, #0
 8002726:	9308      	strmi	r3, [sp, #32]
 8002728:	2f00      	cmp	r7, #0
 800272a:	db39      	blt.n	80027a0 <_dtoa_r+0x218>
 800272c:	9b08      	ldr	r3, [sp, #32]
 800272e:	970f      	str	r7, [sp, #60]	@ 0x3c
 8002730:	443b      	add	r3, r7
 8002732:	9308      	str	r3, [sp, #32]
 8002734:	2300      	movs	r3, #0
 8002736:	930a      	str	r3, [sp, #40]	@ 0x28
 8002738:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800273a:	2b09      	cmp	r3, #9
 800273c:	d864      	bhi.n	8002808 <_dtoa_r+0x280>
 800273e:	2b05      	cmp	r3, #5
 8002740:	bfc4      	itt	gt
 8002742:	3b04      	subgt	r3, #4
 8002744:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8002746:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002748:	f1a3 0302 	sub.w	r3, r3, #2
 800274c:	bfcc      	ite	gt
 800274e:	2400      	movgt	r4, #0
 8002750:	2401      	movle	r4, #1
 8002752:	2b03      	cmp	r3, #3
 8002754:	d863      	bhi.n	800281e <_dtoa_r+0x296>
 8002756:	e8df f003 	tbb	[pc, r3]
 800275a:	372a      	.short	0x372a
 800275c:	5535      	.short	0x5535
 800275e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8002762:	441e      	add	r6, r3
 8002764:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8002768:	2b20      	cmp	r3, #32
 800276a:	bfc1      	itttt	gt
 800276c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8002770:	409f      	lslgt	r7, r3
 8002772:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8002776:	fa24 f303 	lsrgt.w	r3, r4, r3
 800277a:	bfd6      	itet	le
 800277c:	f1c3 0320 	rsble	r3, r3, #32
 8002780:	ea47 0003 	orrgt.w	r0, r7, r3
 8002784:	fa04 f003 	lslle.w	r0, r4, r3
 8002788:	f7fd fec4 	bl	8000514 <__aeabi_ui2d>
 800278c:	2201      	movs	r2, #1
 800278e:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8002792:	3e01      	subs	r6, #1
 8002794:	9214      	str	r2, [sp, #80]	@ 0x50
 8002796:	e777      	b.n	8002688 <_dtoa_r+0x100>
 8002798:	2301      	movs	r3, #1
 800279a:	e7b8      	b.n	800270e <_dtoa_r+0x186>
 800279c:	9012      	str	r0, [sp, #72]	@ 0x48
 800279e:	e7b7      	b.n	8002710 <_dtoa_r+0x188>
 80027a0:	427b      	negs	r3, r7
 80027a2:	930a      	str	r3, [sp, #40]	@ 0x28
 80027a4:	2300      	movs	r3, #0
 80027a6:	eba8 0807 	sub.w	r8, r8, r7
 80027aa:	930f      	str	r3, [sp, #60]	@ 0x3c
 80027ac:	e7c4      	b.n	8002738 <_dtoa_r+0x1b0>
 80027ae:	2300      	movs	r3, #0
 80027b0:	930b      	str	r3, [sp, #44]	@ 0x2c
 80027b2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80027b4:	2b00      	cmp	r3, #0
 80027b6:	dc35      	bgt.n	8002824 <_dtoa_r+0x29c>
 80027b8:	2301      	movs	r3, #1
 80027ba:	9300      	str	r3, [sp, #0]
 80027bc:	9307      	str	r3, [sp, #28]
 80027be:	461a      	mov	r2, r3
 80027c0:	920e      	str	r2, [sp, #56]	@ 0x38
 80027c2:	e00b      	b.n	80027dc <_dtoa_r+0x254>
 80027c4:	2301      	movs	r3, #1
 80027c6:	e7f3      	b.n	80027b0 <_dtoa_r+0x228>
 80027c8:	2300      	movs	r3, #0
 80027ca:	930b      	str	r3, [sp, #44]	@ 0x2c
 80027cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80027ce:	18fb      	adds	r3, r7, r3
 80027d0:	9300      	str	r3, [sp, #0]
 80027d2:	3301      	adds	r3, #1
 80027d4:	2b01      	cmp	r3, #1
 80027d6:	9307      	str	r3, [sp, #28]
 80027d8:	bfb8      	it	lt
 80027da:	2301      	movlt	r3, #1
 80027dc:	f8db 001c 	ldr.w	r0, [fp, #28]
 80027e0:	2100      	movs	r1, #0
 80027e2:	2204      	movs	r2, #4
 80027e4:	f102 0514 	add.w	r5, r2, #20
 80027e8:	429d      	cmp	r5, r3
 80027ea:	d91f      	bls.n	800282c <_dtoa_r+0x2a4>
 80027ec:	6041      	str	r1, [r0, #4]
 80027ee:	4658      	mov	r0, fp
 80027f0:	f000 fd8e 	bl	8003310 <_Balloc>
 80027f4:	4682      	mov	sl, r0
 80027f6:	2800      	cmp	r0, #0
 80027f8:	d13c      	bne.n	8002874 <_dtoa_r+0x2ec>
 80027fa:	4b1b      	ldr	r3, [pc, #108]	@ (8002868 <_dtoa_r+0x2e0>)
 80027fc:	4602      	mov	r2, r0
 80027fe:	f240 11af 	movw	r1, #431	@ 0x1af
 8002802:	e6d8      	b.n	80025b6 <_dtoa_r+0x2e>
 8002804:	2301      	movs	r3, #1
 8002806:	e7e0      	b.n	80027ca <_dtoa_r+0x242>
 8002808:	2401      	movs	r4, #1
 800280a:	2300      	movs	r3, #0
 800280c:	9309      	str	r3, [sp, #36]	@ 0x24
 800280e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8002810:	f04f 33ff 	mov.w	r3, #4294967295
 8002814:	9300      	str	r3, [sp, #0]
 8002816:	9307      	str	r3, [sp, #28]
 8002818:	2200      	movs	r2, #0
 800281a:	2312      	movs	r3, #18
 800281c:	e7d0      	b.n	80027c0 <_dtoa_r+0x238>
 800281e:	2301      	movs	r3, #1
 8002820:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002822:	e7f5      	b.n	8002810 <_dtoa_r+0x288>
 8002824:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002826:	9300      	str	r3, [sp, #0]
 8002828:	9307      	str	r3, [sp, #28]
 800282a:	e7d7      	b.n	80027dc <_dtoa_r+0x254>
 800282c:	3101      	adds	r1, #1
 800282e:	0052      	lsls	r2, r2, #1
 8002830:	e7d8      	b.n	80027e4 <_dtoa_r+0x25c>
 8002832:	bf00      	nop
 8002834:	f3af 8000 	nop.w
 8002838:	636f4361 	.word	0x636f4361
 800283c:	3fd287a7 	.word	0x3fd287a7
 8002840:	8b60c8b3 	.word	0x8b60c8b3
 8002844:	3fc68a28 	.word	0x3fc68a28
 8002848:	509f79fb 	.word	0x509f79fb
 800284c:	3fd34413 	.word	0x3fd34413
 8002850:	0800415f 	.word	0x0800415f
 8002854:	08004176 	.word	0x08004176
 8002858:	7ff00000 	.word	0x7ff00000
 800285c:	0800412f 	.word	0x0800412f
 8002860:	3ff80000 	.word	0x3ff80000
 8002864:	08004270 	.word	0x08004270
 8002868:	080041ce 	.word	0x080041ce
 800286c:	0800415b 	.word	0x0800415b
 8002870:	0800412e 	.word	0x0800412e
 8002874:	f8db 301c 	ldr.w	r3, [fp, #28]
 8002878:	6018      	str	r0, [r3, #0]
 800287a:	9b07      	ldr	r3, [sp, #28]
 800287c:	2b0e      	cmp	r3, #14
 800287e:	f200 80a4 	bhi.w	80029ca <_dtoa_r+0x442>
 8002882:	2c00      	cmp	r4, #0
 8002884:	f000 80a1 	beq.w	80029ca <_dtoa_r+0x442>
 8002888:	2f00      	cmp	r7, #0
 800288a:	dd33      	ble.n	80028f4 <_dtoa_r+0x36c>
 800288c:	4bad      	ldr	r3, [pc, #692]	@ (8002b44 <_dtoa_r+0x5bc>)
 800288e:	f007 020f 	and.w	r2, r7, #15
 8002892:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002896:	ed93 7b00 	vldr	d7, [r3]
 800289a:	05f8      	lsls	r0, r7, #23
 800289c:	ed8d 7b04 	vstr	d7, [sp, #16]
 80028a0:	ea4f 1427 	mov.w	r4, r7, asr #4
 80028a4:	d516      	bpl.n	80028d4 <_dtoa_r+0x34c>
 80028a6:	4ba8      	ldr	r3, [pc, #672]	@ (8002b48 <_dtoa_r+0x5c0>)
 80028a8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80028ac:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80028b0:	f7fd ffd4 	bl	800085c <__aeabi_ddiv>
 80028b4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80028b8:	f004 040f 	and.w	r4, r4, #15
 80028bc:	2603      	movs	r6, #3
 80028be:	4da2      	ldr	r5, [pc, #648]	@ (8002b48 <_dtoa_r+0x5c0>)
 80028c0:	b954      	cbnz	r4, 80028d8 <_dtoa_r+0x350>
 80028c2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80028c6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80028ca:	f7fd ffc7 	bl	800085c <__aeabi_ddiv>
 80028ce:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80028d2:	e028      	b.n	8002926 <_dtoa_r+0x39e>
 80028d4:	2602      	movs	r6, #2
 80028d6:	e7f2      	b.n	80028be <_dtoa_r+0x336>
 80028d8:	07e1      	lsls	r1, r4, #31
 80028da:	d508      	bpl.n	80028ee <_dtoa_r+0x366>
 80028dc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80028e0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80028e4:	f7fd fe90 	bl	8000608 <__aeabi_dmul>
 80028e8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80028ec:	3601      	adds	r6, #1
 80028ee:	1064      	asrs	r4, r4, #1
 80028f0:	3508      	adds	r5, #8
 80028f2:	e7e5      	b.n	80028c0 <_dtoa_r+0x338>
 80028f4:	f000 80d2 	beq.w	8002a9c <_dtoa_r+0x514>
 80028f8:	427c      	negs	r4, r7
 80028fa:	4b92      	ldr	r3, [pc, #584]	@ (8002b44 <_dtoa_r+0x5bc>)
 80028fc:	4d92      	ldr	r5, [pc, #584]	@ (8002b48 <_dtoa_r+0x5c0>)
 80028fe:	f004 020f 	and.w	r2, r4, #15
 8002902:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002906:	e9d3 2300 	ldrd	r2, r3, [r3]
 800290a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800290e:	f7fd fe7b 	bl	8000608 <__aeabi_dmul>
 8002912:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002916:	1124      	asrs	r4, r4, #4
 8002918:	2300      	movs	r3, #0
 800291a:	2602      	movs	r6, #2
 800291c:	2c00      	cmp	r4, #0
 800291e:	f040 80b2 	bne.w	8002a86 <_dtoa_r+0x4fe>
 8002922:	2b00      	cmp	r3, #0
 8002924:	d1d3      	bne.n	80028ce <_dtoa_r+0x346>
 8002926:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002928:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 800292c:	2b00      	cmp	r3, #0
 800292e:	f000 80b7 	beq.w	8002aa0 <_dtoa_r+0x518>
 8002932:	4b86      	ldr	r3, [pc, #536]	@ (8002b4c <_dtoa_r+0x5c4>)
 8002934:	2200      	movs	r2, #0
 8002936:	4620      	mov	r0, r4
 8002938:	4629      	mov	r1, r5
 800293a:	f7fe f8d7 	bl	8000aec <__aeabi_dcmplt>
 800293e:	2800      	cmp	r0, #0
 8002940:	f000 80ae 	beq.w	8002aa0 <_dtoa_r+0x518>
 8002944:	9b07      	ldr	r3, [sp, #28]
 8002946:	2b00      	cmp	r3, #0
 8002948:	f000 80aa 	beq.w	8002aa0 <_dtoa_r+0x518>
 800294c:	9b00      	ldr	r3, [sp, #0]
 800294e:	2b00      	cmp	r3, #0
 8002950:	dd37      	ble.n	80029c2 <_dtoa_r+0x43a>
 8002952:	1e7b      	subs	r3, r7, #1
 8002954:	9304      	str	r3, [sp, #16]
 8002956:	4620      	mov	r0, r4
 8002958:	4b7d      	ldr	r3, [pc, #500]	@ (8002b50 <_dtoa_r+0x5c8>)
 800295a:	2200      	movs	r2, #0
 800295c:	4629      	mov	r1, r5
 800295e:	f7fd fe53 	bl	8000608 <__aeabi_dmul>
 8002962:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002966:	9c00      	ldr	r4, [sp, #0]
 8002968:	3601      	adds	r6, #1
 800296a:	4630      	mov	r0, r6
 800296c:	f7fd fde2 	bl	8000534 <__aeabi_i2d>
 8002970:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002974:	f7fd fe48 	bl	8000608 <__aeabi_dmul>
 8002978:	4b76      	ldr	r3, [pc, #472]	@ (8002b54 <_dtoa_r+0x5cc>)
 800297a:	2200      	movs	r2, #0
 800297c:	f7fd fc8e 	bl	800029c <__adddf3>
 8002980:	4605      	mov	r5, r0
 8002982:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8002986:	2c00      	cmp	r4, #0
 8002988:	f040 808d 	bne.w	8002aa6 <_dtoa_r+0x51e>
 800298c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002990:	4b71      	ldr	r3, [pc, #452]	@ (8002b58 <_dtoa_r+0x5d0>)
 8002992:	2200      	movs	r2, #0
 8002994:	f7fd fc80 	bl	8000298 <__aeabi_dsub>
 8002998:	4602      	mov	r2, r0
 800299a:	460b      	mov	r3, r1
 800299c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80029a0:	462a      	mov	r2, r5
 80029a2:	4633      	mov	r3, r6
 80029a4:	f7fe f8c0 	bl	8000b28 <__aeabi_dcmpgt>
 80029a8:	2800      	cmp	r0, #0
 80029aa:	f040 828b 	bne.w	8002ec4 <_dtoa_r+0x93c>
 80029ae:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80029b2:	462a      	mov	r2, r5
 80029b4:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 80029b8:	f7fe f898 	bl	8000aec <__aeabi_dcmplt>
 80029bc:	2800      	cmp	r0, #0
 80029be:	f040 8128 	bne.w	8002c12 <_dtoa_r+0x68a>
 80029c2:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 80029c6:	e9cd 3402 	strd	r3, r4, [sp, #8]
 80029ca:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80029cc:	2b00      	cmp	r3, #0
 80029ce:	f2c0 815a 	blt.w	8002c86 <_dtoa_r+0x6fe>
 80029d2:	2f0e      	cmp	r7, #14
 80029d4:	f300 8157 	bgt.w	8002c86 <_dtoa_r+0x6fe>
 80029d8:	4b5a      	ldr	r3, [pc, #360]	@ (8002b44 <_dtoa_r+0x5bc>)
 80029da:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 80029de:	ed93 7b00 	vldr	d7, [r3]
 80029e2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80029e4:	2b00      	cmp	r3, #0
 80029e6:	ed8d 7b00 	vstr	d7, [sp]
 80029ea:	da03      	bge.n	80029f4 <_dtoa_r+0x46c>
 80029ec:	9b07      	ldr	r3, [sp, #28]
 80029ee:	2b00      	cmp	r3, #0
 80029f0:	f340 8101 	ble.w	8002bf6 <_dtoa_r+0x66e>
 80029f4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80029f8:	4656      	mov	r6, sl
 80029fa:	e9dd 2300 	ldrd	r2, r3, [sp]
 80029fe:	4620      	mov	r0, r4
 8002a00:	4629      	mov	r1, r5
 8002a02:	f7fd ff2b 	bl	800085c <__aeabi_ddiv>
 8002a06:	f7fe f8af 	bl	8000b68 <__aeabi_d2iz>
 8002a0a:	4680      	mov	r8, r0
 8002a0c:	f7fd fd92 	bl	8000534 <__aeabi_i2d>
 8002a10:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002a14:	f7fd fdf8 	bl	8000608 <__aeabi_dmul>
 8002a18:	4602      	mov	r2, r0
 8002a1a:	460b      	mov	r3, r1
 8002a1c:	4620      	mov	r0, r4
 8002a1e:	4629      	mov	r1, r5
 8002a20:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8002a24:	f7fd fc38 	bl	8000298 <__aeabi_dsub>
 8002a28:	f806 4b01 	strb.w	r4, [r6], #1
 8002a2c:	9d07      	ldr	r5, [sp, #28]
 8002a2e:	eba6 040a 	sub.w	r4, r6, sl
 8002a32:	42a5      	cmp	r5, r4
 8002a34:	4602      	mov	r2, r0
 8002a36:	460b      	mov	r3, r1
 8002a38:	f040 8117 	bne.w	8002c6a <_dtoa_r+0x6e2>
 8002a3c:	f7fd fc2e 	bl	800029c <__adddf3>
 8002a40:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002a44:	4604      	mov	r4, r0
 8002a46:	460d      	mov	r5, r1
 8002a48:	f7fe f86e 	bl	8000b28 <__aeabi_dcmpgt>
 8002a4c:	2800      	cmp	r0, #0
 8002a4e:	f040 80f9 	bne.w	8002c44 <_dtoa_r+0x6bc>
 8002a52:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002a56:	4620      	mov	r0, r4
 8002a58:	4629      	mov	r1, r5
 8002a5a:	f7fe f83d 	bl	8000ad8 <__aeabi_dcmpeq>
 8002a5e:	b118      	cbz	r0, 8002a68 <_dtoa_r+0x4e0>
 8002a60:	f018 0f01 	tst.w	r8, #1
 8002a64:	f040 80ee 	bne.w	8002c44 <_dtoa_r+0x6bc>
 8002a68:	4649      	mov	r1, r9
 8002a6a:	4658      	mov	r0, fp
 8002a6c:	f000 fc90 	bl	8003390 <_Bfree>
 8002a70:	2300      	movs	r3, #0
 8002a72:	7033      	strb	r3, [r6, #0]
 8002a74:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8002a76:	3701      	adds	r7, #1
 8002a78:	601f      	str	r7, [r3, #0]
 8002a7a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8002a7c:	2b00      	cmp	r3, #0
 8002a7e:	f000 831d 	beq.w	80030bc <_dtoa_r+0xb34>
 8002a82:	601e      	str	r6, [r3, #0]
 8002a84:	e31a      	b.n	80030bc <_dtoa_r+0xb34>
 8002a86:	07e2      	lsls	r2, r4, #31
 8002a88:	d505      	bpl.n	8002a96 <_dtoa_r+0x50e>
 8002a8a:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002a8e:	f7fd fdbb 	bl	8000608 <__aeabi_dmul>
 8002a92:	3601      	adds	r6, #1
 8002a94:	2301      	movs	r3, #1
 8002a96:	1064      	asrs	r4, r4, #1
 8002a98:	3508      	adds	r5, #8
 8002a9a:	e73f      	b.n	800291c <_dtoa_r+0x394>
 8002a9c:	2602      	movs	r6, #2
 8002a9e:	e742      	b.n	8002926 <_dtoa_r+0x39e>
 8002aa0:	9c07      	ldr	r4, [sp, #28]
 8002aa2:	9704      	str	r7, [sp, #16]
 8002aa4:	e761      	b.n	800296a <_dtoa_r+0x3e2>
 8002aa6:	4b27      	ldr	r3, [pc, #156]	@ (8002b44 <_dtoa_r+0x5bc>)
 8002aa8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8002aaa:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8002aae:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002ab2:	4454      	add	r4, sl
 8002ab4:	2900      	cmp	r1, #0
 8002ab6:	d053      	beq.n	8002b60 <_dtoa_r+0x5d8>
 8002ab8:	4928      	ldr	r1, [pc, #160]	@ (8002b5c <_dtoa_r+0x5d4>)
 8002aba:	2000      	movs	r0, #0
 8002abc:	f7fd fece 	bl	800085c <__aeabi_ddiv>
 8002ac0:	4633      	mov	r3, r6
 8002ac2:	462a      	mov	r2, r5
 8002ac4:	f7fd fbe8 	bl	8000298 <__aeabi_dsub>
 8002ac8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002acc:	4656      	mov	r6, sl
 8002ace:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ad2:	f7fe f849 	bl	8000b68 <__aeabi_d2iz>
 8002ad6:	4605      	mov	r5, r0
 8002ad8:	f7fd fd2c 	bl	8000534 <__aeabi_i2d>
 8002adc:	4602      	mov	r2, r0
 8002ade:	460b      	mov	r3, r1
 8002ae0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002ae4:	f7fd fbd8 	bl	8000298 <__aeabi_dsub>
 8002ae8:	3530      	adds	r5, #48	@ 0x30
 8002aea:	4602      	mov	r2, r0
 8002aec:	460b      	mov	r3, r1
 8002aee:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002af2:	f806 5b01 	strb.w	r5, [r6], #1
 8002af6:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002afa:	f7fd fff7 	bl	8000aec <__aeabi_dcmplt>
 8002afe:	2800      	cmp	r0, #0
 8002b00:	d171      	bne.n	8002be6 <_dtoa_r+0x65e>
 8002b02:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002b06:	4911      	ldr	r1, [pc, #68]	@ (8002b4c <_dtoa_r+0x5c4>)
 8002b08:	2000      	movs	r0, #0
 8002b0a:	f7fd fbc5 	bl	8000298 <__aeabi_dsub>
 8002b0e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002b12:	f7fd ffeb 	bl	8000aec <__aeabi_dcmplt>
 8002b16:	2800      	cmp	r0, #0
 8002b18:	f040 8095 	bne.w	8002c46 <_dtoa_r+0x6be>
 8002b1c:	42a6      	cmp	r6, r4
 8002b1e:	f43f af50 	beq.w	80029c2 <_dtoa_r+0x43a>
 8002b22:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002b26:	4b0a      	ldr	r3, [pc, #40]	@ (8002b50 <_dtoa_r+0x5c8>)
 8002b28:	2200      	movs	r2, #0
 8002b2a:	f7fd fd6d 	bl	8000608 <__aeabi_dmul>
 8002b2e:	4b08      	ldr	r3, [pc, #32]	@ (8002b50 <_dtoa_r+0x5c8>)
 8002b30:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002b34:	2200      	movs	r2, #0
 8002b36:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b3a:	f7fd fd65 	bl	8000608 <__aeabi_dmul>
 8002b3e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002b42:	e7c4      	b.n	8002ace <_dtoa_r+0x546>
 8002b44:	08004270 	.word	0x08004270
 8002b48:	08004248 	.word	0x08004248
 8002b4c:	3ff00000 	.word	0x3ff00000
 8002b50:	40240000 	.word	0x40240000
 8002b54:	401c0000 	.word	0x401c0000
 8002b58:	40140000 	.word	0x40140000
 8002b5c:	3fe00000 	.word	0x3fe00000
 8002b60:	4631      	mov	r1, r6
 8002b62:	4628      	mov	r0, r5
 8002b64:	f7fd fd50 	bl	8000608 <__aeabi_dmul>
 8002b68:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8002b6c:	9415      	str	r4, [sp, #84]	@ 0x54
 8002b6e:	4656      	mov	r6, sl
 8002b70:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b74:	f7fd fff8 	bl	8000b68 <__aeabi_d2iz>
 8002b78:	4605      	mov	r5, r0
 8002b7a:	f7fd fcdb 	bl	8000534 <__aeabi_i2d>
 8002b7e:	4602      	mov	r2, r0
 8002b80:	460b      	mov	r3, r1
 8002b82:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002b86:	f7fd fb87 	bl	8000298 <__aeabi_dsub>
 8002b8a:	3530      	adds	r5, #48	@ 0x30
 8002b8c:	f806 5b01 	strb.w	r5, [r6], #1
 8002b90:	4602      	mov	r2, r0
 8002b92:	460b      	mov	r3, r1
 8002b94:	42a6      	cmp	r6, r4
 8002b96:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8002b9a:	f04f 0200 	mov.w	r2, #0
 8002b9e:	d124      	bne.n	8002bea <_dtoa_r+0x662>
 8002ba0:	4bac      	ldr	r3, [pc, #688]	@ (8002e54 <_dtoa_r+0x8cc>)
 8002ba2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8002ba6:	f7fd fb79 	bl	800029c <__adddf3>
 8002baa:	4602      	mov	r2, r0
 8002bac:	460b      	mov	r3, r1
 8002bae:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bb2:	f7fd ffb9 	bl	8000b28 <__aeabi_dcmpgt>
 8002bb6:	2800      	cmp	r0, #0
 8002bb8:	d145      	bne.n	8002c46 <_dtoa_r+0x6be>
 8002bba:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8002bbe:	49a5      	ldr	r1, [pc, #660]	@ (8002e54 <_dtoa_r+0x8cc>)
 8002bc0:	2000      	movs	r0, #0
 8002bc2:	f7fd fb69 	bl	8000298 <__aeabi_dsub>
 8002bc6:	4602      	mov	r2, r0
 8002bc8:	460b      	mov	r3, r1
 8002bca:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002bce:	f7fd ff8d 	bl	8000aec <__aeabi_dcmplt>
 8002bd2:	2800      	cmp	r0, #0
 8002bd4:	f43f aef5 	beq.w	80029c2 <_dtoa_r+0x43a>
 8002bd8:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8002bda:	1e73      	subs	r3, r6, #1
 8002bdc:	9315      	str	r3, [sp, #84]	@ 0x54
 8002bde:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8002be2:	2b30      	cmp	r3, #48	@ 0x30
 8002be4:	d0f8      	beq.n	8002bd8 <_dtoa_r+0x650>
 8002be6:	9f04      	ldr	r7, [sp, #16]
 8002be8:	e73e      	b.n	8002a68 <_dtoa_r+0x4e0>
 8002bea:	4b9b      	ldr	r3, [pc, #620]	@ (8002e58 <_dtoa_r+0x8d0>)
 8002bec:	f7fd fd0c 	bl	8000608 <__aeabi_dmul>
 8002bf0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002bf4:	e7bc      	b.n	8002b70 <_dtoa_r+0x5e8>
 8002bf6:	d10c      	bne.n	8002c12 <_dtoa_r+0x68a>
 8002bf8:	4b98      	ldr	r3, [pc, #608]	@ (8002e5c <_dtoa_r+0x8d4>)
 8002bfa:	2200      	movs	r2, #0
 8002bfc:	e9dd 0100 	ldrd	r0, r1, [sp]
 8002c00:	f7fd fd02 	bl	8000608 <__aeabi_dmul>
 8002c04:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002c08:	f7fd ff84 	bl	8000b14 <__aeabi_dcmpge>
 8002c0c:	2800      	cmp	r0, #0
 8002c0e:	f000 8157 	beq.w	8002ec0 <_dtoa_r+0x938>
 8002c12:	2400      	movs	r4, #0
 8002c14:	4625      	mov	r5, r4
 8002c16:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8002c18:	43db      	mvns	r3, r3
 8002c1a:	9304      	str	r3, [sp, #16]
 8002c1c:	4656      	mov	r6, sl
 8002c1e:	2700      	movs	r7, #0
 8002c20:	4621      	mov	r1, r4
 8002c22:	4658      	mov	r0, fp
 8002c24:	f000 fbb4 	bl	8003390 <_Bfree>
 8002c28:	2d00      	cmp	r5, #0
 8002c2a:	d0dc      	beq.n	8002be6 <_dtoa_r+0x65e>
 8002c2c:	b12f      	cbz	r7, 8002c3a <_dtoa_r+0x6b2>
 8002c2e:	42af      	cmp	r7, r5
 8002c30:	d003      	beq.n	8002c3a <_dtoa_r+0x6b2>
 8002c32:	4639      	mov	r1, r7
 8002c34:	4658      	mov	r0, fp
 8002c36:	f000 fbab 	bl	8003390 <_Bfree>
 8002c3a:	4629      	mov	r1, r5
 8002c3c:	4658      	mov	r0, fp
 8002c3e:	f000 fba7 	bl	8003390 <_Bfree>
 8002c42:	e7d0      	b.n	8002be6 <_dtoa_r+0x65e>
 8002c44:	9704      	str	r7, [sp, #16]
 8002c46:	4633      	mov	r3, r6
 8002c48:	461e      	mov	r6, r3
 8002c4a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002c4e:	2a39      	cmp	r2, #57	@ 0x39
 8002c50:	d107      	bne.n	8002c62 <_dtoa_r+0x6da>
 8002c52:	459a      	cmp	sl, r3
 8002c54:	d1f8      	bne.n	8002c48 <_dtoa_r+0x6c0>
 8002c56:	9a04      	ldr	r2, [sp, #16]
 8002c58:	3201      	adds	r2, #1
 8002c5a:	9204      	str	r2, [sp, #16]
 8002c5c:	2230      	movs	r2, #48	@ 0x30
 8002c5e:	f88a 2000 	strb.w	r2, [sl]
 8002c62:	781a      	ldrb	r2, [r3, #0]
 8002c64:	3201      	adds	r2, #1
 8002c66:	701a      	strb	r2, [r3, #0]
 8002c68:	e7bd      	b.n	8002be6 <_dtoa_r+0x65e>
 8002c6a:	4b7b      	ldr	r3, [pc, #492]	@ (8002e58 <_dtoa_r+0x8d0>)
 8002c6c:	2200      	movs	r2, #0
 8002c6e:	f7fd fccb 	bl	8000608 <__aeabi_dmul>
 8002c72:	2200      	movs	r2, #0
 8002c74:	2300      	movs	r3, #0
 8002c76:	4604      	mov	r4, r0
 8002c78:	460d      	mov	r5, r1
 8002c7a:	f7fd ff2d 	bl	8000ad8 <__aeabi_dcmpeq>
 8002c7e:	2800      	cmp	r0, #0
 8002c80:	f43f aebb 	beq.w	80029fa <_dtoa_r+0x472>
 8002c84:	e6f0      	b.n	8002a68 <_dtoa_r+0x4e0>
 8002c86:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8002c88:	2a00      	cmp	r2, #0
 8002c8a:	f000 80db 	beq.w	8002e44 <_dtoa_r+0x8bc>
 8002c8e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8002c90:	2a01      	cmp	r2, #1
 8002c92:	f300 80bf 	bgt.w	8002e14 <_dtoa_r+0x88c>
 8002c96:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8002c98:	2a00      	cmp	r2, #0
 8002c9a:	f000 80b7 	beq.w	8002e0c <_dtoa_r+0x884>
 8002c9e:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8002ca2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002ca4:	4646      	mov	r6, r8
 8002ca6:	9a08      	ldr	r2, [sp, #32]
 8002ca8:	2101      	movs	r1, #1
 8002caa:	441a      	add	r2, r3
 8002cac:	4658      	mov	r0, fp
 8002cae:	4498      	add	r8, r3
 8002cb0:	9208      	str	r2, [sp, #32]
 8002cb2:	f000 fc21 	bl	80034f8 <__i2b>
 8002cb6:	4605      	mov	r5, r0
 8002cb8:	b15e      	cbz	r6, 8002cd2 <_dtoa_r+0x74a>
 8002cba:	9b08      	ldr	r3, [sp, #32]
 8002cbc:	2b00      	cmp	r3, #0
 8002cbe:	dd08      	ble.n	8002cd2 <_dtoa_r+0x74a>
 8002cc0:	42b3      	cmp	r3, r6
 8002cc2:	9a08      	ldr	r2, [sp, #32]
 8002cc4:	bfa8      	it	ge
 8002cc6:	4633      	movge	r3, r6
 8002cc8:	eba8 0803 	sub.w	r8, r8, r3
 8002ccc:	1af6      	subs	r6, r6, r3
 8002cce:	1ad3      	subs	r3, r2, r3
 8002cd0:	9308      	str	r3, [sp, #32]
 8002cd2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002cd4:	b1f3      	cbz	r3, 8002d14 <_dtoa_r+0x78c>
 8002cd6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002cd8:	2b00      	cmp	r3, #0
 8002cda:	f000 80b7 	beq.w	8002e4c <_dtoa_r+0x8c4>
 8002cde:	b18c      	cbz	r4, 8002d04 <_dtoa_r+0x77c>
 8002ce0:	4629      	mov	r1, r5
 8002ce2:	4622      	mov	r2, r4
 8002ce4:	4658      	mov	r0, fp
 8002ce6:	f000 fcc7 	bl	8003678 <__pow5mult>
 8002cea:	464a      	mov	r2, r9
 8002cec:	4601      	mov	r1, r0
 8002cee:	4605      	mov	r5, r0
 8002cf0:	4658      	mov	r0, fp
 8002cf2:	f000 fc17 	bl	8003524 <__multiply>
 8002cf6:	4649      	mov	r1, r9
 8002cf8:	9004      	str	r0, [sp, #16]
 8002cfa:	4658      	mov	r0, fp
 8002cfc:	f000 fb48 	bl	8003390 <_Bfree>
 8002d00:	9b04      	ldr	r3, [sp, #16]
 8002d02:	4699      	mov	r9, r3
 8002d04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002d06:	1b1a      	subs	r2, r3, r4
 8002d08:	d004      	beq.n	8002d14 <_dtoa_r+0x78c>
 8002d0a:	4649      	mov	r1, r9
 8002d0c:	4658      	mov	r0, fp
 8002d0e:	f000 fcb3 	bl	8003678 <__pow5mult>
 8002d12:	4681      	mov	r9, r0
 8002d14:	2101      	movs	r1, #1
 8002d16:	4658      	mov	r0, fp
 8002d18:	f000 fbee 	bl	80034f8 <__i2b>
 8002d1c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002d1e:	4604      	mov	r4, r0
 8002d20:	2b00      	cmp	r3, #0
 8002d22:	f000 81cf 	beq.w	80030c4 <_dtoa_r+0xb3c>
 8002d26:	461a      	mov	r2, r3
 8002d28:	4601      	mov	r1, r0
 8002d2a:	4658      	mov	r0, fp
 8002d2c:	f000 fca4 	bl	8003678 <__pow5mult>
 8002d30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002d32:	2b01      	cmp	r3, #1
 8002d34:	4604      	mov	r4, r0
 8002d36:	f300 8095 	bgt.w	8002e64 <_dtoa_r+0x8dc>
 8002d3a:	9b02      	ldr	r3, [sp, #8]
 8002d3c:	2b00      	cmp	r3, #0
 8002d3e:	f040 8087 	bne.w	8002e50 <_dtoa_r+0x8c8>
 8002d42:	9b03      	ldr	r3, [sp, #12]
 8002d44:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002d48:	2b00      	cmp	r3, #0
 8002d4a:	f040 8089 	bne.w	8002e60 <_dtoa_r+0x8d8>
 8002d4e:	9b03      	ldr	r3, [sp, #12]
 8002d50:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8002d54:	0d1b      	lsrs	r3, r3, #20
 8002d56:	051b      	lsls	r3, r3, #20
 8002d58:	b12b      	cbz	r3, 8002d66 <_dtoa_r+0x7de>
 8002d5a:	9b08      	ldr	r3, [sp, #32]
 8002d5c:	3301      	adds	r3, #1
 8002d5e:	9308      	str	r3, [sp, #32]
 8002d60:	f108 0801 	add.w	r8, r8, #1
 8002d64:	2301      	movs	r3, #1
 8002d66:	930a      	str	r3, [sp, #40]	@ 0x28
 8002d68:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	f000 81b0 	beq.w	80030d0 <_dtoa_r+0xb48>
 8002d70:	6923      	ldr	r3, [r4, #16]
 8002d72:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8002d76:	6918      	ldr	r0, [r3, #16]
 8002d78:	f000 fb72 	bl	8003460 <__hi0bits>
 8002d7c:	f1c0 0020 	rsb	r0, r0, #32
 8002d80:	9b08      	ldr	r3, [sp, #32]
 8002d82:	4418      	add	r0, r3
 8002d84:	f010 001f 	ands.w	r0, r0, #31
 8002d88:	d077      	beq.n	8002e7a <_dtoa_r+0x8f2>
 8002d8a:	f1c0 0320 	rsb	r3, r0, #32
 8002d8e:	2b04      	cmp	r3, #4
 8002d90:	dd6b      	ble.n	8002e6a <_dtoa_r+0x8e2>
 8002d92:	9b08      	ldr	r3, [sp, #32]
 8002d94:	f1c0 001c 	rsb	r0, r0, #28
 8002d98:	4403      	add	r3, r0
 8002d9a:	4480      	add	r8, r0
 8002d9c:	4406      	add	r6, r0
 8002d9e:	9308      	str	r3, [sp, #32]
 8002da0:	f1b8 0f00 	cmp.w	r8, #0
 8002da4:	dd05      	ble.n	8002db2 <_dtoa_r+0x82a>
 8002da6:	4649      	mov	r1, r9
 8002da8:	4642      	mov	r2, r8
 8002daa:	4658      	mov	r0, fp
 8002dac:	f000 fcbe 	bl	800372c <__lshift>
 8002db0:	4681      	mov	r9, r0
 8002db2:	9b08      	ldr	r3, [sp, #32]
 8002db4:	2b00      	cmp	r3, #0
 8002db6:	dd05      	ble.n	8002dc4 <_dtoa_r+0x83c>
 8002db8:	4621      	mov	r1, r4
 8002dba:	461a      	mov	r2, r3
 8002dbc:	4658      	mov	r0, fp
 8002dbe:	f000 fcb5 	bl	800372c <__lshift>
 8002dc2:	4604      	mov	r4, r0
 8002dc4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8002dc6:	2b00      	cmp	r3, #0
 8002dc8:	d059      	beq.n	8002e7e <_dtoa_r+0x8f6>
 8002dca:	4621      	mov	r1, r4
 8002dcc:	4648      	mov	r0, r9
 8002dce:	f000 fd19 	bl	8003804 <__mcmp>
 8002dd2:	2800      	cmp	r0, #0
 8002dd4:	da53      	bge.n	8002e7e <_dtoa_r+0x8f6>
 8002dd6:	1e7b      	subs	r3, r7, #1
 8002dd8:	9304      	str	r3, [sp, #16]
 8002dda:	4649      	mov	r1, r9
 8002ddc:	2300      	movs	r3, #0
 8002dde:	220a      	movs	r2, #10
 8002de0:	4658      	mov	r0, fp
 8002de2:	f000 faf7 	bl	80033d4 <__multadd>
 8002de6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002de8:	4681      	mov	r9, r0
 8002dea:	2b00      	cmp	r3, #0
 8002dec:	f000 8172 	beq.w	80030d4 <_dtoa_r+0xb4c>
 8002df0:	2300      	movs	r3, #0
 8002df2:	4629      	mov	r1, r5
 8002df4:	220a      	movs	r2, #10
 8002df6:	4658      	mov	r0, fp
 8002df8:	f000 faec 	bl	80033d4 <__multadd>
 8002dfc:	9b00      	ldr	r3, [sp, #0]
 8002dfe:	2b00      	cmp	r3, #0
 8002e00:	4605      	mov	r5, r0
 8002e02:	dc67      	bgt.n	8002ed4 <_dtoa_r+0x94c>
 8002e04:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002e06:	2b02      	cmp	r3, #2
 8002e08:	dc41      	bgt.n	8002e8e <_dtoa_r+0x906>
 8002e0a:	e063      	b.n	8002ed4 <_dtoa_r+0x94c>
 8002e0c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8002e0e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8002e12:	e746      	b.n	8002ca2 <_dtoa_r+0x71a>
 8002e14:	9b07      	ldr	r3, [sp, #28]
 8002e16:	1e5c      	subs	r4, r3, #1
 8002e18:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002e1a:	42a3      	cmp	r3, r4
 8002e1c:	bfbf      	itttt	lt
 8002e1e:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8002e20:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8002e22:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8002e24:	1ae3      	sublt	r3, r4, r3
 8002e26:	bfb4      	ite	lt
 8002e28:	18d2      	addlt	r2, r2, r3
 8002e2a:	1b1c      	subge	r4, r3, r4
 8002e2c:	9b07      	ldr	r3, [sp, #28]
 8002e2e:	bfbc      	itt	lt
 8002e30:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8002e32:	2400      	movlt	r4, #0
 8002e34:	2b00      	cmp	r3, #0
 8002e36:	bfb5      	itete	lt
 8002e38:	eba8 0603 	sublt.w	r6, r8, r3
 8002e3c:	9b07      	ldrge	r3, [sp, #28]
 8002e3e:	2300      	movlt	r3, #0
 8002e40:	4646      	movge	r6, r8
 8002e42:	e730      	b.n	8002ca6 <_dtoa_r+0x71e>
 8002e44:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8002e46:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8002e48:	4646      	mov	r6, r8
 8002e4a:	e735      	b.n	8002cb8 <_dtoa_r+0x730>
 8002e4c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8002e4e:	e75c      	b.n	8002d0a <_dtoa_r+0x782>
 8002e50:	2300      	movs	r3, #0
 8002e52:	e788      	b.n	8002d66 <_dtoa_r+0x7de>
 8002e54:	3fe00000 	.word	0x3fe00000
 8002e58:	40240000 	.word	0x40240000
 8002e5c:	40140000 	.word	0x40140000
 8002e60:	9b02      	ldr	r3, [sp, #8]
 8002e62:	e780      	b.n	8002d66 <_dtoa_r+0x7de>
 8002e64:	2300      	movs	r3, #0
 8002e66:	930a      	str	r3, [sp, #40]	@ 0x28
 8002e68:	e782      	b.n	8002d70 <_dtoa_r+0x7e8>
 8002e6a:	d099      	beq.n	8002da0 <_dtoa_r+0x818>
 8002e6c:	9a08      	ldr	r2, [sp, #32]
 8002e6e:	331c      	adds	r3, #28
 8002e70:	441a      	add	r2, r3
 8002e72:	4498      	add	r8, r3
 8002e74:	441e      	add	r6, r3
 8002e76:	9208      	str	r2, [sp, #32]
 8002e78:	e792      	b.n	8002da0 <_dtoa_r+0x818>
 8002e7a:	4603      	mov	r3, r0
 8002e7c:	e7f6      	b.n	8002e6c <_dtoa_r+0x8e4>
 8002e7e:	9b07      	ldr	r3, [sp, #28]
 8002e80:	9704      	str	r7, [sp, #16]
 8002e82:	2b00      	cmp	r3, #0
 8002e84:	dc20      	bgt.n	8002ec8 <_dtoa_r+0x940>
 8002e86:	9300      	str	r3, [sp, #0]
 8002e88:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002e8a:	2b02      	cmp	r3, #2
 8002e8c:	dd1e      	ble.n	8002ecc <_dtoa_r+0x944>
 8002e8e:	9b00      	ldr	r3, [sp, #0]
 8002e90:	2b00      	cmp	r3, #0
 8002e92:	f47f aec0 	bne.w	8002c16 <_dtoa_r+0x68e>
 8002e96:	4621      	mov	r1, r4
 8002e98:	2205      	movs	r2, #5
 8002e9a:	4658      	mov	r0, fp
 8002e9c:	f000 fa9a 	bl	80033d4 <__multadd>
 8002ea0:	4601      	mov	r1, r0
 8002ea2:	4604      	mov	r4, r0
 8002ea4:	4648      	mov	r0, r9
 8002ea6:	f000 fcad 	bl	8003804 <__mcmp>
 8002eaa:	2800      	cmp	r0, #0
 8002eac:	f77f aeb3 	ble.w	8002c16 <_dtoa_r+0x68e>
 8002eb0:	4656      	mov	r6, sl
 8002eb2:	2331      	movs	r3, #49	@ 0x31
 8002eb4:	f806 3b01 	strb.w	r3, [r6], #1
 8002eb8:	9b04      	ldr	r3, [sp, #16]
 8002eba:	3301      	adds	r3, #1
 8002ebc:	9304      	str	r3, [sp, #16]
 8002ebe:	e6ae      	b.n	8002c1e <_dtoa_r+0x696>
 8002ec0:	9c07      	ldr	r4, [sp, #28]
 8002ec2:	9704      	str	r7, [sp, #16]
 8002ec4:	4625      	mov	r5, r4
 8002ec6:	e7f3      	b.n	8002eb0 <_dtoa_r+0x928>
 8002ec8:	9b07      	ldr	r3, [sp, #28]
 8002eca:	9300      	str	r3, [sp, #0]
 8002ecc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	f000 8104 	beq.w	80030dc <_dtoa_r+0xb54>
 8002ed4:	2e00      	cmp	r6, #0
 8002ed6:	dd05      	ble.n	8002ee4 <_dtoa_r+0x95c>
 8002ed8:	4629      	mov	r1, r5
 8002eda:	4632      	mov	r2, r6
 8002edc:	4658      	mov	r0, fp
 8002ede:	f000 fc25 	bl	800372c <__lshift>
 8002ee2:	4605      	mov	r5, r0
 8002ee4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002ee6:	2b00      	cmp	r3, #0
 8002ee8:	d05a      	beq.n	8002fa0 <_dtoa_r+0xa18>
 8002eea:	6869      	ldr	r1, [r5, #4]
 8002eec:	4658      	mov	r0, fp
 8002eee:	f000 fa0f 	bl	8003310 <_Balloc>
 8002ef2:	4606      	mov	r6, r0
 8002ef4:	b928      	cbnz	r0, 8002f02 <_dtoa_r+0x97a>
 8002ef6:	4b84      	ldr	r3, [pc, #528]	@ (8003108 <_dtoa_r+0xb80>)
 8002ef8:	4602      	mov	r2, r0
 8002efa:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8002efe:	f7ff bb5a 	b.w	80025b6 <_dtoa_r+0x2e>
 8002f02:	692a      	ldr	r2, [r5, #16]
 8002f04:	3202      	adds	r2, #2
 8002f06:	0092      	lsls	r2, r2, #2
 8002f08:	f105 010c 	add.w	r1, r5, #12
 8002f0c:	300c      	adds	r0, #12
 8002f0e:	f001 f803 	bl	8003f18 <memcpy>
 8002f12:	2201      	movs	r2, #1
 8002f14:	4631      	mov	r1, r6
 8002f16:	4658      	mov	r0, fp
 8002f18:	f000 fc08 	bl	800372c <__lshift>
 8002f1c:	f10a 0301 	add.w	r3, sl, #1
 8002f20:	9307      	str	r3, [sp, #28]
 8002f22:	9b00      	ldr	r3, [sp, #0]
 8002f24:	4453      	add	r3, sl
 8002f26:	930b      	str	r3, [sp, #44]	@ 0x2c
 8002f28:	9b02      	ldr	r3, [sp, #8]
 8002f2a:	f003 0301 	and.w	r3, r3, #1
 8002f2e:	462f      	mov	r7, r5
 8002f30:	930a      	str	r3, [sp, #40]	@ 0x28
 8002f32:	4605      	mov	r5, r0
 8002f34:	9b07      	ldr	r3, [sp, #28]
 8002f36:	4621      	mov	r1, r4
 8002f38:	3b01      	subs	r3, #1
 8002f3a:	4648      	mov	r0, r9
 8002f3c:	9300      	str	r3, [sp, #0]
 8002f3e:	f7ff fa9a 	bl	8002476 <quorem>
 8002f42:	4639      	mov	r1, r7
 8002f44:	9002      	str	r0, [sp, #8]
 8002f46:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8002f4a:	4648      	mov	r0, r9
 8002f4c:	f000 fc5a 	bl	8003804 <__mcmp>
 8002f50:	462a      	mov	r2, r5
 8002f52:	9008      	str	r0, [sp, #32]
 8002f54:	4621      	mov	r1, r4
 8002f56:	4658      	mov	r0, fp
 8002f58:	f000 fc70 	bl	800383c <__mdiff>
 8002f5c:	68c2      	ldr	r2, [r0, #12]
 8002f5e:	4606      	mov	r6, r0
 8002f60:	bb02      	cbnz	r2, 8002fa4 <_dtoa_r+0xa1c>
 8002f62:	4601      	mov	r1, r0
 8002f64:	4648      	mov	r0, r9
 8002f66:	f000 fc4d 	bl	8003804 <__mcmp>
 8002f6a:	4602      	mov	r2, r0
 8002f6c:	4631      	mov	r1, r6
 8002f6e:	4658      	mov	r0, fp
 8002f70:	920e      	str	r2, [sp, #56]	@ 0x38
 8002f72:	f000 fa0d 	bl	8003390 <_Bfree>
 8002f76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8002f78:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8002f7a:	9e07      	ldr	r6, [sp, #28]
 8002f7c:	ea43 0102 	orr.w	r1, r3, r2
 8002f80:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8002f82:	4319      	orrs	r1, r3
 8002f84:	d110      	bne.n	8002fa8 <_dtoa_r+0xa20>
 8002f86:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002f8a:	d029      	beq.n	8002fe0 <_dtoa_r+0xa58>
 8002f8c:	9b08      	ldr	r3, [sp, #32]
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	dd02      	ble.n	8002f98 <_dtoa_r+0xa10>
 8002f92:	9b02      	ldr	r3, [sp, #8]
 8002f94:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 8002f98:	9b00      	ldr	r3, [sp, #0]
 8002f9a:	f883 8000 	strb.w	r8, [r3]
 8002f9e:	e63f      	b.n	8002c20 <_dtoa_r+0x698>
 8002fa0:	4628      	mov	r0, r5
 8002fa2:	e7bb      	b.n	8002f1c <_dtoa_r+0x994>
 8002fa4:	2201      	movs	r2, #1
 8002fa6:	e7e1      	b.n	8002f6c <_dtoa_r+0x9e4>
 8002fa8:	9b08      	ldr	r3, [sp, #32]
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	db04      	blt.n	8002fb8 <_dtoa_r+0xa30>
 8002fae:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8002fb0:	430b      	orrs	r3, r1
 8002fb2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8002fb4:	430b      	orrs	r3, r1
 8002fb6:	d120      	bne.n	8002ffa <_dtoa_r+0xa72>
 8002fb8:	2a00      	cmp	r2, #0
 8002fba:	dded      	ble.n	8002f98 <_dtoa_r+0xa10>
 8002fbc:	4649      	mov	r1, r9
 8002fbe:	2201      	movs	r2, #1
 8002fc0:	4658      	mov	r0, fp
 8002fc2:	f000 fbb3 	bl	800372c <__lshift>
 8002fc6:	4621      	mov	r1, r4
 8002fc8:	4681      	mov	r9, r0
 8002fca:	f000 fc1b 	bl	8003804 <__mcmp>
 8002fce:	2800      	cmp	r0, #0
 8002fd0:	dc03      	bgt.n	8002fda <_dtoa_r+0xa52>
 8002fd2:	d1e1      	bne.n	8002f98 <_dtoa_r+0xa10>
 8002fd4:	f018 0f01 	tst.w	r8, #1
 8002fd8:	d0de      	beq.n	8002f98 <_dtoa_r+0xa10>
 8002fda:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8002fde:	d1d8      	bne.n	8002f92 <_dtoa_r+0xa0a>
 8002fe0:	9a00      	ldr	r2, [sp, #0]
 8002fe2:	2339      	movs	r3, #57	@ 0x39
 8002fe4:	7013      	strb	r3, [r2, #0]
 8002fe6:	4633      	mov	r3, r6
 8002fe8:	461e      	mov	r6, r3
 8002fea:	3b01      	subs	r3, #1
 8002fec:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8002ff0:	2a39      	cmp	r2, #57	@ 0x39
 8002ff2:	d052      	beq.n	800309a <_dtoa_r+0xb12>
 8002ff4:	3201      	adds	r2, #1
 8002ff6:	701a      	strb	r2, [r3, #0]
 8002ff8:	e612      	b.n	8002c20 <_dtoa_r+0x698>
 8002ffa:	2a00      	cmp	r2, #0
 8002ffc:	dd07      	ble.n	800300e <_dtoa_r+0xa86>
 8002ffe:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8003002:	d0ed      	beq.n	8002fe0 <_dtoa_r+0xa58>
 8003004:	9a00      	ldr	r2, [sp, #0]
 8003006:	f108 0301 	add.w	r3, r8, #1
 800300a:	7013      	strb	r3, [r2, #0]
 800300c:	e608      	b.n	8002c20 <_dtoa_r+0x698>
 800300e:	9b07      	ldr	r3, [sp, #28]
 8003010:	9a07      	ldr	r2, [sp, #28]
 8003012:	f803 8c01 	strb.w	r8, [r3, #-1]
 8003016:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8003018:	4293      	cmp	r3, r2
 800301a:	d028      	beq.n	800306e <_dtoa_r+0xae6>
 800301c:	4649      	mov	r1, r9
 800301e:	2300      	movs	r3, #0
 8003020:	220a      	movs	r2, #10
 8003022:	4658      	mov	r0, fp
 8003024:	f000 f9d6 	bl	80033d4 <__multadd>
 8003028:	42af      	cmp	r7, r5
 800302a:	4681      	mov	r9, r0
 800302c:	f04f 0300 	mov.w	r3, #0
 8003030:	f04f 020a 	mov.w	r2, #10
 8003034:	4639      	mov	r1, r7
 8003036:	4658      	mov	r0, fp
 8003038:	d107      	bne.n	800304a <_dtoa_r+0xac2>
 800303a:	f000 f9cb 	bl	80033d4 <__multadd>
 800303e:	4607      	mov	r7, r0
 8003040:	4605      	mov	r5, r0
 8003042:	9b07      	ldr	r3, [sp, #28]
 8003044:	3301      	adds	r3, #1
 8003046:	9307      	str	r3, [sp, #28]
 8003048:	e774      	b.n	8002f34 <_dtoa_r+0x9ac>
 800304a:	f000 f9c3 	bl	80033d4 <__multadd>
 800304e:	4629      	mov	r1, r5
 8003050:	4607      	mov	r7, r0
 8003052:	2300      	movs	r3, #0
 8003054:	220a      	movs	r2, #10
 8003056:	4658      	mov	r0, fp
 8003058:	f000 f9bc 	bl	80033d4 <__multadd>
 800305c:	4605      	mov	r5, r0
 800305e:	e7f0      	b.n	8003042 <_dtoa_r+0xaba>
 8003060:	9b00      	ldr	r3, [sp, #0]
 8003062:	2b00      	cmp	r3, #0
 8003064:	bfcc      	ite	gt
 8003066:	461e      	movgt	r6, r3
 8003068:	2601      	movle	r6, #1
 800306a:	4456      	add	r6, sl
 800306c:	2700      	movs	r7, #0
 800306e:	4649      	mov	r1, r9
 8003070:	2201      	movs	r2, #1
 8003072:	4658      	mov	r0, fp
 8003074:	f000 fb5a 	bl	800372c <__lshift>
 8003078:	4621      	mov	r1, r4
 800307a:	4681      	mov	r9, r0
 800307c:	f000 fbc2 	bl	8003804 <__mcmp>
 8003080:	2800      	cmp	r0, #0
 8003082:	dcb0      	bgt.n	8002fe6 <_dtoa_r+0xa5e>
 8003084:	d102      	bne.n	800308c <_dtoa_r+0xb04>
 8003086:	f018 0f01 	tst.w	r8, #1
 800308a:	d1ac      	bne.n	8002fe6 <_dtoa_r+0xa5e>
 800308c:	4633      	mov	r3, r6
 800308e:	461e      	mov	r6, r3
 8003090:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003094:	2a30      	cmp	r2, #48	@ 0x30
 8003096:	d0fa      	beq.n	800308e <_dtoa_r+0xb06>
 8003098:	e5c2      	b.n	8002c20 <_dtoa_r+0x698>
 800309a:	459a      	cmp	sl, r3
 800309c:	d1a4      	bne.n	8002fe8 <_dtoa_r+0xa60>
 800309e:	9b04      	ldr	r3, [sp, #16]
 80030a0:	3301      	adds	r3, #1
 80030a2:	9304      	str	r3, [sp, #16]
 80030a4:	2331      	movs	r3, #49	@ 0x31
 80030a6:	f88a 3000 	strb.w	r3, [sl]
 80030aa:	e5b9      	b.n	8002c20 <_dtoa_r+0x698>
 80030ac:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80030ae:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 800310c <_dtoa_r+0xb84>
 80030b2:	b11b      	cbz	r3, 80030bc <_dtoa_r+0xb34>
 80030b4:	f10a 0308 	add.w	r3, sl, #8
 80030b8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80030ba:	6013      	str	r3, [r2, #0]
 80030bc:	4650      	mov	r0, sl
 80030be:	b019      	add	sp, #100	@ 0x64
 80030c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80030c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80030c6:	2b01      	cmp	r3, #1
 80030c8:	f77f ae37 	ble.w	8002d3a <_dtoa_r+0x7b2>
 80030cc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80030ce:	930a      	str	r3, [sp, #40]	@ 0x28
 80030d0:	2001      	movs	r0, #1
 80030d2:	e655      	b.n	8002d80 <_dtoa_r+0x7f8>
 80030d4:	9b00      	ldr	r3, [sp, #0]
 80030d6:	2b00      	cmp	r3, #0
 80030d8:	f77f aed6 	ble.w	8002e88 <_dtoa_r+0x900>
 80030dc:	4656      	mov	r6, sl
 80030de:	4621      	mov	r1, r4
 80030e0:	4648      	mov	r0, r9
 80030e2:	f7ff f9c8 	bl	8002476 <quorem>
 80030e6:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80030ea:	f806 8b01 	strb.w	r8, [r6], #1
 80030ee:	9b00      	ldr	r3, [sp, #0]
 80030f0:	eba6 020a 	sub.w	r2, r6, sl
 80030f4:	4293      	cmp	r3, r2
 80030f6:	ddb3      	ble.n	8003060 <_dtoa_r+0xad8>
 80030f8:	4649      	mov	r1, r9
 80030fa:	2300      	movs	r3, #0
 80030fc:	220a      	movs	r2, #10
 80030fe:	4658      	mov	r0, fp
 8003100:	f000 f968 	bl	80033d4 <__multadd>
 8003104:	4681      	mov	r9, r0
 8003106:	e7ea      	b.n	80030de <_dtoa_r+0xb56>
 8003108:	080041ce 	.word	0x080041ce
 800310c:	08004152 	.word	0x08004152

08003110 <_free_r>:
 8003110:	b538      	push	{r3, r4, r5, lr}
 8003112:	4605      	mov	r5, r0
 8003114:	2900      	cmp	r1, #0
 8003116:	d041      	beq.n	800319c <_free_r+0x8c>
 8003118:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800311c:	1f0c      	subs	r4, r1, #4
 800311e:	2b00      	cmp	r3, #0
 8003120:	bfb8      	it	lt
 8003122:	18e4      	addlt	r4, r4, r3
 8003124:	f000 f8e8 	bl	80032f8 <__malloc_lock>
 8003128:	4a1d      	ldr	r2, [pc, #116]	@ (80031a0 <_free_r+0x90>)
 800312a:	6813      	ldr	r3, [r2, #0]
 800312c:	b933      	cbnz	r3, 800313c <_free_r+0x2c>
 800312e:	6063      	str	r3, [r4, #4]
 8003130:	6014      	str	r4, [r2, #0]
 8003132:	4628      	mov	r0, r5
 8003134:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003138:	f000 b8e4 	b.w	8003304 <__malloc_unlock>
 800313c:	42a3      	cmp	r3, r4
 800313e:	d908      	bls.n	8003152 <_free_r+0x42>
 8003140:	6820      	ldr	r0, [r4, #0]
 8003142:	1821      	adds	r1, r4, r0
 8003144:	428b      	cmp	r3, r1
 8003146:	bf01      	itttt	eq
 8003148:	6819      	ldreq	r1, [r3, #0]
 800314a:	685b      	ldreq	r3, [r3, #4]
 800314c:	1809      	addeq	r1, r1, r0
 800314e:	6021      	streq	r1, [r4, #0]
 8003150:	e7ed      	b.n	800312e <_free_r+0x1e>
 8003152:	461a      	mov	r2, r3
 8003154:	685b      	ldr	r3, [r3, #4]
 8003156:	b10b      	cbz	r3, 800315c <_free_r+0x4c>
 8003158:	42a3      	cmp	r3, r4
 800315a:	d9fa      	bls.n	8003152 <_free_r+0x42>
 800315c:	6811      	ldr	r1, [r2, #0]
 800315e:	1850      	adds	r0, r2, r1
 8003160:	42a0      	cmp	r0, r4
 8003162:	d10b      	bne.n	800317c <_free_r+0x6c>
 8003164:	6820      	ldr	r0, [r4, #0]
 8003166:	4401      	add	r1, r0
 8003168:	1850      	adds	r0, r2, r1
 800316a:	4283      	cmp	r3, r0
 800316c:	6011      	str	r1, [r2, #0]
 800316e:	d1e0      	bne.n	8003132 <_free_r+0x22>
 8003170:	6818      	ldr	r0, [r3, #0]
 8003172:	685b      	ldr	r3, [r3, #4]
 8003174:	6053      	str	r3, [r2, #4]
 8003176:	4408      	add	r0, r1
 8003178:	6010      	str	r0, [r2, #0]
 800317a:	e7da      	b.n	8003132 <_free_r+0x22>
 800317c:	d902      	bls.n	8003184 <_free_r+0x74>
 800317e:	230c      	movs	r3, #12
 8003180:	602b      	str	r3, [r5, #0]
 8003182:	e7d6      	b.n	8003132 <_free_r+0x22>
 8003184:	6820      	ldr	r0, [r4, #0]
 8003186:	1821      	adds	r1, r4, r0
 8003188:	428b      	cmp	r3, r1
 800318a:	bf04      	itt	eq
 800318c:	6819      	ldreq	r1, [r3, #0]
 800318e:	685b      	ldreq	r3, [r3, #4]
 8003190:	6063      	str	r3, [r4, #4]
 8003192:	bf04      	itt	eq
 8003194:	1809      	addeq	r1, r1, r0
 8003196:	6021      	streq	r1, [r4, #0]
 8003198:	6054      	str	r4, [r2, #4]
 800319a:	e7ca      	b.n	8003132 <_free_r+0x22>
 800319c:	bd38      	pop	{r3, r4, r5, pc}
 800319e:	bf00      	nop
 80031a0:	20000330 	.word	0x20000330

080031a4 <malloc>:
 80031a4:	4b02      	ldr	r3, [pc, #8]	@ (80031b0 <malloc+0xc>)
 80031a6:	4601      	mov	r1, r0
 80031a8:	6818      	ldr	r0, [r3, #0]
 80031aa:	f000 b825 	b.w	80031f8 <_malloc_r>
 80031ae:	bf00      	nop
 80031b0:	2000000c 	.word	0x2000000c

080031b4 <sbrk_aligned>:
 80031b4:	b570      	push	{r4, r5, r6, lr}
 80031b6:	4e0f      	ldr	r6, [pc, #60]	@ (80031f4 <sbrk_aligned+0x40>)
 80031b8:	460c      	mov	r4, r1
 80031ba:	6831      	ldr	r1, [r6, #0]
 80031bc:	4605      	mov	r5, r0
 80031be:	b911      	cbnz	r1, 80031c6 <sbrk_aligned+0x12>
 80031c0:	f000 fe9a 	bl	8003ef8 <_sbrk_r>
 80031c4:	6030      	str	r0, [r6, #0]
 80031c6:	4621      	mov	r1, r4
 80031c8:	4628      	mov	r0, r5
 80031ca:	f000 fe95 	bl	8003ef8 <_sbrk_r>
 80031ce:	1c43      	adds	r3, r0, #1
 80031d0:	d103      	bne.n	80031da <sbrk_aligned+0x26>
 80031d2:	f04f 34ff 	mov.w	r4, #4294967295
 80031d6:	4620      	mov	r0, r4
 80031d8:	bd70      	pop	{r4, r5, r6, pc}
 80031da:	1cc4      	adds	r4, r0, #3
 80031dc:	f024 0403 	bic.w	r4, r4, #3
 80031e0:	42a0      	cmp	r0, r4
 80031e2:	d0f8      	beq.n	80031d6 <sbrk_aligned+0x22>
 80031e4:	1a21      	subs	r1, r4, r0
 80031e6:	4628      	mov	r0, r5
 80031e8:	f000 fe86 	bl	8003ef8 <_sbrk_r>
 80031ec:	3001      	adds	r0, #1
 80031ee:	d1f2      	bne.n	80031d6 <sbrk_aligned+0x22>
 80031f0:	e7ef      	b.n	80031d2 <sbrk_aligned+0x1e>
 80031f2:	bf00      	nop
 80031f4:	2000032c 	.word	0x2000032c

080031f8 <_malloc_r>:
 80031f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80031fc:	1ccd      	adds	r5, r1, #3
 80031fe:	f025 0503 	bic.w	r5, r5, #3
 8003202:	3508      	adds	r5, #8
 8003204:	2d0c      	cmp	r5, #12
 8003206:	bf38      	it	cc
 8003208:	250c      	movcc	r5, #12
 800320a:	2d00      	cmp	r5, #0
 800320c:	4606      	mov	r6, r0
 800320e:	db01      	blt.n	8003214 <_malloc_r+0x1c>
 8003210:	42a9      	cmp	r1, r5
 8003212:	d904      	bls.n	800321e <_malloc_r+0x26>
 8003214:	230c      	movs	r3, #12
 8003216:	6033      	str	r3, [r6, #0]
 8003218:	2000      	movs	r0, #0
 800321a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800321e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80032f4 <_malloc_r+0xfc>
 8003222:	f000 f869 	bl	80032f8 <__malloc_lock>
 8003226:	f8d8 3000 	ldr.w	r3, [r8]
 800322a:	461c      	mov	r4, r3
 800322c:	bb44      	cbnz	r4, 8003280 <_malloc_r+0x88>
 800322e:	4629      	mov	r1, r5
 8003230:	4630      	mov	r0, r6
 8003232:	f7ff ffbf 	bl	80031b4 <sbrk_aligned>
 8003236:	1c43      	adds	r3, r0, #1
 8003238:	4604      	mov	r4, r0
 800323a:	d158      	bne.n	80032ee <_malloc_r+0xf6>
 800323c:	f8d8 4000 	ldr.w	r4, [r8]
 8003240:	4627      	mov	r7, r4
 8003242:	2f00      	cmp	r7, #0
 8003244:	d143      	bne.n	80032ce <_malloc_r+0xd6>
 8003246:	2c00      	cmp	r4, #0
 8003248:	d04b      	beq.n	80032e2 <_malloc_r+0xea>
 800324a:	6823      	ldr	r3, [r4, #0]
 800324c:	4639      	mov	r1, r7
 800324e:	4630      	mov	r0, r6
 8003250:	eb04 0903 	add.w	r9, r4, r3
 8003254:	f000 fe50 	bl	8003ef8 <_sbrk_r>
 8003258:	4581      	cmp	r9, r0
 800325a:	d142      	bne.n	80032e2 <_malloc_r+0xea>
 800325c:	6821      	ldr	r1, [r4, #0]
 800325e:	1a6d      	subs	r5, r5, r1
 8003260:	4629      	mov	r1, r5
 8003262:	4630      	mov	r0, r6
 8003264:	f7ff ffa6 	bl	80031b4 <sbrk_aligned>
 8003268:	3001      	adds	r0, #1
 800326a:	d03a      	beq.n	80032e2 <_malloc_r+0xea>
 800326c:	6823      	ldr	r3, [r4, #0]
 800326e:	442b      	add	r3, r5
 8003270:	6023      	str	r3, [r4, #0]
 8003272:	f8d8 3000 	ldr.w	r3, [r8]
 8003276:	685a      	ldr	r2, [r3, #4]
 8003278:	bb62      	cbnz	r2, 80032d4 <_malloc_r+0xdc>
 800327a:	f8c8 7000 	str.w	r7, [r8]
 800327e:	e00f      	b.n	80032a0 <_malloc_r+0xa8>
 8003280:	6822      	ldr	r2, [r4, #0]
 8003282:	1b52      	subs	r2, r2, r5
 8003284:	d420      	bmi.n	80032c8 <_malloc_r+0xd0>
 8003286:	2a0b      	cmp	r2, #11
 8003288:	d917      	bls.n	80032ba <_malloc_r+0xc2>
 800328a:	1961      	adds	r1, r4, r5
 800328c:	42a3      	cmp	r3, r4
 800328e:	6025      	str	r5, [r4, #0]
 8003290:	bf18      	it	ne
 8003292:	6059      	strne	r1, [r3, #4]
 8003294:	6863      	ldr	r3, [r4, #4]
 8003296:	bf08      	it	eq
 8003298:	f8c8 1000 	streq.w	r1, [r8]
 800329c:	5162      	str	r2, [r4, r5]
 800329e:	604b      	str	r3, [r1, #4]
 80032a0:	4630      	mov	r0, r6
 80032a2:	f000 f82f 	bl	8003304 <__malloc_unlock>
 80032a6:	f104 000b 	add.w	r0, r4, #11
 80032aa:	1d23      	adds	r3, r4, #4
 80032ac:	f020 0007 	bic.w	r0, r0, #7
 80032b0:	1ac2      	subs	r2, r0, r3
 80032b2:	bf1c      	itt	ne
 80032b4:	1a1b      	subne	r3, r3, r0
 80032b6:	50a3      	strne	r3, [r4, r2]
 80032b8:	e7af      	b.n	800321a <_malloc_r+0x22>
 80032ba:	6862      	ldr	r2, [r4, #4]
 80032bc:	42a3      	cmp	r3, r4
 80032be:	bf0c      	ite	eq
 80032c0:	f8c8 2000 	streq.w	r2, [r8]
 80032c4:	605a      	strne	r2, [r3, #4]
 80032c6:	e7eb      	b.n	80032a0 <_malloc_r+0xa8>
 80032c8:	4623      	mov	r3, r4
 80032ca:	6864      	ldr	r4, [r4, #4]
 80032cc:	e7ae      	b.n	800322c <_malloc_r+0x34>
 80032ce:	463c      	mov	r4, r7
 80032d0:	687f      	ldr	r7, [r7, #4]
 80032d2:	e7b6      	b.n	8003242 <_malloc_r+0x4a>
 80032d4:	461a      	mov	r2, r3
 80032d6:	685b      	ldr	r3, [r3, #4]
 80032d8:	42a3      	cmp	r3, r4
 80032da:	d1fb      	bne.n	80032d4 <_malloc_r+0xdc>
 80032dc:	2300      	movs	r3, #0
 80032de:	6053      	str	r3, [r2, #4]
 80032e0:	e7de      	b.n	80032a0 <_malloc_r+0xa8>
 80032e2:	230c      	movs	r3, #12
 80032e4:	6033      	str	r3, [r6, #0]
 80032e6:	4630      	mov	r0, r6
 80032e8:	f000 f80c 	bl	8003304 <__malloc_unlock>
 80032ec:	e794      	b.n	8003218 <_malloc_r+0x20>
 80032ee:	6005      	str	r5, [r0, #0]
 80032f0:	e7d6      	b.n	80032a0 <_malloc_r+0xa8>
 80032f2:	bf00      	nop
 80032f4:	20000330 	.word	0x20000330

080032f8 <__malloc_lock>:
 80032f8:	4801      	ldr	r0, [pc, #4]	@ (8003300 <__malloc_lock+0x8>)
 80032fa:	f7ff b8ba 	b.w	8002472 <__retarget_lock_acquire_recursive>
 80032fe:	bf00      	nop
 8003300:	20000328 	.word	0x20000328

08003304 <__malloc_unlock>:
 8003304:	4801      	ldr	r0, [pc, #4]	@ (800330c <__malloc_unlock+0x8>)
 8003306:	f7ff b8b5 	b.w	8002474 <__retarget_lock_release_recursive>
 800330a:	bf00      	nop
 800330c:	20000328 	.word	0x20000328

08003310 <_Balloc>:
 8003310:	b570      	push	{r4, r5, r6, lr}
 8003312:	69c6      	ldr	r6, [r0, #28]
 8003314:	4604      	mov	r4, r0
 8003316:	460d      	mov	r5, r1
 8003318:	b976      	cbnz	r6, 8003338 <_Balloc+0x28>
 800331a:	2010      	movs	r0, #16
 800331c:	f7ff ff42 	bl	80031a4 <malloc>
 8003320:	4602      	mov	r2, r0
 8003322:	61e0      	str	r0, [r4, #28]
 8003324:	b920      	cbnz	r0, 8003330 <_Balloc+0x20>
 8003326:	4b18      	ldr	r3, [pc, #96]	@ (8003388 <_Balloc+0x78>)
 8003328:	4818      	ldr	r0, [pc, #96]	@ (800338c <_Balloc+0x7c>)
 800332a:	216b      	movs	r1, #107	@ 0x6b
 800332c:	f000 fe02 	bl	8003f34 <__assert_func>
 8003330:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003334:	6006      	str	r6, [r0, #0]
 8003336:	60c6      	str	r6, [r0, #12]
 8003338:	69e6      	ldr	r6, [r4, #28]
 800333a:	68f3      	ldr	r3, [r6, #12]
 800333c:	b183      	cbz	r3, 8003360 <_Balloc+0x50>
 800333e:	69e3      	ldr	r3, [r4, #28]
 8003340:	68db      	ldr	r3, [r3, #12]
 8003342:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8003346:	b9b8      	cbnz	r0, 8003378 <_Balloc+0x68>
 8003348:	2101      	movs	r1, #1
 800334a:	fa01 f605 	lsl.w	r6, r1, r5
 800334e:	1d72      	adds	r2, r6, #5
 8003350:	0092      	lsls	r2, r2, #2
 8003352:	4620      	mov	r0, r4
 8003354:	f000 fe0c 	bl	8003f70 <_calloc_r>
 8003358:	b160      	cbz	r0, 8003374 <_Balloc+0x64>
 800335a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800335e:	e00e      	b.n	800337e <_Balloc+0x6e>
 8003360:	2221      	movs	r2, #33	@ 0x21
 8003362:	2104      	movs	r1, #4
 8003364:	4620      	mov	r0, r4
 8003366:	f000 fe03 	bl	8003f70 <_calloc_r>
 800336a:	69e3      	ldr	r3, [r4, #28]
 800336c:	60f0      	str	r0, [r6, #12]
 800336e:	68db      	ldr	r3, [r3, #12]
 8003370:	2b00      	cmp	r3, #0
 8003372:	d1e4      	bne.n	800333e <_Balloc+0x2e>
 8003374:	2000      	movs	r0, #0
 8003376:	bd70      	pop	{r4, r5, r6, pc}
 8003378:	6802      	ldr	r2, [r0, #0]
 800337a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800337e:	2300      	movs	r3, #0
 8003380:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003384:	e7f7      	b.n	8003376 <_Balloc+0x66>
 8003386:	bf00      	nop
 8003388:	0800415f 	.word	0x0800415f
 800338c:	080041df 	.word	0x080041df

08003390 <_Bfree>:
 8003390:	b570      	push	{r4, r5, r6, lr}
 8003392:	69c6      	ldr	r6, [r0, #28]
 8003394:	4605      	mov	r5, r0
 8003396:	460c      	mov	r4, r1
 8003398:	b976      	cbnz	r6, 80033b8 <_Bfree+0x28>
 800339a:	2010      	movs	r0, #16
 800339c:	f7ff ff02 	bl	80031a4 <malloc>
 80033a0:	4602      	mov	r2, r0
 80033a2:	61e8      	str	r0, [r5, #28]
 80033a4:	b920      	cbnz	r0, 80033b0 <_Bfree+0x20>
 80033a6:	4b09      	ldr	r3, [pc, #36]	@ (80033cc <_Bfree+0x3c>)
 80033a8:	4809      	ldr	r0, [pc, #36]	@ (80033d0 <_Bfree+0x40>)
 80033aa:	218f      	movs	r1, #143	@ 0x8f
 80033ac:	f000 fdc2 	bl	8003f34 <__assert_func>
 80033b0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80033b4:	6006      	str	r6, [r0, #0]
 80033b6:	60c6      	str	r6, [r0, #12]
 80033b8:	b13c      	cbz	r4, 80033ca <_Bfree+0x3a>
 80033ba:	69eb      	ldr	r3, [r5, #28]
 80033bc:	6862      	ldr	r2, [r4, #4]
 80033be:	68db      	ldr	r3, [r3, #12]
 80033c0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80033c4:	6021      	str	r1, [r4, #0]
 80033c6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80033ca:	bd70      	pop	{r4, r5, r6, pc}
 80033cc:	0800415f 	.word	0x0800415f
 80033d0:	080041df 	.word	0x080041df

080033d4 <__multadd>:
 80033d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80033d8:	690d      	ldr	r5, [r1, #16]
 80033da:	4607      	mov	r7, r0
 80033dc:	460c      	mov	r4, r1
 80033de:	461e      	mov	r6, r3
 80033e0:	f101 0c14 	add.w	ip, r1, #20
 80033e4:	2000      	movs	r0, #0
 80033e6:	f8dc 3000 	ldr.w	r3, [ip]
 80033ea:	b299      	uxth	r1, r3
 80033ec:	fb02 6101 	mla	r1, r2, r1, r6
 80033f0:	0c1e      	lsrs	r6, r3, #16
 80033f2:	0c0b      	lsrs	r3, r1, #16
 80033f4:	fb02 3306 	mla	r3, r2, r6, r3
 80033f8:	b289      	uxth	r1, r1
 80033fa:	3001      	adds	r0, #1
 80033fc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8003400:	4285      	cmp	r5, r0
 8003402:	f84c 1b04 	str.w	r1, [ip], #4
 8003406:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800340a:	dcec      	bgt.n	80033e6 <__multadd+0x12>
 800340c:	b30e      	cbz	r6, 8003452 <__multadd+0x7e>
 800340e:	68a3      	ldr	r3, [r4, #8]
 8003410:	42ab      	cmp	r3, r5
 8003412:	dc19      	bgt.n	8003448 <__multadd+0x74>
 8003414:	6861      	ldr	r1, [r4, #4]
 8003416:	4638      	mov	r0, r7
 8003418:	3101      	adds	r1, #1
 800341a:	f7ff ff79 	bl	8003310 <_Balloc>
 800341e:	4680      	mov	r8, r0
 8003420:	b928      	cbnz	r0, 800342e <__multadd+0x5a>
 8003422:	4602      	mov	r2, r0
 8003424:	4b0c      	ldr	r3, [pc, #48]	@ (8003458 <__multadd+0x84>)
 8003426:	480d      	ldr	r0, [pc, #52]	@ (800345c <__multadd+0x88>)
 8003428:	21ba      	movs	r1, #186	@ 0xba
 800342a:	f000 fd83 	bl	8003f34 <__assert_func>
 800342e:	6922      	ldr	r2, [r4, #16]
 8003430:	3202      	adds	r2, #2
 8003432:	f104 010c 	add.w	r1, r4, #12
 8003436:	0092      	lsls	r2, r2, #2
 8003438:	300c      	adds	r0, #12
 800343a:	f000 fd6d 	bl	8003f18 <memcpy>
 800343e:	4621      	mov	r1, r4
 8003440:	4638      	mov	r0, r7
 8003442:	f7ff ffa5 	bl	8003390 <_Bfree>
 8003446:	4644      	mov	r4, r8
 8003448:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800344c:	3501      	adds	r5, #1
 800344e:	615e      	str	r6, [r3, #20]
 8003450:	6125      	str	r5, [r4, #16]
 8003452:	4620      	mov	r0, r4
 8003454:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003458:	080041ce 	.word	0x080041ce
 800345c:	080041df 	.word	0x080041df

08003460 <__hi0bits>:
 8003460:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8003464:	4603      	mov	r3, r0
 8003466:	bf36      	itet	cc
 8003468:	0403      	lslcc	r3, r0, #16
 800346a:	2000      	movcs	r0, #0
 800346c:	2010      	movcc	r0, #16
 800346e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003472:	bf3c      	itt	cc
 8003474:	021b      	lslcc	r3, r3, #8
 8003476:	3008      	addcc	r0, #8
 8003478:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800347c:	bf3c      	itt	cc
 800347e:	011b      	lslcc	r3, r3, #4
 8003480:	3004      	addcc	r0, #4
 8003482:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8003486:	bf3c      	itt	cc
 8003488:	009b      	lslcc	r3, r3, #2
 800348a:	3002      	addcc	r0, #2
 800348c:	2b00      	cmp	r3, #0
 800348e:	db05      	blt.n	800349c <__hi0bits+0x3c>
 8003490:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8003494:	f100 0001 	add.w	r0, r0, #1
 8003498:	bf08      	it	eq
 800349a:	2020      	moveq	r0, #32
 800349c:	4770      	bx	lr

0800349e <__lo0bits>:
 800349e:	6803      	ldr	r3, [r0, #0]
 80034a0:	4602      	mov	r2, r0
 80034a2:	f013 0007 	ands.w	r0, r3, #7
 80034a6:	d00b      	beq.n	80034c0 <__lo0bits+0x22>
 80034a8:	07d9      	lsls	r1, r3, #31
 80034aa:	d421      	bmi.n	80034f0 <__lo0bits+0x52>
 80034ac:	0798      	lsls	r0, r3, #30
 80034ae:	bf49      	itett	mi
 80034b0:	085b      	lsrmi	r3, r3, #1
 80034b2:	089b      	lsrpl	r3, r3, #2
 80034b4:	2001      	movmi	r0, #1
 80034b6:	6013      	strmi	r3, [r2, #0]
 80034b8:	bf5c      	itt	pl
 80034ba:	6013      	strpl	r3, [r2, #0]
 80034bc:	2002      	movpl	r0, #2
 80034be:	4770      	bx	lr
 80034c0:	b299      	uxth	r1, r3
 80034c2:	b909      	cbnz	r1, 80034c8 <__lo0bits+0x2a>
 80034c4:	0c1b      	lsrs	r3, r3, #16
 80034c6:	2010      	movs	r0, #16
 80034c8:	b2d9      	uxtb	r1, r3
 80034ca:	b909      	cbnz	r1, 80034d0 <__lo0bits+0x32>
 80034cc:	3008      	adds	r0, #8
 80034ce:	0a1b      	lsrs	r3, r3, #8
 80034d0:	0719      	lsls	r1, r3, #28
 80034d2:	bf04      	itt	eq
 80034d4:	091b      	lsreq	r3, r3, #4
 80034d6:	3004      	addeq	r0, #4
 80034d8:	0799      	lsls	r1, r3, #30
 80034da:	bf04      	itt	eq
 80034dc:	089b      	lsreq	r3, r3, #2
 80034de:	3002      	addeq	r0, #2
 80034e0:	07d9      	lsls	r1, r3, #31
 80034e2:	d403      	bmi.n	80034ec <__lo0bits+0x4e>
 80034e4:	085b      	lsrs	r3, r3, #1
 80034e6:	f100 0001 	add.w	r0, r0, #1
 80034ea:	d003      	beq.n	80034f4 <__lo0bits+0x56>
 80034ec:	6013      	str	r3, [r2, #0]
 80034ee:	4770      	bx	lr
 80034f0:	2000      	movs	r0, #0
 80034f2:	4770      	bx	lr
 80034f4:	2020      	movs	r0, #32
 80034f6:	4770      	bx	lr

080034f8 <__i2b>:
 80034f8:	b510      	push	{r4, lr}
 80034fa:	460c      	mov	r4, r1
 80034fc:	2101      	movs	r1, #1
 80034fe:	f7ff ff07 	bl	8003310 <_Balloc>
 8003502:	4602      	mov	r2, r0
 8003504:	b928      	cbnz	r0, 8003512 <__i2b+0x1a>
 8003506:	4b05      	ldr	r3, [pc, #20]	@ (800351c <__i2b+0x24>)
 8003508:	4805      	ldr	r0, [pc, #20]	@ (8003520 <__i2b+0x28>)
 800350a:	f240 1145 	movw	r1, #325	@ 0x145
 800350e:	f000 fd11 	bl	8003f34 <__assert_func>
 8003512:	2301      	movs	r3, #1
 8003514:	6144      	str	r4, [r0, #20]
 8003516:	6103      	str	r3, [r0, #16]
 8003518:	bd10      	pop	{r4, pc}
 800351a:	bf00      	nop
 800351c:	080041ce 	.word	0x080041ce
 8003520:	080041df 	.word	0x080041df

08003524 <__multiply>:
 8003524:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003528:	4614      	mov	r4, r2
 800352a:	690a      	ldr	r2, [r1, #16]
 800352c:	6923      	ldr	r3, [r4, #16]
 800352e:	429a      	cmp	r2, r3
 8003530:	bfa8      	it	ge
 8003532:	4623      	movge	r3, r4
 8003534:	460f      	mov	r7, r1
 8003536:	bfa4      	itt	ge
 8003538:	460c      	movge	r4, r1
 800353a:	461f      	movge	r7, r3
 800353c:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8003540:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8003544:	68a3      	ldr	r3, [r4, #8]
 8003546:	6861      	ldr	r1, [r4, #4]
 8003548:	eb0a 0609 	add.w	r6, sl, r9
 800354c:	42b3      	cmp	r3, r6
 800354e:	b085      	sub	sp, #20
 8003550:	bfb8      	it	lt
 8003552:	3101      	addlt	r1, #1
 8003554:	f7ff fedc 	bl	8003310 <_Balloc>
 8003558:	b930      	cbnz	r0, 8003568 <__multiply+0x44>
 800355a:	4602      	mov	r2, r0
 800355c:	4b44      	ldr	r3, [pc, #272]	@ (8003670 <__multiply+0x14c>)
 800355e:	4845      	ldr	r0, [pc, #276]	@ (8003674 <__multiply+0x150>)
 8003560:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8003564:	f000 fce6 	bl	8003f34 <__assert_func>
 8003568:	f100 0514 	add.w	r5, r0, #20
 800356c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003570:	462b      	mov	r3, r5
 8003572:	2200      	movs	r2, #0
 8003574:	4543      	cmp	r3, r8
 8003576:	d321      	bcc.n	80035bc <__multiply+0x98>
 8003578:	f107 0114 	add.w	r1, r7, #20
 800357c:	f104 0214 	add.w	r2, r4, #20
 8003580:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8003584:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 8003588:	9302      	str	r3, [sp, #8]
 800358a:	1b13      	subs	r3, r2, r4
 800358c:	3b15      	subs	r3, #21
 800358e:	f023 0303 	bic.w	r3, r3, #3
 8003592:	3304      	adds	r3, #4
 8003594:	f104 0715 	add.w	r7, r4, #21
 8003598:	42ba      	cmp	r2, r7
 800359a:	bf38      	it	cc
 800359c:	2304      	movcc	r3, #4
 800359e:	9301      	str	r3, [sp, #4]
 80035a0:	9b02      	ldr	r3, [sp, #8]
 80035a2:	9103      	str	r1, [sp, #12]
 80035a4:	428b      	cmp	r3, r1
 80035a6:	d80c      	bhi.n	80035c2 <__multiply+0x9e>
 80035a8:	2e00      	cmp	r6, #0
 80035aa:	dd03      	ble.n	80035b4 <__multiply+0x90>
 80035ac:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80035b0:	2b00      	cmp	r3, #0
 80035b2:	d05b      	beq.n	800366c <__multiply+0x148>
 80035b4:	6106      	str	r6, [r0, #16]
 80035b6:	b005      	add	sp, #20
 80035b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80035bc:	f843 2b04 	str.w	r2, [r3], #4
 80035c0:	e7d8      	b.n	8003574 <__multiply+0x50>
 80035c2:	f8b1 a000 	ldrh.w	sl, [r1]
 80035c6:	f1ba 0f00 	cmp.w	sl, #0
 80035ca:	d024      	beq.n	8003616 <__multiply+0xf2>
 80035cc:	f104 0e14 	add.w	lr, r4, #20
 80035d0:	46a9      	mov	r9, r5
 80035d2:	f04f 0c00 	mov.w	ip, #0
 80035d6:	f85e 7b04 	ldr.w	r7, [lr], #4
 80035da:	f8d9 3000 	ldr.w	r3, [r9]
 80035de:	fa1f fb87 	uxth.w	fp, r7
 80035e2:	b29b      	uxth	r3, r3
 80035e4:	fb0a 330b 	mla	r3, sl, fp, r3
 80035e8:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 80035ec:	f8d9 7000 	ldr.w	r7, [r9]
 80035f0:	4463      	add	r3, ip
 80035f2:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80035f6:	fb0a c70b 	mla	r7, sl, fp, ip
 80035fa:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 80035fe:	b29b      	uxth	r3, r3
 8003600:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003604:	4572      	cmp	r2, lr
 8003606:	f849 3b04 	str.w	r3, [r9], #4
 800360a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800360e:	d8e2      	bhi.n	80035d6 <__multiply+0xb2>
 8003610:	9b01      	ldr	r3, [sp, #4]
 8003612:	f845 c003 	str.w	ip, [r5, r3]
 8003616:	9b03      	ldr	r3, [sp, #12]
 8003618:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800361c:	3104      	adds	r1, #4
 800361e:	f1b9 0f00 	cmp.w	r9, #0
 8003622:	d021      	beq.n	8003668 <__multiply+0x144>
 8003624:	682b      	ldr	r3, [r5, #0]
 8003626:	f104 0c14 	add.w	ip, r4, #20
 800362a:	46ae      	mov	lr, r5
 800362c:	f04f 0a00 	mov.w	sl, #0
 8003630:	f8bc b000 	ldrh.w	fp, [ip]
 8003634:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8003638:	fb09 770b 	mla	r7, r9, fp, r7
 800363c:	4457      	add	r7, sl
 800363e:	b29b      	uxth	r3, r3
 8003640:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8003644:	f84e 3b04 	str.w	r3, [lr], #4
 8003648:	f85c 3b04 	ldr.w	r3, [ip], #4
 800364c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003650:	f8be 3000 	ldrh.w	r3, [lr]
 8003654:	fb09 330a 	mla	r3, r9, sl, r3
 8003658:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 800365c:	4562      	cmp	r2, ip
 800365e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8003662:	d8e5      	bhi.n	8003630 <__multiply+0x10c>
 8003664:	9f01      	ldr	r7, [sp, #4]
 8003666:	51eb      	str	r3, [r5, r7]
 8003668:	3504      	adds	r5, #4
 800366a:	e799      	b.n	80035a0 <__multiply+0x7c>
 800366c:	3e01      	subs	r6, #1
 800366e:	e79b      	b.n	80035a8 <__multiply+0x84>
 8003670:	080041ce 	.word	0x080041ce
 8003674:	080041df 	.word	0x080041df

08003678 <__pow5mult>:
 8003678:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800367c:	4615      	mov	r5, r2
 800367e:	f012 0203 	ands.w	r2, r2, #3
 8003682:	4607      	mov	r7, r0
 8003684:	460e      	mov	r6, r1
 8003686:	d007      	beq.n	8003698 <__pow5mult+0x20>
 8003688:	4c25      	ldr	r4, [pc, #148]	@ (8003720 <__pow5mult+0xa8>)
 800368a:	3a01      	subs	r2, #1
 800368c:	2300      	movs	r3, #0
 800368e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003692:	f7ff fe9f 	bl	80033d4 <__multadd>
 8003696:	4606      	mov	r6, r0
 8003698:	10ad      	asrs	r5, r5, #2
 800369a:	d03d      	beq.n	8003718 <__pow5mult+0xa0>
 800369c:	69fc      	ldr	r4, [r7, #28]
 800369e:	b97c      	cbnz	r4, 80036c0 <__pow5mult+0x48>
 80036a0:	2010      	movs	r0, #16
 80036a2:	f7ff fd7f 	bl	80031a4 <malloc>
 80036a6:	4602      	mov	r2, r0
 80036a8:	61f8      	str	r0, [r7, #28]
 80036aa:	b928      	cbnz	r0, 80036b8 <__pow5mult+0x40>
 80036ac:	4b1d      	ldr	r3, [pc, #116]	@ (8003724 <__pow5mult+0xac>)
 80036ae:	481e      	ldr	r0, [pc, #120]	@ (8003728 <__pow5mult+0xb0>)
 80036b0:	f240 11b3 	movw	r1, #435	@ 0x1b3
 80036b4:	f000 fc3e 	bl	8003f34 <__assert_func>
 80036b8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80036bc:	6004      	str	r4, [r0, #0]
 80036be:	60c4      	str	r4, [r0, #12]
 80036c0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 80036c4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80036c8:	b94c      	cbnz	r4, 80036de <__pow5mult+0x66>
 80036ca:	f240 2171 	movw	r1, #625	@ 0x271
 80036ce:	4638      	mov	r0, r7
 80036d0:	f7ff ff12 	bl	80034f8 <__i2b>
 80036d4:	2300      	movs	r3, #0
 80036d6:	f8c8 0008 	str.w	r0, [r8, #8]
 80036da:	4604      	mov	r4, r0
 80036dc:	6003      	str	r3, [r0, #0]
 80036de:	f04f 0900 	mov.w	r9, #0
 80036e2:	07eb      	lsls	r3, r5, #31
 80036e4:	d50a      	bpl.n	80036fc <__pow5mult+0x84>
 80036e6:	4631      	mov	r1, r6
 80036e8:	4622      	mov	r2, r4
 80036ea:	4638      	mov	r0, r7
 80036ec:	f7ff ff1a 	bl	8003524 <__multiply>
 80036f0:	4631      	mov	r1, r6
 80036f2:	4680      	mov	r8, r0
 80036f4:	4638      	mov	r0, r7
 80036f6:	f7ff fe4b 	bl	8003390 <_Bfree>
 80036fa:	4646      	mov	r6, r8
 80036fc:	106d      	asrs	r5, r5, #1
 80036fe:	d00b      	beq.n	8003718 <__pow5mult+0xa0>
 8003700:	6820      	ldr	r0, [r4, #0]
 8003702:	b938      	cbnz	r0, 8003714 <__pow5mult+0x9c>
 8003704:	4622      	mov	r2, r4
 8003706:	4621      	mov	r1, r4
 8003708:	4638      	mov	r0, r7
 800370a:	f7ff ff0b 	bl	8003524 <__multiply>
 800370e:	6020      	str	r0, [r4, #0]
 8003710:	f8c0 9000 	str.w	r9, [r0]
 8003714:	4604      	mov	r4, r0
 8003716:	e7e4      	b.n	80036e2 <__pow5mult+0x6a>
 8003718:	4630      	mov	r0, r6
 800371a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800371e:	bf00      	nop
 8003720:	08004238 	.word	0x08004238
 8003724:	0800415f 	.word	0x0800415f
 8003728:	080041df 	.word	0x080041df

0800372c <__lshift>:
 800372c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003730:	460c      	mov	r4, r1
 8003732:	6849      	ldr	r1, [r1, #4]
 8003734:	6923      	ldr	r3, [r4, #16]
 8003736:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800373a:	68a3      	ldr	r3, [r4, #8]
 800373c:	4607      	mov	r7, r0
 800373e:	4691      	mov	r9, r2
 8003740:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8003744:	f108 0601 	add.w	r6, r8, #1
 8003748:	42b3      	cmp	r3, r6
 800374a:	db0b      	blt.n	8003764 <__lshift+0x38>
 800374c:	4638      	mov	r0, r7
 800374e:	f7ff fddf 	bl	8003310 <_Balloc>
 8003752:	4605      	mov	r5, r0
 8003754:	b948      	cbnz	r0, 800376a <__lshift+0x3e>
 8003756:	4602      	mov	r2, r0
 8003758:	4b28      	ldr	r3, [pc, #160]	@ (80037fc <__lshift+0xd0>)
 800375a:	4829      	ldr	r0, [pc, #164]	@ (8003800 <__lshift+0xd4>)
 800375c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8003760:	f000 fbe8 	bl	8003f34 <__assert_func>
 8003764:	3101      	adds	r1, #1
 8003766:	005b      	lsls	r3, r3, #1
 8003768:	e7ee      	b.n	8003748 <__lshift+0x1c>
 800376a:	2300      	movs	r3, #0
 800376c:	f100 0114 	add.w	r1, r0, #20
 8003770:	f100 0210 	add.w	r2, r0, #16
 8003774:	4618      	mov	r0, r3
 8003776:	4553      	cmp	r3, sl
 8003778:	db33      	blt.n	80037e2 <__lshift+0xb6>
 800377a:	6920      	ldr	r0, [r4, #16]
 800377c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003780:	f104 0314 	add.w	r3, r4, #20
 8003784:	f019 091f 	ands.w	r9, r9, #31
 8003788:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800378c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003790:	d02b      	beq.n	80037ea <__lshift+0xbe>
 8003792:	f1c9 0e20 	rsb	lr, r9, #32
 8003796:	468a      	mov	sl, r1
 8003798:	2200      	movs	r2, #0
 800379a:	6818      	ldr	r0, [r3, #0]
 800379c:	fa00 f009 	lsl.w	r0, r0, r9
 80037a0:	4310      	orrs	r0, r2
 80037a2:	f84a 0b04 	str.w	r0, [sl], #4
 80037a6:	f853 2b04 	ldr.w	r2, [r3], #4
 80037aa:	459c      	cmp	ip, r3
 80037ac:	fa22 f20e 	lsr.w	r2, r2, lr
 80037b0:	d8f3      	bhi.n	800379a <__lshift+0x6e>
 80037b2:	ebac 0304 	sub.w	r3, ip, r4
 80037b6:	3b15      	subs	r3, #21
 80037b8:	f023 0303 	bic.w	r3, r3, #3
 80037bc:	3304      	adds	r3, #4
 80037be:	f104 0015 	add.w	r0, r4, #21
 80037c2:	4584      	cmp	ip, r0
 80037c4:	bf38      	it	cc
 80037c6:	2304      	movcc	r3, #4
 80037c8:	50ca      	str	r2, [r1, r3]
 80037ca:	b10a      	cbz	r2, 80037d0 <__lshift+0xa4>
 80037cc:	f108 0602 	add.w	r6, r8, #2
 80037d0:	3e01      	subs	r6, #1
 80037d2:	4638      	mov	r0, r7
 80037d4:	612e      	str	r6, [r5, #16]
 80037d6:	4621      	mov	r1, r4
 80037d8:	f7ff fdda 	bl	8003390 <_Bfree>
 80037dc:	4628      	mov	r0, r5
 80037de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80037e2:	f842 0f04 	str.w	r0, [r2, #4]!
 80037e6:	3301      	adds	r3, #1
 80037e8:	e7c5      	b.n	8003776 <__lshift+0x4a>
 80037ea:	3904      	subs	r1, #4
 80037ec:	f853 2b04 	ldr.w	r2, [r3], #4
 80037f0:	f841 2f04 	str.w	r2, [r1, #4]!
 80037f4:	459c      	cmp	ip, r3
 80037f6:	d8f9      	bhi.n	80037ec <__lshift+0xc0>
 80037f8:	e7ea      	b.n	80037d0 <__lshift+0xa4>
 80037fa:	bf00      	nop
 80037fc:	080041ce 	.word	0x080041ce
 8003800:	080041df 	.word	0x080041df

08003804 <__mcmp>:
 8003804:	690a      	ldr	r2, [r1, #16]
 8003806:	4603      	mov	r3, r0
 8003808:	6900      	ldr	r0, [r0, #16]
 800380a:	1a80      	subs	r0, r0, r2
 800380c:	b530      	push	{r4, r5, lr}
 800380e:	d10e      	bne.n	800382e <__mcmp+0x2a>
 8003810:	3314      	adds	r3, #20
 8003812:	3114      	adds	r1, #20
 8003814:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8003818:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800381c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8003820:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8003824:	4295      	cmp	r5, r2
 8003826:	d003      	beq.n	8003830 <__mcmp+0x2c>
 8003828:	d205      	bcs.n	8003836 <__mcmp+0x32>
 800382a:	f04f 30ff 	mov.w	r0, #4294967295
 800382e:	bd30      	pop	{r4, r5, pc}
 8003830:	42a3      	cmp	r3, r4
 8003832:	d3f3      	bcc.n	800381c <__mcmp+0x18>
 8003834:	e7fb      	b.n	800382e <__mcmp+0x2a>
 8003836:	2001      	movs	r0, #1
 8003838:	e7f9      	b.n	800382e <__mcmp+0x2a>
	...

0800383c <__mdiff>:
 800383c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003840:	4689      	mov	r9, r1
 8003842:	4606      	mov	r6, r0
 8003844:	4611      	mov	r1, r2
 8003846:	4648      	mov	r0, r9
 8003848:	4614      	mov	r4, r2
 800384a:	f7ff ffdb 	bl	8003804 <__mcmp>
 800384e:	1e05      	subs	r5, r0, #0
 8003850:	d112      	bne.n	8003878 <__mdiff+0x3c>
 8003852:	4629      	mov	r1, r5
 8003854:	4630      	mov	r0, r6
 8003856:	f7ff fd5b 	bl	8003310 <_Balloc>
 800385a:	4602      	mov	r2, r0
 800385c:	b928      	cbnz	r0, 800386a <__mdiff+0x2e>
 800385e:	4b3f      	ldr	r3, [pc, #252]	@ (800395c <__mdiff+0x120>)
 8003860:	f240 2137 	movw	r1, #567	@ 0x237
 8003864:	483e      	ldr	r0, [pc, #248]	@ (8003960 <__mdiff+0x124>)
 8003866:	f000 fb65 	bl	8003f34 <__assert_func>
 800386a:	2301      	movs	r3, #1
 800386c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003870:	4610      	mov	r0, r2
 8003872:	b003      	add	sp, #12
 8003874:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003878:	bfbc      	itt	lt
 800387a:	464b      	movlt	r3, r9
 800387c:	46a1      	movlt	r9, r4
 800387e:	4630      	mov	r0, r6
 8003880:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8003884:	bfba      	itte	lt
 8003886:	461c      	movlt	r4, r3
 8003888:	2501      	movlt	r5, #1
 800388a:	2500      	movge	r5, #0
 800388c:	f7ff fd40 	bl	8003310 <_Balloc>
 8003890:	4602      	mov	r2, r0
 8003892:	b918      	cbnz	r0, 800389c <__mdiff+0x60>
 8003894:	4b31      	ldr	r3, [pc, #196]	@ (800395c <__mdiff+0x120>)
 8003896:	f240 2145 	movw	r1, #581	@ 0x245
 800389a:	e7e3      	b.n	8003864 <__mdiff+0x28>
 800389c:	f8d9 7010 	ldr.w	r7, [r9, #16]
 80038a0:	6926      	ldr	r6, [r4, #16]
 80038a2:	60c5      	str	r5, [r0, #12]
 80038a4:	f109 0310 	add.w	r3, r9, #16
 80038a8:	f109 0514 	add.w	r5, r9, #20
 80038ac:	f104 0e14 	add.w	lr, r4, #20
 80038b0:	f100 0b14 	add.w	fp, r0, #20
 80038b4:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 80038b8:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 80038bc:	9301      	str	r3, [sp, #4]
 80038be:	46d9      	mov	r9, fp
 80038c0:	f04f 0c00 	mov.w	ip, #0
 80038c4:	9b01      	ldr	r3, [sp, #4]
 80038c6:	f85e 0b04 	ldr.w	r0, [lr], #4
 80038ca:	f853 af04 	ldr.w	sl, [r3, #4]!
 80038ce:	9301      	str	r3, [sp, #4]
 80038d0:	fa1f f38a 	uxth.w	r3, sl
 80038d4:	4619      	mov	r1, r3
 80038d6:	b283      	uxth	r3, r0
 80038d8:	1acb      	subs	r3, r1, r3
 80038da:	0c00      	lsrs	r0, r0, #16
 80038dc:	4463      	add	r3, ip
 80038de:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 80038e2:	eb00 4023 	add.w	r0, r0, r3, asr #16
 80038e6:	b29b      	uxth	r3, r3
 80038e8:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 80038ec:	4576      	cmp	r6, lr
 80038ee:	f849 3b04 	str.w	r3, [r9], #4
 80038f2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 80038f6:	d8e5      	bhi.n	80038c4 <__mdiff+0x88>
 80038f8:	1b33      	subs	r3, r6, r4
 80038fa:	3b15      	subs	r3, #21
 80038fc:	f023 0303 	bic.w	r3, r3, #3
 8003900:	3415      	adds	r4, #21
 8003902:	3304      	adds	r3, #4
 8003904:	42a6      	cmp	r6, r4
 8003906:	bf38      	it	cc
 8003908:	2304      	movcc	r3, #4
 800390a:	441d      	add	r5, r3
 800390c:	445b      	add	r3, fp
 800390e:	461e      	mov	r6, r3
 8003910:	462c      	mov	r4, r5
 8003912:	4544      	cmp	r4, r8
 8003914:	d30e      	bcc.n	8003934 <__mdiff+0xf8>
 8003916:	f108 0103 	add.w	r1, r8, #3
 800391a:	1b49      	subs	r1, r1, r5
 800391c:	f021 0103 	bic.w	r1, r1, #3
 8003920:	3d03      	subs	r5, #3
 8003922:	45a8      	cmp	r8, r5
 8003924:	bf38      	it	cc
 8003926:	2100      	movcc	r1, #0
 8003928:	440b      	add	r3, r1
 800392a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800392e:	b191      	cbz	r1, 8003956 <__mdiff+0x11a>
 8003930:	6117      	str	r7, [r2, #16]
 8003932:	e79d      	b.n	8003870 <__mdiff+0x34>
 8003934:	f854 1b04 	ldr.w	r1, [r4], #4
 8003938:	46e6      	mov	lr, ip
 800393a:	0c08      	lsrs	r0, r1, #16
 800393c:	fa1c fc81 	uxtah	ip, ip, r1
 8003940:	4471      	add	r1, lr
 8003942:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8003946:	b289      	uxth	r1, r1
 8003948:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800394c:	f846 1b04 	str.w	r1, [r6], #4
 8003950:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8003954:	e7dd      	b.n	8003912 <__mdiff+0xd6>
 8003956:	3f01      	subs	r7, #1
 8003958:	e7e7      	b.n	800392a <__mdiff+0xee>
 800395a:	bf00      	nop
 800395c:	080041ce 	.word	0x080041ce
 8003960:	080041df 	.word	0x080041df

08003964 <__d2b>:
 8003964:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8003968:	460f      	mov	r7, r1
 800396a:	2101      	movs	r1, #1
 800396c:	ec59 8b10 	vmov	r8, r9, d0
 8003970:	4616      	mov	r6, r2
 8003972:	f7ff fccd 	bl	8003310 <_Balloc>
 8003976:	4604      	mov	r4, r0
 8003978:	b930      	cbnz	r0, 8003988 <__d2b+0x24>
 800397a:	4602      	mov	r2, r0
 800397c:	4b23      	ldr	r3, [pc, #140]	@ (8003a0c <__d2b+0xa8>)
 800397e:	4824      	ldr	r0, [pc, #144]	@ (8003a10 <__d2b+0xac>)
 8003980:	f240 310f 	movw	r1, #783	@ 0x30f
 8003984:	f000 fad6 	bl	8003f34 <__assert_func>
 8003988:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800398c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003990:	b10d      	cbz	r5, 8003996 <__d2b+0x32>
 8003992:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8003996:	9301      	str	r3, [sp, #4]
 8003998:	f1b8 0300 	subs.w	r3, r8, #0
 800399c:	d023      	beq.n	80039e6 <__d2b+0x82>
 800399e:	4668      	mov	r0, sp
 80039a0:	9300      	str	r3, [sp, #0]
 80039a2:	f7ff fd7c 	bl	800349e <__lo0bits>
 80039a6:	e9dd 1200 	ldrd	r1, r2, [sp]
 80039aa:	b1d0      	cbz	r0, 80039e2 <__d2b+0x7e>
 80039ac:	f1c0 0320 	rsb	r3, r0, #32
 80039b0:	fa02 f303 	lsl.w	r3, r2, r3
 80039b4:	430b      	orrs	r3, r1
 80039b6:	40c2      	lsrs	r2, r0
 80039b8:	6163      	str	r3, [r4, #20]
 80039ba:	9201      	str	r2, [sp, #4]
 80039bc:	9b01      	ldr	r3, [sp, #4]
 80039be:	61a3      	str	r3, [r4, #24]
 80039c0:	2b00      	cmp	r3, #0
 80039c2:	bf0c      	ite	eq
 80039c4:	2201      	moveq	r2, #1
 80039c6:	2202      	movne	r2, #2
 80039c8:	6122      	str	r2, [r4, #16]
 80039ca:	b1a5      	cbz	r5, 80039f6 <__d2b+0x92>
 80039cc:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 80039d0:	4405      	add	r5, r0
 80039d2:	603d      	str	r5, [r7, #0]
 80039d4:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 80039d8:	6030      	str	r0, [r6, #0]
 80039da:	4620      	mov	r0, r4
 80039dc:	b003      	add	sp, #12
 80039de:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80039e2:	6161      	str	r1, [r4, #20]
 80039e4:	e7ea      	b.n	80039bc <__d2b+0x58>
 80039e6:	a801      	add	r0, sp, #4
 80039e8:	f7ff fd59 	bl	800349e <__lo0bits>
 80039ec:	9b01      	ldr	r3, [sp, #4]
 80039ee:	6163      	str	r3, [r4, #20]
 80039f0:	3020      	adds	r0, #32
 80039f2:	2201      	movs	r2, #1
 80039f4:	e7e8      	b.n	80039c8 <__d2b+0x64>
 80039f6:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80039fa:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 80039fe:	6038      	str	r0, [r7, #0]
 8003a00:	6918      	ldr	r0, [r3, #16]
 8003a02:	f7ff fd2d 	bl	8003460 <__hi0bits>
 8003a06:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003a0a:	e7e5      	b.n	80039d8 <__d2b+0x74>
 8003a0c:	080041ce 	.word	0x080041ce
 8003a10:	080041df 	.word	0x080041df

08003a14 <__sfputc_r>:
 8003a14:	6893      	ldr	r3, [r2, #8]
 8003a16:	3b01      	subs	r3, #1
 8003a18:	2b00      	cmp	r3, #0
 8003a1a:	b410      	push	{r4}
 8003a1c:	6093      	str	r3, [r2, #8]
 8003a1e:	da08      	bge.n	8003a32 <__sfputc_r+0x1e>
 8003a20:	6994      	ldr	r4, [r2, #24]
 8003a22:	42a3      	cmp	r3, r4
 8003a24:	db01      	blt.n	8003a2a <__sfputc_r+0x16>
 8003a26:	290a      	cmp	r1, #10
 8003a28:	d103      	bne.n	8003a32 <__sfputc_r+0x1e>
 8003a2a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003a2e:	f7fe bc0e 	b.w	800224e <__swbuf_r>
 8003a32:	6813      	ldr	r3, [r2, #0]
 8003a34:	1c58      	adds	r0, r3, #1
 8003a36:	6010      	str	r0, [r2, #0]
 8003a38:	7019      	strb	r1, [r3, #0]
 8003a3a:	4608      	mov	r0, r1
 8003a3c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003a40:	4770      	bx	lr

08003a42 <__sfputs_r>:
 8003a42:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003a44:	4606      	mov	r6, r0
 8003a46:	460f      	mov	r7, r1
 8003a48:	4614      	mov	r4, r2
 8003a4a:	18d5      	adds	r5, r2, r3
 8003a4c:	42ac      	cmp	r4, r5
 8003a4e:	d101      	bne.n	8003a54 <__sfputs_r+0x12>
 8003a50:	2000      	movs	r0, #0
 8003a52:	e007      	b.n	8003a64 <__sfputs_r+0x22>
 8003a54:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003a58:	463a      	mov	r2, r7
 8003a5a:	4630      	mov	r0, r6
 8003a5c:	f7ff ffda 	bl	8003a14 <__sfputc_r>
 8003a60:	1c43      	adds	r3, r0, #1
 8003a62:	d1f3      	bne.n	8003a4c <__sfputs_r+0xa>
 8003a64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003a68 <_vfiprintf_r>:
 8003a68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003a6c:	460d      	mov	r5, r1
 8003a6e:	b09d      	sub	sp, #116	@ 0x74
 8003a70:	4614      	mov	r4, r2
 8003a72:	4698      	mov	r8, r3
 8003a74:	4606      	mov	r6, r0
 8003a76:	b118      	cbz	r0, 8003a80 <_vfiprintf_r+0x18>
 8003a78:	6a03      	ldr	r3, [r0, #32]
 8003a7a:	b90b      	cbnz	r3, 8003a80 <_vfiprintf_r+0x18>
 8003a7c:	f7fe fafe 	bl	800207c <__sinit>
 8003a80:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003a82:	07d9      	lsls	r1, r3, #31
 8003a84:	d405      	bmi.n	8003a92 <_vfiprintf_r+0x2a>
 8003a86:	89ab      	ldrh	r3, [r5, #12]
 8003a88:	059a      	lsls	r2, r3, #22
 8003a8a:	d402      	bmi.n	8003a92 <_vfiprintf_r+0x2a>
 8003a8c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003a8e:	f7fe fcf0 	bl	8002472 <__retarget_lock_acquire_recursive>
 8003a92:	89ab      	ldrh	r3, [r5, #12]
 8003a94:	071b      	lsls	r3, r3, #28
 8003a96:	d501      	bpl.n	8003a9c <_vfiprintf_r+0x34>
 8003a98:	692b      	ldr	r3, [r5, #16]
 8003a9a:	b99b      	cbnz	r3, 8003ac4 <_vfiprintf_r+0x5c>
 8003a9c:	4629      	mov	r1, r5
 8003a9e:	4630      	mov	r0, r6
 8003aa0:	f7fe fc14 	bl	80022cc <__swsetup_r>
 8003aa4:	b170      	cbz	r0, 8003ac4 <_vfiprintf_r+0x5c>
 8003aa6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003aa8:	07dc      	lsls	r4, r3, #31
 8003aaa:	d504      	bpl.n	8003ab6 <_vfiprintf_r+0x4e>
 8003aac:	f04f 30ff 	mov.w	r0, #4294967295
 8003ab0:	b01d      	add	sp, #116	@ 0x74
 8003ab2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003ab6:	89ab      	ldrh	r3, [r5, #12]
 8003ab8:	0598      	lsls	r0, r3, #22
 8003aba:	d4f7      	bmi.n	8003aac <_vfiprintf_r+0x44>
 8003abc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003abe:	f7fe fcd9 	bl	8002474 <__retarget_lock_release_recursive>
 8003ac2:	e7f3      	b.n	8003aac <_vfiprintf_r+0x44>
 8003ac4:	2300      	movs	r3, #0
 8003ac6:	9309      	str	r3, [sp, #36]	@ 0x24
 8003ac8:	2320      	movs	r3, #32
 8003aca:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8003ace:	f8cd 800c 	str.w	r8, [sp, #12]
 8003ad2:	2330      	movs	r3, #48	@ 0x30
 8003ad4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8003c84 <_vfiprintf_r+0x21c>
 8003ad8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8003adc:	f04f 0901 	mov.w	r9, #1
 8003ae0:	4623      	mov	r3, r4
 8003ae2:	469a      	mov	sl, r3
 8003ae4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003ae8:	b10a      	cbz	r2, 8003aee <_vfiprintf_r+0x86>
 8003aea:	2a25      	cmp	r2, #37	@ 0x25
 8003aec:	d1f9      	bne.n	8003ae2 <_vfiprintf_r+0x7a>
 8003aee:	ebba 0b04 	subs.w	fp, sl, r4
 8003af2:	d00b      	beq.n	8003b0c <_vfiprintf_r+0xa4>
 8003af4:	465b      	mov	r3, fp
 8003af6:	4622      	mov	r2, r4
 8003af8:	4629      	mov	r1, r5
 8003afa:	4630      	mov	r0, r6
 8003afc:	f7ff ffa1 	bl	8003a42 <__sfputs_r>
 8003b00:	3001      	adds	r0, #1
 8003b02:	f000 80a7 	beq.w	8003c54 <_vfiprintf_r+0x1ec>
 8003b06:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8003b08:	445a      	add	r2, fp
 8003b0a:	9209      	str	r2, [sp, #36]	@ 0x24
 8003b0c:	f89a 3000 	ldrb.w	r3, [sl]
 8003b10:	2b00      	cmp	r3, #0
 8003b12:	f000 809f 	beq.w	8003c54 <_vfiprintf_r+0x1ec>
 8003b16:	2300      	movs	r3, #0
 8003b18:	f04f 32ff 	mov.w	r2, #4294967295
 8003b1c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003b20:	f10a 0a01 	add.w	sl, sl, #1
 8003b24:	9304      	str	r3, [sp, #16]
 8003b26:	9307      	str	r3, [sp, #28]
 8003b28:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8003b2c:	931a      	str	r3, [sp, #104]	@ 0x68
 8003b2e:	4654      	mov	r4, sl
 8003b30:	2205      	movs	r2, #5
 8003b32:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003b36:	4853      	ldr	r0, [pc, #332]	@ (8003c84 <_vfiprintf_r+0x21c>)
 8003b38:	f7fc fb52 	bl	80001e0 <memchr>
 8003b3c:	9a04      	ldr	r2, [sp, #16]
 8003b3e:	b9d8      	cbnz	r0, 8003b78 <_vfiprintf_r+0x110>
 8003b40:	06d1      	lsls	r1, r2, #27
 8003b42:	bf44      	itt	mi
 8003b44:	2320      	movmi	r3, #32
 8003b46:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003b4a:	0713      	lsls	r3, r2, #28
 8003b4c:	bf44      	itt	mi
 8003b4e:	232b      	movmi	r3, #43	@ 0x2b
 8003b50:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8003b54:	f89a 3000 	ldrb.w	r3, [sl]
 8003b58:	2b2a      	cmp	r3, #42	@ 0x2a
 8003b5a:	d015      	beq.n	8003b88 <_vfiprintf_r+0x120>
 8003b5c:	9a07      	ldr	r2, [sp, #28]
 8003b5e:	4654      	mov	r4, sl
 8003b60:	2000      	movs	r0, #0
 8003b62:	f04f 0c0a 	mov.w	ip, #10
 8003b66:	4621      	mov	r1, r4
 8003b68:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003b6c:	3b30      	subs	r3, #48	@ 0x30
 8003b6e:	2b09      	cmp	r3, #9
 8003b70:	d94b      	bls.n	8003c0a <_vfiprintf_r+0x1a2>
 8003b72:	b1b0      	cbz	r0, 8003ba2 <_vfiprintf_r+0x13a>
 8003b74:	9207      	str	r2, [sp, #28]
 8003b76:	e014      	b.n	8003ba2 <_vfiprintf_r+0x13a>
 8003b78:	eba0 0308 	sub.w	r3, r0, r8
 8003b7c:	fa09 f303 	lsl.w	r3, r9, r3
 8003b80:	4313      	orrs	r3, r2
 8003b82:	9304      	str	r3, [sp, #16]
 8003b84:	46a2      	mov	sl, r4
 8003b86:	e7d2      	b.n	8003b2e <_vfiprintf_r+0xc6>
 8003b88:	9b03      	ldr	r3, [sp, #12]
 8003b8a:	1d19      	adds	r1, r3, #4
 8003b8c:	681b      	ldr	r3, [r3, #0]
 8003b8e:	9103      	str	r1, [sp, #12]
 8003b90:	2b00      	cmp	r3, #0
 8003b92:	bfbb      	ittet	lt
 8003b94:	425b      	neglt	r3, r3
 8003b96:	f042 0202 	orrlt.w	r2, r2, #2
 8003b9a:	9307      	strge	r3, [sp, #28]
 8003b9c:	9307      	strlt	r3, [sp, #28]
 8003b9e:	bfb8      	it	lt
 8003ba0:	9204      	strlt	r2, [sp, #16]
 8003ba2:	7823      	ldrb	r3, [r4, #0]
 8003ba4:	2b2e      	cmp	r3, #46	@ 0x2e
 8003ba6:	d10a      	bne.n	8003bbe <_vfiprintf_r+0x156>
 8003ba8:	7863      	ldrb	r3, [r4, #1]
 8003baa:	2b2a      	cmp	r3, #42	@ 0x2a
 8003bac:	d132      	bne.n	8003c14 <_vfiprintf_r+0x1ac>
 8003bae:	9b03      	ldr	r3, [sp, #12]
 8003bb0:	1d1a      	adds	r2, r3, #4
 8003bb2:	681b      	ldr	r3, [r3, #0]
 8003bb4:	9203      	str	r2, [sp, #12]
 8003bb6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8003bba:	3402      	adds	r4, #2
 8003bbc:	9305      	str	r3, [sp, #20]
 8003bbe:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8003c94 <_vfiprintf_r+0x22c>
 8003bc2:	7821      	ldrb	r1, [r4, #0]
 8003bc4:	2203      	movs	r2, #3
 8003bc6:	4650      	mov	r0, sl
 8003bc8:	f7fc fb0a 	bl	80001e0 <memchr>
 8003bcc:	b138      	cbz	r0, 8003bde <_vfiprintf_r+0x176>
 8003bce:	9b04      	ldr	r3, [sp, #16]
 8003bd0:	eba0 000a 	sub.w	r0, r0, sl
 8003bd4:	2240      	movs	r2, #64	@ 0x40
 8003bd6:	4082      	lsls	r2, r0
 8003bd8:	4313      	orrs	r3, r2
 8003bda:	3401      	adds	r4, #1
 8003bdc:	9304      	str	r3, [sp, #16]
 8003bde:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003be2:	4829      	ldr	r0, [pc, #164]	@ (8003c88 <_vfiprintf_r+0x220>)
 8003be4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8003be8:	2206      	movs	r2, #6
 8003bea:	f7fc faf9 	bl	80001e0 <memchr>
 8003bee:	2800      	cmp	r0, #0
 8003bf0:	d03f      	beq.n	8003c72 <_vfiprintf_r+0x20a>
 8003bf2:	4b26      	ldr	r3, [pc, #152]	@ (8003c8c <_vfiprintf_r+0x224>)
 8003bf4:	bb1b      	cbnz	r3, 8003c3e <_vfiprintf_r+0x1d6>
 8003bf6:	9b03      	ldr	r3, [sp, #12]
 8003bf8:	3307      	adds	r3, #7
 8003bfa:	f023 0307 	bic.w	r3, r3, #7
 8003bfe:	3308      	adds	r3, #8
 8003c00:	9303      	str	r3, [sp, #12]
 8003c02:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8003c04:	443b      	add	r3, r7
 8003c06:	9309      	str	r3, [sp, #36]	@ 0x24
 8003c08:	e76a      	b.n	8003ae0 <_vfiprintf_r+0x78>
 8003c0a:	fb0c 3202 	mla	r2, ip, r2, r3
 8003c0e:	460c      	mov	r4, r1
 8003c10:	2001      	movs	r0, #1
 8003c12:	e7a8      	b.n	8003b66 <_vfiprintf_r+0xfe>
 8003c14:	2300      	movs	r3, #0
 8003c16:	3401      	adds	r4, #1
 8003c18:	9305      	str	r3, [sp, #20]
 8003c1a:	4619      	mov	r1, r3
 8003c1c:	f04f 0c0a 	mov.w	ip, #10
 8003c20:	4620      	mov	r0, r4
 8003c22:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003c26:	3a30      	subs	r2, #48	@ 0x30
 8003c28:	2a09      	cmp	r2, #9
 8003c2a:	d903      	bls.n	8003c34 <_vfiprintf_r+0x1cc>
 8003c2c:	2b00      	cmp	r3, #0
 8003c2e:	d0c6      	beq.n	8003bbe <_vfiprintf_r+0x156>
 8003c30:	9105      	str	r1, [sp, #20]
 8003c32:	e7c4      	b.n	8003bbe <_vfiprintf_r+0x156>
 8003c34:	fb0c 2101 	mla	r1, ip, r1, r2
 8003c38:	4604      	mov	r4, r0
 8003c3a:	2301      	movs	r3, #1
 8003c3c:	e7f0      	b.n	8003c20 <_vfiprintf_r+0x1b8>
 8003c3e:	ab03      	add	r3, sp, #12
 8003c40:	9300      	str	r3, [sp, #0]
 8003c42:	462a      	mov	r2, r5
 8003c44:	4b12      	ldr	r3, [pc, #72]	@ (8003c90 <_vfiprintf_r+0x228>)
 8003c46:	a904      	add	r1, sp, #16
 8003c48:	4630      	mov	r0, r6
 8003c4a:	f7fd fdd3 	bl	80017f4 <_printf_float>
 8003c4e:	4607      	mov	r7, r0
 8003c50:	1c78      	adds	r0, r7, #1
 8003c52:	d1d6      	bne.n	8003c02 <_vfiprintf_r+0x19a>
 8003c54:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8003c56:	07d9      	lsls	r1, r3, #31
 8003c58:	d405      	bmi.n	8003c66 <_vfiprintf_r+0x1fe>
 8003c5a:	89ab      	ldrh	r3, [r5, #12]
 8003c5c:	059a      	lsls	r2, r3, #22
 8003c5e:	d402      	bmi.n	8003c66 <_vfiprintf_r+0x1fe>
 8003c60:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8003c62:	f7fe fc07 	bl	8002474 <__retarget_lock_release_recursive>
 8003c66:	89ab      	ldrh	r3, [r5, #12]
 8003c68:	065b      	lsls	r3, r3, #25
 8003c6a:	f53f af1f 	bmi.w	8003aac <_vfiprintf_r+0x44>
 8003c6e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8003c70:	e71e      	b.n	8003ab0 <_vfiprintf_r+0x48>
 8003c72:	ab03      	add	r3, sp, #12
 8003c74:	9300      	str	r3, [sp, #0]
 8003c76:	462a      	mov	r2, r5
 8003c78:	4b05      	ldr	r3, [pc, #20]	@ (8003c90 <_vfiprintf_r+0x228>)
 8003c7a:	a904      	add	r1, sp, #16
 8003c7c:	4630      	mov	r0, r6
 8003c7e:	f7fe f851 	bl	8001d24 <_printf_i>
 8003c82:	e7e4      	b.n	8003c4e <_vfiprintf_r+0x1e6>
 8003c84:	08004338 	.word	0x08004338
 8003c88:	08004342 	.word	0x08004342
 8003c8c:	080017f5 	.word	0x080017f5
 8003c90:	08003a43 	.word	0x08003a43
 8003c94:	0800433e 	.word	0x0800433e

08003c98 <__sflush_r>:
 8003c98:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8003c9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003ca0:	0716      	lsls	r6, r2, #28
 8003ca2:	4605      	mov	r5, r0
 8003ca4:	460c      	mov	r4, r1
 8003ca6:	d454      	bmi.n	8003d52 <__sflush_r+0xba>
 8003ca8:	684b      	ldr	r3, [r1, #4]
 8003caa:	2b00      	cmp	r3, #0
 8003cac:	dc02      	bgt.n	8003cb4 <__sflush_r+0x1c>
 8003cae:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8003cb0:	2b00      	cmp	r3, #0
 8003cb2:	dd48      	ble.n	8003d46 <__sflush_r+0xae>
 8003cb4:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003cb6:	2e00      	cmp	r6, #0
 8003cb8:	d045      	beq.n	8003d46 <__sflush_r+0xae>
 8003cba:	2300      	movs	r3, #0
 8003cbc:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8003cc0:	682f      	ldr	r7, [r5, #0]
 8003cc2:	6a21      	ldr	r1, [r4, #32]
 8003cc4:	602b      	str	r3, [r5, #0]
 8003cc6:	d030      	beq.n	8003d2a <__sflush_r+0x92>
 8003cc8:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8003cca:	89a3      	ldrh	r3, [r4, #12]
 8003ccc:	0759      	lsls	r1, r3, #29
 8003cce:	d505      	bpl.n	8003cdc <__sflush_r+0x44>
 8003cd0:	6863      	ldr	r3, [r4, #4]
 8003cd2:	1ad2      	subs	r2, r2, r3
 8003cd4:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8003cd6:	b10b      	cbz	r3, 8003cdc <__sflush_r+0x44>
 8003cd8:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8003cda:	1ad2      	subs	r2, r2, r3
 8003cdc:	2300      	movs	r3, #0
 8003cde:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8003ce0:	6a21      	ldr	r1, [r4, #32]
 8003ce2:	4628      	mov	r0, r5
 8003ce4:	47b0      	blx	r6
 8003ce6:	1c43      	adds	r3, r0, #1
 8003ce8:	89a3      	ldrh	r3, [r4, #12]
 8003cea:	d106      	bne.n	8003cfa <__sflush_r+0x62>
 8003cec:	6829      	ldr	r1, [r5, #0]
 8003cee:	291d      	cmp	r1, #29
 8003cf0:	d82b      	bhi.n	8003d4a <__sflush_r+0xb2>
 8003cf2:	4a2a      	ldr	r2, [pc, #168]	@ (8003d9c <__sflush_r+0x104>)
 8003cf4:	410a      	asrs	r2, r1
 8003cf6:	07d6      	lsls	r6, r2, #31
 8003cf8:	d427      	bmi.n	8003d4a <__sflush_r+0xb2>
 8003cfa:	2200      	movs	r2, #0
 8003cfc:	6062      	str	r2, [r4, #4]
 8003cfe:	04d9      	lsls	r1, r3, #19
 8003d00:	6922      	ldr	r2, [r4, #16]
 8003d02:	6022      	str	r2, [r4, #0]
 8003d04:	d504      	bpl.n	8003d10 <__sflush_r+0x78>
 8003d06:	1c42      	adds	r2, r0, #1
 8003d08:	d101      	bne.n	8003d0e <__sflush_r+0x76>
 8003d0a:	682b      	ldr	r3, [r5, #0]
 8003d0c:	b903      	cbnz	r3, 8003d10 <__sflush_r+0x78>
 8003d0e:	6560      	str	r0, [r4, #84]	@ 0x54
 8003d10:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8003d12:	602f      	str	r7, [r5, #0]
 8003d14:	b1b9      	cbz	r1, 8003d46 <__sflush_r+0xae>
 8003d16:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8003d1a:	4299      	cmp	r1, r3
 8003d1c:	d002      	beq.n	8003d24 <__sflush_r+0x8c>
 8003d1e:	4628      	mov	r0, r5
 8003d20:	f7ff f9f6 	bl	8003110 <_free_r>
 8003d24:	2300      	movs	r3, #0
 8003d26:	6363      	str	r3, [r4, #52]	@ 0x34
 8003d28:	e00d      	b.n	8003d46 <__sflush_r+0xae>
 8003d2a:	2301      	movs	r3, #1
 8003d2c:	4628      	mov	r0, r5
 8003d2e:	47b0      	blx	r6
 8003d30:	4602      	mov	r2, r0
 8003d32:	1c50      	adds	r0, r2, #1
 8003d34:	d1c9      	bne.n	8003cca <__sflush_r+0x32>
 8003d36:	682b      	ldr	r3, [r5, #0]
 8003d38:	2b00      	cmp	r3, #0
 8003d3a:	d0c6      	beq.n	8003cca <__sflush_r+0x32>
 8003d3c:	2b1d      	cmp	r3, #29
 8003d3e:	d001      	beq.n	8003d44 <__sflush_r+0xac>
 8003d40:	2b16      	cmp	r3, #22
 8003d42:	d11e      	bne.n	8003d82 <__sflush_r+0xea>
 8003d44:	602f      	str	r7, [r5, #0]
 8003d46:	2000      	movs	r0, #0
 8003d48:	e022      	b.n	8003d90 <__sflush_r+0xf8>
 8003d4a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003d4e:	b21b      	sxth	r3, r3
 8003d50:	e01b      	b.n	8003d8a <__sflush_r+0xf2>
 8003d52:	690f      	ldr	r7, [r1, #16]
 8003d54:	2f00      	cmp	r7, #0
 8003d56:	d0f6      	beq.n	8003d46 <__sflush_r+0xae>
 8003d58:	0793      	lsls	r3, r2, #30
 8003d5a:	680e      	ldr	r6, [r1, #0]
 8003d5c:	bf08      	it	eq
 8003d5e:	694b      	ldreq	r3, [r1, #20]
 8003d60:	600f      	str	r7, [r1, #0]
 8003d62:	bf18      	it	ne
 8003d64:	2300      	movne	r3, #0
 8003d66:	eba6 0807 	sub.w	r8, r6, r7
 8003d6a:	608b      	str	r3, [r1, #8]
 8003d6c:	f1b8 0f00 	cmp.w	r8, #0
 8003d70:	dde9      	ble.n	8003d46 <__sflush_r+0xae>
 8003d72:	6a21      	ldr	r1, [r4, #32]
 8003d74:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8003d76:	4643      	mov	r3, r8
 8003d78:	463a      	mov	r2, r7
 8003d7a:	4628      	mov	r0, r5
 8003d7c:	47b0      	blx	r6
 8003d7e:	2800      	cmp	r0, #0
 8003d80:	dc08      	bgt.n	8003d94 <__sflush_r+0xfc>
 8003d82:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003d86:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003d8a:	81a3      	strh	r3, [r4, #12]
 8003d8c:	f04f 30ff 	mov.w	r0, #4294967295
 8003d90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003d94:	4407      	add	r7, r0
 8003d96:	eba8 0800 	sub.w	r8, r8, r0
 8003d9a:	e7e7      	b.n	8003d6c <__sflush_r+0xd4>
 8003d9c:	dfbffffe 	.word	0xdfbffffe

08003da0 <_fflush_r>:
 8003da0:	b538      	push	{r3, r4, r5, lr}
 8003da2:	690b      	ldr	r3, [r1, #16]
 8003da4:	4605      	mov	r5, r0
 8003da6:	460c      	mov	r4, r1
 8003da8:	b913      	cbnz	r3, 8003db0 <_fflush_r+0x10>
 8003daa:	2500      	movs	r5, #0
 8003dac:	4628      	mov	r0, r5
 8003dae:	bd38      	pop	{r3, r4, r5, pc}
 8003db0:	b118      	cbz	r0, 8003dba <_fflush_r+0x1a>
 8003db2:	6a03      	ldr	r3, [r0, #32]
 8003db4:	b90b      	cbnz	r3, 8003dba <_fflush_r+0x1a>
 8003db6:	f7fe f961 	bl	800207c <__sinit>
 8003dba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003dbe:	2b00      	cmp	r3, #0
 8003dc0:	d0f3      	beq.n	8003daa <_fflush_r+0xa>
 8003dc2:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8003dc4:	07d0      	lsls	r0, r2, #31
 8003dc6:	d404      	bmi.n	8003dd2 <_fflush_r+0x32>
 8003dc8:	0599      	lsls	r1, r3, #22
 8003dca:	d402      	bmi.n	8003dd2 <_fflush_r+0x32>
 8003dcc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003dce:	f7fe fb50 	bl	8002472 <__retarget_lock_acquire_recursive>
 8003dd2:	4628      	mov	r0, r5
 8003dd4:	4621      	mov	r1, r4
 8003dd6:	f7ff ff5f 	bl	8003c98 <__sflush_r>
 8003dda:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8003ddc:	07da      	lsls	r2, r3, #31
 8003dde:	4605      	mov	r5, r0
 8003de0:	d4e4      	bmi.n	8003dac <_fflush_r+0xc>
 8003de2:	89a3      	ldrh	r3, [r4, #12]
 8003de4:	059b      	lsls	r3, r3, #22
 8003de6:	d4e1      	bmi.n	8003dac <_fflush_r+0xc>
 8003de8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8003dea:	f7fe fb43 	bl	8002474 <__retarget_lock_release_recursive>
 8003dee:	e7dd      	b.n	8003dac <_fflush_r+0xc>

08003df0 <__swhatbuf_r>:
 8003df0:	b570      	push	{r4, r5, r6, lr}
 8003df2:	460c      	mov	r4, r1
 8003df4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003df8:	2900      	cmp	r1, #0
 8003dfa:	b096      	sub	sp, #88	@ 0x58
 8003dfc:	4615      	mov	r5, r2
 8003dfe:	461e      	mov	r6, r3
 8003e00:	da0d      	bge.n	8003e1e <__swhatbuf_r+0x2e>
 8003e02:	89a3      	ldrh	r3, [r4, #12]
 8003e04:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8003e08:	f04f 0100 	mov.w	r1, #0
 8003e0c:	bf14      	ite	ne
 8003e0e:	2340      	movne	r3, #64	@ 0x40
 8003e10:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8003e14:	2000      	movs	r0, #0
 8003e16:	6031      	str	r1, [r6, #0]
 8003e18:	602b      	str	r3, [r5, #0]
 8003e1a:	b016      	add	sp, #88	@ 0x58
 8003e1c:	bd70      	pop	{r4, r5, r6, pc}
 8003e1e:	466a      	mov	r2, sp
 8003e20:	f000 f848 	bl	8003eb4 <_fstat_r>
 8003e24:	2800      	cmp	r0, #0
 8003e26:	dbec      	blt.n	8003e02 <__swhatbuf_r+0x12>
 8003e28:	9901      	ldr	r1, [sp, #4]
 8003e2a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8003e2e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8003e32:	4259      	negs	r1, r3
 8003e34:	4159      	adcs	r1, r3
 8003e36:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8003e3a:	e7eb      	b.n	8003e14 <__swhatbuf_r+0x24>

08003e3c <__smakebuf_r>:
 8003e3c:	898b      	ldrh	r3, [r1, #12]
 8003e3e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8003e40:	079d      	lsls	r5, r3, #30
 8003e42:	4606      	mov	r6, r0
 8003e44:	460c      	mov	r4, r1
 8003e46:	d507      	bpl.n	8003e58 <__smakebuf_r+0x1c>
 8003e48:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8003e4c:	6023      	str	r3, [r4, #0]
 8003e4e:	6123      	str	r3, [r4, #16]
 8003e50:	2301      	movs	r3, #1
 8003e52:	6163      	str	r3, [r4, #20]
 8003e54:	b003      	add	sp, #12
 8003e56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003e58:	ab01      	add	r3, sp, #4
 8003e5a:	466a      	mov	r2, sp
 8003e5c:	f7ff ffc8 	bl	8003df0 <__swhatbuf_r>
 8003e60:	9f00      	ldr	r7, [sp, #0]
 8003e62:	4605      	mov	r5, r0
 8003e64:	4639      	mov	r1, r7
 8003e66:	4630      	mov	r0, r6
 8003e68:	f7ff f9c6 	bl	80031f8 <_malloc_r>
 8003e6c:	b948      	cbnz	r0, 8003e82 <__smakebuf_r+0x46>
 8003e6e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003e72:	059a      	lsls	r2, r3, #22
 8003e74:	d4ee      	bmi.n	8003e54 <__smakebuf_r+0x18>
 8003e76:	f023 0303 	bic.w	r3, r3, #3
 8003e7a:	f043 0302 	orr.w	r3, r3, #2
 8003e7e:	81a3      	strh	r3, [r4, #12]
 8003e80:	e7e2      	b.n	8003e48 <__smakebuf_r+0xc>
 8003e82:	89a3      	ldrh	r3, [r4, #12]
 8003e84:	6020      	str	r0, [r4, #0]
 8003e86:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003e8a:	81a3      	strh	r3, [r4, #12]
 8003e8c:	9b01      	ldr	r3, [sp, #4]
 8003e8e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8003e92:	b15b      	cbz	r3, 8003eac <__smakebuf_r+0x70>
 8003e94:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003e98:	4630      	mov	r0, r6
 8003e9a:	f000 f81d 	bl	8003ed8 <_isatty_r>
 8003e9e:	b128      	cbz	r0, 8003eac <__smakebuf_r+0x70>
 8003ea0:	89a3      	ldrh	r3, [r4, #12]
 8003ea2:	f023 0303 	bic.w	r3, r3, #3
 8003ea6:	f043 0301 	orr.w	r3, r3, #1
 8003eaa:	81a3      	strh	r3, [r4, #12]
 8003eac:	89a3      	ldrh	r3, [r4, #12]
 8003eae:	431d      	orrs	r5, r3
 8003eb0:	81a5      	strh	r5, [r4, #12]
 8003eb2:	e7cf      	b.n	8003e54 <__smakebuf_r+0x18>

08003eb4 <_fstat_r>:
 8003eb4:	b538      	push	{r3, r4, r5, lr}
 8003eb6:	4d07      	ldr	r5, [pc, #28]	@ (8003ed4 <_fstat_r+0x20>)
 8003eb8:	2300      	movs	r3, #0
 8003eba:	4604      	mov	r4, r0
 8003ebc:	4608      	mov	r0, r1
 8003ebe:	4611      	mov	r1, r2
 8003ec0:	602b      	str	r3, [r5, #0]
 8003ec2:	f7fd fb71 	bl	80015a8 <_fstat>
 8003ec6:	1c43      	adds	r3, r0, #1
 8003ec8:	d102      	bne.n	8003ed0 <_fstat_r+0x1c>
 8003eca:	682b      	ldr	r3, [r5, #0]
 8003ecc:	b103      	cbz	r3, 8003ed0 <_fstat_r+0x1c>
 8003ece:	6023      	str	r3, [r4, #0]
 8003ed0:	bd38      	pop	{r3, r4, r5, pc}
 8003ed2:	bf00      	nop
 8003ed4:	20000324 	.word	0x20000324

08003ed8 <_isatty_r>:
 8003ed8:	b538      	push	{r3, r4, r5, lr}
 8003eda:	4d06      	ldr	r5, [pc, #24]	@ (8003ef4 <_isatty_r+0x1c>)
 8003edc:	2300      	movs	r3, #0
 8003ede:	4604      	mov	r4, r0
 8003ee0:	4608      	mov	r0, r1
 8003ee2:	602b      	str	r3, [r5, #0]
 8003ee4:	f7fd fb70 	bl	80015c8 <_isatty>
 8003ee8:	1c43      	adds	r3, r0, #1
 8003eea:	d102      	bne.n	8003ef2 <_isatty_r+0x1a>
 8003eec:	682b      	ldr	r3, [r5, #0]
 8003eee:	b103      	cbz	r3, 8003ef2 <_isatty_r+0x1a>
 8003ef0:	6023      	str	r3, [r4, #0]
 8003ef2:	bd38      	pop	{r3, r4, r5, pc}
 8003ef4:	20000324 	.word	0x20000324

08003ef8 <_sbrk_r>:
 8003ef8:	b538      	push	{r3, r4, r5, lr}
 8003efa:	4d06      	ldr	r5, [pc, #24]	@ (8003f14 <_sbrk_r+0x1c>)
 8003efc:	2300      	movs	r3, #0
 8003efe:	4604      	mov	r4, r0
 8003f00:	4608      	mov	r0, r1
 8003f02:	602b      	str	r3, [r5, #0]
 8003f04:	f7fd fb78 	bl	80015f8 <_sbrk>
 8003f08:	1c43      	adds	r3, r0, #1
 8003f0a:	d102      	bne.n	8003f12 <_sbrk_r+0x1a>
 8003f0c:	682b      	ldr	r3, [r5, #0]
 8003f0e:	b103      	cbz	r3, 8003f12 <_sbrk_r+0x1a>
 8003f10:	6023      	str	r3, [r4, #0]
 8003f12:	bd38      	pop	{r3, r4, r5, pc}
 8003f14:	20000324 	.word	0x20000324

08003f18 <memcpy>:
 8003f18:	440a      	add	r2, r1
 8003f1a:	4291      	cmp	r1, r2
 8003f1c:	f100 33ff 	add.w	r3, r0, #4294967295
 8003f20:	d100      	bne.n	8003f24 <memcpy+0xc>
 8003f22:	4770      	bx	lr
 8003f24:	b510      	push	{r4, lr}
 8003f26:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003f2a:	f803 4f01 	strb.w	r4, [r3, #1]!
 8003f2e:	4291      	cmp	r1, r2
 8003f30:	d1f9      	bne.n	8003f26 <memcpy+0xe>
 8003f32:	bd10      	pop	{r4, pc}

08003f34 <__assert_func>:
 8003f34:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003f36:	4614      	mov	r4, r2
 8003f38:	461a      	mov	r2, r3
 8003f3a:	4b09      	ldr	r3, [pc, #36]	@ (8003f60 <__assert_func+0x2c>)
 8003f3c:	681b      	ldr	r3, [r3, #0]
 8003f3e:	4605      	mov	r5, r0
 8003f40:	68d8      	ldr	r0, [r3, #12]
 8003f42:	b954      	cbnz	r4, 8003f5a <__assert_func+0x26>
 8003f44:	4b07      	ldr	r3, [pc, #28]	@ (8003f64 <__assert_func+0x30>)
 8003f46:	461c      	mov	r4, r3
 8003f48:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003f4c:	9100      	str	r1, [sp, #0]
 8003f4e:	462b      	mov	r3, r5
 8003f50:	4905      	ldr	r1, [pc, #20]	@ (8003f68 <__assert_func+0x34>)
 8003f52:	f000 f841 	bl	8003fd8 <fiprintf>
 8003f56:	f000 f851 	bl	8003ffc <abort>
 8003f5a:	4b04      	ldr	r3, [pc, #16]	@ (8003f6c <__assert_func+0x38>)
 8003f5c:	e7f4      	b.n	8003f48 <__assert_func+0x14>
 8003f5e:	bf00      	nop
 8003f60:	2000000c 	.word	0x2000000c
 8003f64:	0800438e 	.word	0x0800438e
 8003f68:	08004360 	.word	0x08004360
 8003f6c:	08004353 	.word	0x08004353

08003f70 <_calloc_r>:
 8003f70:	b570      	push	{r4, r5, r6, lr}
 8003f72:	fba1 5402 	umull	r5, r4, r1, r2
 8003f76:	b93c      	cbnz	r4, 8003f88 <_calloc_r+0x18>
 8003f78:	4629      	mov	r1, r5
 8003f7a:	f7ff f93d 	bl	80031f8 <_malloc_r>
 8003f7e:	4606      	mov	r6, r0
 8003f80:	b928      	cbnz	r0, 8003f8e <_calloc_r+0x1e>
 8003f82:	2600      	movs	r6, #0
 8003f84:	4630      	mov	r0, r6
 8003f86:	bd70      	pop	{r4, r5, r6, pc}
 8003f88:	220c      	movs	r2, #12
 8003f8a:	6002      	str	r2, [r0, #0]
 8003f8c:	e7f9      	b.n	8003f82 <_calloc_r+0x12>
 8003f8e:	462a      	mov	r2, r5
 8003f90:	4621      	mov	r1, r4
 8003f92:	f7fe f9f1 	bl	8002378 <memset>
 8003f96:	e7f5      	b.n	8003f84 <_calloc_r+0x14>

08003f98 <__ascii_mbtowc>:
 8003f98:	b082      	sub	sp, #8
 8003f9a:	b901      	cbnz	r1, 8003f9e <__ascii_mbtowc+0x6>
 8003f9c:	a901      	add	r1, sp, #4
 8003f9e:	b142      	cbz	r2, 8003fb2 <__ascii_mbtowc+0x1a>
 8003fa0:	b14b      	cbz	r3, 8003fb6 <__ascii_mbtowc+0x1e>
 8003fa2:	7813      	ldrb	r3, [r2, #0]
 8003fa4:	600b      	str	r3, [r1, #0]
 8003fa6:	7812      	ldrb	r2, [r2, #0]
 8003fa8:	1e10      	subs	r0, r2, #0
 8003faa:	bf18      	it	ne
 8003fac:	2001      	movne	r0, #1
 8003fae:	b002      	add	sp, #8
 8003fb0:	4770      	bx	lr
 8003fb2:	4610      	mov	r0, r2
 8003fb4:	e7fb      	b.n	8003fae <__ascii_mbtowc+0x16>
 8003fb6:	f06f 0001 	mvn.w	r0, #1
 8003fba:	e7f8      	b.n	8003fae <__ascii_mbtowc+0x16>

08003fbc <__ascii_wctomb>:
 8003fbc:	4603      	mov	r3, r0
 8003fbe:	4608      	mov	r0, r1
 8003fc0:	b141      	cbz	r1, 8003fd4 <__ascii_wctomb+0x18>
 8003fc2:	2aff      	cmp	r2, #255	@ 0xff
 8003fc4:	d904      	bls.n	8003fd0 <__ascii_wctomb+0x14>
 8003fc6:	228a      	movs	r2, #138	@ 0x8a
 8003fc8:	601a      	str	r2, [r3, #0]
 8003fca:	f04f 30ff 	mov.w	r0, #4294967295
 8003fce:	4770      	bx	lr
 8003fd0:	700a      	strb	r2, [r1, #0]
 8003fd2:	2001      	movs	r0, #1
 8003fd4:	4770      	bx	lr
	...

08003fd8 <fiprintf>:
 8003fd8:	b40e      	push	{r1, r2, r3}
 8003fda:	b503      	push	{r0, r1, lr}
 8003fdc:	4601      	mov	r1, r0
 8003fde:	ab03      	add	r3, sp, #12
 8003fe0:	4805      	ldr	r0, [pc, #20]	@ (8003ff8 <fiprintf+0x20>)
 8003fe2:	f853 2b04 	ldr.w	r2, [r3], #4
 8003fe6:	6800      	ldr	r0, [r0, #0]
 8003fe8:	9301      	str	r3, [sp, #4]
 8003fea:	f7ff fd3d 	bl	8003a68 <_vfiprintf_r>
 8003fee:	b002      	add	sp, #8
 8003ff0:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ff4:	b003      	add	sp, #12
 8003ff6:	4770      	bx	lr
 8003ff8:	2000000c 	.word	0x2000000c

08003ffc <abort>:
 8003ffc:	b508      	push	{r3, lr}
 8003ffe:	2006      	movs	r0, #6
 8004000:	f000 f82c 	bl	800405c <raise>
 8004004:	2001      	movs	r0, #1
 8004006:	f7fd fa7f 	bl	8001508 <_exit>

0800400a <_raise_r>:
 800400a:	291f      	cmp	r1, #31
 800400c:	b538      	push	{r3, r4, r5, lr}
 800400e:	4605      	mov	r5, r0
 8004010:	460c      	mov	r4, r1
 8004012:	d904      	bls.n	800401e <_raise_r+0x14>
 8004014:	2316      	movs	r3, #22
 8004016:	6003      	str	r3, [r0, #0]
 8004018:	f04f 30ff 	mov.w	r0, #4294967295
 800401c:	bd38      	pop	{r3, r4, r5, pc}
 800401e:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8004020:	b112      	cbz	r2, 8004028 <_raise_r+0x1e>
 8004022:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8004026:	b94b      	cbnz	r3, 800403c <_raise_r+0x32>
 8004028:	4628      	mov	r0, r5
 800402a:	f000 f831 	bl	8004090 <_getpid_r>
 800402e:	4622      	mov	r2, r4
 8004030:	4601      	mov	r1, r0
 8004032:	4628      	mov	r0, r5
 8004034:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004038:	f000 b818 	b.w	800406c <_kill_r>
 800403c:	2b01      	cmp	r3, #1
 800403e:	d00a      	beq.n	8004056 <_raise_r+0x4c>
 8004040:	1c59      	adds	r1, r3, #1
 8004042:	d103      	bne.n	800404c <_raise_r+0x42>
 8004044:	2316      	movs	r3, #22
 8004046:	6003      	str	r3, [r0, #0]
 8004048:	2001      	movs	r0, #1
 800404a:	e7e7      	b.n	800401c <_raise_r+0x12>
 800404c:	2100      	movs	r1, #0
 800404e:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8004052:	4620      	mov	r0, r4
 8004054:	4798      	blx	r3
 8004056:	2000      	movs	r0, #0
 8004058:	e7e0      	b.n	800401c <_raise_r+0x12>
	...

0800405c <raise>:
 800405c:	4b02      	ldr	r3, [pc, #8]	@ (8004068 <raise+0xc>)
 800405e:	4601      	mov	r1, r0
 8004060:	6818      	ldr	r0, [r3, #0]
 8004062:	f7ff bfd2 	b.w	800400a <_raise_r>
 8004066:	bf00      	nop
 8004068:	2000000c 	.word	0x2000000c

0800406c <_kill_r>:
 800406c:	b538      	push	{r3, r4, r5, lr}
 800406e:	4d07      	ldr	r5, [pc, #28]	@ (800408c <_kill_r+0x20>)
 8004070:	2300      	movs	r3, #0
 8004072:	4604      	mov	r4, r0
 8004074:	4608      	mov	r0, r1
 8004076:	4611      	mov	r1, r2
 8004078:	602b      	str	r3, [r5, #0]
 800407a:	f7fd fa35 	bl	80014e8 <_kill>
 800407e:	1c43      	adds	r3, r0, #1
 8004080:	d102      	bne.n	8004088 <_kill_r+0x1c>
 8004082:	682b      	ldr	r3, [r5, #0]
 8004084:	b103      	cbz	r3, 8004088 <_kill_r+0x1c>
 8004086:	6023      	str	r3, [r4, #0]
 8004088:	bd38      	pop	{r3, r4, r5, pc}
 800408a:	bf00      	nop
 800408c:	20000324 	.word	0x20000324

08004090 <_getpid_r>:
 8004090:	f7fd ba22 	b.w	80014d8 <_getpid>

08004094 <_init>:
 8004094:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004096:	bf00      	nop
 8004098:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800409a:	bc08      	pop	{r3}
 800409c:	469e      	mov	lr, r3
 800409e:	4770      	bx	lr

080040a0 <_fini>:
 80040a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040a2:	bf00      	nop
 80040a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80040a6:	bc08      	pop	{r3}
 80040a8:	469e      	mov	lr, r3
 80040aa:	4770      	bx	lr
